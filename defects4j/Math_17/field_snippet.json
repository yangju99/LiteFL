[
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.FLAG_INVALID",
        "snippet": "    public static final int FLAG_INVALID   =  1;",
        "begin_line": 61,
        "end_line": 61,
        "comment": " IEEE 854-1987 flag for invalid operation. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.FLAG_DIV_ZERO",
        "snippet": "    public static final int FLAG_DIV_ZERO  =  2;",
        "begin_line": 64,
        "end_line": 64,
        "comment": " IEEE 854-1987 flag for division by zero. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.FLAG_OVERFLOW",
        "snippet": "    public static final int FLAG_OVERFLOW  =  4;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " IEEE 854-1987 flag for overflow. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.FLAG_UNDERFLOW",
        "snippet": "    public static final int FLAG_UNDERFLOW =  8;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " IEEE 854-1987 flag for underflow. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.FLAG_INEXACT",
        "snippet": "    public static final int FLAG_INEXACT   = 16;",
        "begin_line": 73,
        "end_line": 73,
        "comment": " IEEE 854-1987 flag for inexact result. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr2String",
        "snippet": "    private static String sqr2String;",
        "begin_line": 76,
        "end_line": 76,
        "comment": " High precision string representation of &radic;2. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr2ReciprocalString",
        "snippet": "    private static String sqr2ReciprocalString;",
        "begin_line": 81,
        "end_line": 81,
        "comment": " High precision string representation of &radic;2 / 2. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr3String",
        "snippet": "    private static String sqr3String;",
        "begin_line": 84,
        "end_line": 84,
        "comment": " High precision string representation of &radic;3. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr3ReciprocalString",
        "snippet": "    private static String sqr3ReciprocalString;",
        "begin_line": 87,
        "end_line": 87,
        "comment": " High precision string representation of &radic;3 / 3. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.piString",
        "snippet": "    private static String piString;",
        "begin_line": 90,
        "end_line": 90,
        "comment": " High precision string representation of &pi;. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.eString",
        "snippet": "    private static String eString;",
        "begin_line": 93,
        "end_line": 93,
        "comment": " High precision string representation of e. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ln2String",
        "snippet": "    private static String ln2String;",
        "begin_line": 96,
        "end_line": 96,
        "comment": " High precision string representation of ln(2). "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ln5String",
        "snippet": "    private static String ln5String;",
        "begin_line": 99,
        "end_line": 99,
        "comment": " High precision string representation of ln(5). "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ln10String",
        "snippet": "    private static String ln10String;",
        "begin_line": 102,
        "end_line": 102,
        "comment": " High precision string representation of ln(10). "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.radixDigits",
        "snippet": "    private final int radixDigits;",
        "begin_line": 108,
        "end_line": 108,
        "comment": " The number of radix digits.\n     * Note these depend on the radix which is 10000 digits,\n     * so each one is equivalent to 4 decimal digits.\n     "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.zero",
        "snippet": "    private final Dfp zero;",
        "begin_line": 111,
        "end_line": 111,
        "comment": " A {@link Dfp} with value 0. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.one",
        "snippet": "    private final Dfp one;",
        "begin_line": 114,
        "end_line": 114,
        "comment": " A {@link Dfp} with value 1. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.two",
        "snippet": "    private final Dfp two;",
        "begin_line": 117,
        "end_line": 117,
        "comment": " A {@link Dfp} with value 2. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr2",
        "snippet": "    private final Dfp sqr2;",
        "begin_line": 120,
        "end_line": 120,
        "comment": " A {@link Dfp} with value &radic;2. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr2Split",
        "snippet": "    private final Dfp[] sqr2Split;",
        "begin_line": 123,
        "end_line": 123,
        "comment": " A two elements {@link Dfp} array with value &radic;2 split in two pieces. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr2Reciprocal",
        "snippet": "    private final Dfp sqr2Reciprocal;",
        "begin_line": 126,
        "end_line": 126,
        "comment": " A {@link Dfp} with value &radic;2 / 2. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr3",
        "snippet": "    private final Dfp sqr3;",
        "begin_line": 129,
        "end_line": 129,
        "comment": " A {@link Dfp} with value &radic;3. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.sqr3Reciprocal",
        "snippet": "    private final Dfp sqr3Reciprocal;",
        "begin_line": 132,
        "end_line": 132,
        "comment": " A {@link Dfp} with value &radic;3 / 3. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.pi",
        "snippet": "    private final Dfp pi;",
        "begin_line": 135,
        "end_line": 135,
        "comment": " A {@link Dfp} with value &pi;. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.piSplit",
        "snippet": "    private final Dfp[] piSplit;",
        "begin_line": 138,
        "end_line": 138,
        "comment": " A two elements {@link Dfp} array with value &pi; split in two pieces. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.e",
        "snippet": "    private final Dfp e;",
        "begin_line": 141,
        "end_line": 141,
        "comment": " A {@link Dfp} with value e. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.eSplit",
        "snippet": "    private final Dfp[] eSplit;",
        "begin_line": 144,
        "end_line": 144,
        "comment": " A two elements {@link Dfp} array with value e split in two pieces. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ln2",
        "snippet": "    private final Dfp ln2;",
        "begin_line": 147,
        "end_line": 147,
        "comment": " A {@link Dfp} with value ln(2). "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ln2Split",
        "snippet": "    private final Dfp[] ln2Split;",
        "begin_line": 150,
        "end_line": 150,
        "comment": " A two elements {@link Dfp} array with value ln(2) split in two pieces. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ln5",
        "snippet": "    private final Dfp ln5;",
        "begin_line": 153,
        "end_line": 153,
        "comment": " A {@link Dfp} with value ln(5). "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ln5Split",
        "snippet": "    private final Dfp[] ln5Split;",
        "begin_line": 156,
        "end_line": 156,
        "comment": " A two elements {@link Dfp} array with value ln(5) split in two pieces. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ln10",
        "snippet": "    private final Dfp ln10;",
        "begin_line": 159,
        "end_line": 159,
        "comment": " A {@link Dfp} with value ln(10). "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.rMode",
        "snippet": "    private RoundingMode rMode;",
        "begin_line": 162,
        "end_line": 162,
        "comment": " Current rounding mode. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.DfpField",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/DfpField.java",
        "signature": "org.apache.commons.math3.dfp.DfpField.ieeeFlags",
        "snippet": "    private int ieeeFlags;",
        "begin_line": 165,
        "end_line": 165,
        "comment": " IEEE 854-1987 signals. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.RADIX",
        "snippet": "    public static final int RADIX = 10000;",
        "begin_line": 99,
        "end_line": 99,
        "comment": " The radix, or base of this system.  Set to 10000 "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.MIN_EXP",
        "snippet": "    public static final int MIN_EXP = -32767;",
        "begin_line": 103,
        "end_line": 103,
        "comment": " The minimum exponent before underflow is signaled.  Flush to zero\n     *  occurs at minExp-DIGITS "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.MAX_EXP",
        "snippet": "    public static final int MAX_EXP =  32768;",
        "begin_line": 107,
        "end_line": 107,
        "comment": " The maximum exponent before overflow is signaled and results flushed\n     *  to infinity "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.ERR_SCALE",
        "snippet": "    public static final int ERR_SCALE = 32760;",
        "begin_line": 110,
        "end_line": 110,
        "comment": " The amount under/overflows are scaled by before going to trap handler "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.FINITE",
        "snippet": "    public static final byte FINITE = 0;",
        "begin_line": 113,
        "end_line": 113,
        "comment": " Indicator value for normal finite numbers. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.INFINITE",
        "snippet": "    public static final byte INFINITE = 1;",
        "begin_line": 116,
        "end_line": 116,
        "comment": " Indicator value for Infinity. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.SNAN",
        "snippet": "    public static final byte SNAN = 2;",
        "begin_line": 119,
        "end_line": 119,
        "comment": " Indicator value for signaling NaN. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.QNAN",
        "snippet": "    public static final byte QNAN = 3;",
        "begin_line": 122,
        "end_line": 122,
        "comment": " Indicator value for quiet NaN. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.NAN_STRING",
        "snippet": "    private static final String NAN_STRING = \"NaN\";",
        "begin_line": 125,
        "end_line": 125,
        "comment": " String for NaN representation. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.POS_INFINITY_STRING",
        "snippet": "    private static final String POS_INFINITY_STRING = \"Infinity\";",
        "begin_line": 128,
        "end_line": 128,
        "comment": " String for positive infinity representation. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.NEG_INFINITY_STRING",
        "snippet": "    private static final String NEG_INFINITY_STRING = \"-Infinity\";",
        "begin_line": 131,
        "end_line": 131,
        "comment": " String for negative infinity representation. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.ADD_TRAP",
        "snippet": "    private static final String ADD_TRAP = \"add\";",
        "begin_line": 134,
        "end_line": 134,
        "comment": " Name for traps triggered by addition. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.MULTIPLY_TRAP",
        "snippet": "    private static final String MULTIPLY_TRAP = \"multiply\";",
        "begin_line": 137,
        "end_line": 137,
        "comment": " Name for traps triggered by multiplication. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.DIVIDE_TRAP",
        "snippet": "    private static final String DIVIDE_TRAP = \"divide\";",
        "begin_line": 140,
        "end_line": 140,
        "comment": " Name for traps triggered by division. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.SQRT_TRAP",
        "snippet": "    private static final String SQRT_TRAP = \"sqrt\";",
        "begin_line": 143,
        "end_line": 143,
        "comment": " Name for traps triggered by square root. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.ALIGN_TRAP",
        "snippet": "    private static final String ALIGN_TRAP = \"align\";",
        "begin_line": 146,
        "end_line": 146,
        "comment": " Name for traps triggered by alignment. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.TRUNC_TRAP",
        "snippet": "    private static final String TRUNC_TRAP = \"trunc\";",
        "begin_line": 149,
        "end_line": 149,
        "comment": " Name for traps triggered by truncation. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.NEXT_AFTER_TRAP",
        "snippet": "    private static final String NEXT_AFTER_TRAP = \"nextAfter\";",
        "begin_line": 152,
        "end_line": 152,
        "comment": " Name for traps triggered by nextAfter. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.LESS_THAN_TRAP",
        "snippet": "    private static final String LESS_THAN_TRAP = \"lessThan\";",
        "begin_line": 155,
        "end_line": 155,
        "comment": " Name for traps triggered by lessThan. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.GREATER_THAN_TRAP",
        "snippet": "    private static final String GREATER_THAN_TRAP = \"greaterThan\";",
        "begin_line": 158,
        "end_line": 158,
        "comment": " Name for traps triggered by greaterThan. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.NEW_INSTANCE_TRAP",
        "snippet": "    private static final String NEW_INSTANCE_TRAP = \"newInstance\";",
        "begin_line": 161,
        "end_line": 161,
        "comment": " Name for traps triggered by newInstance. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.mant",
        "snippet": "    protected int[] mant;",
        "begin_line": 164,
        "end_line": 164,
        "comment": " Mantissa. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.sign",
        "snippet": "    protected byte sign;",
        "begin_line": 167,
        "end_line": 167,
        "comment": " Sign bit: 1 for positive, -1 for negative. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.exp",
        "snippet": "    protected int exp;",
        "begin_line": 170,
        "end_line": 170,
        "comment": " Exponent. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.nans",
        "snippet": "    protected byte nans;",
        "begin_line": 173,
        "end_line": 173,
        "comment": " Indicator for non-finite / non-number values. "
    },
    {
        "class_name": "org.apache.commons.math3.dfp.Dfp",
        "src_path": "src/main/java/org/apache/commons/math3/dfp/Dfp.java",
        "signature": "org.apache.commons.math3.dfp.Dfp.field",
        "snippet": "    private final DfpField field;",
        "begin_line": 176,
        "end_line": 176,
        "comment": " Factory building similar Dfp's. "
    }
]