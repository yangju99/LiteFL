[
    {
        "class_name": "org.apache.commons.math.MaxIterationsExceededException",
        "src_path": "src/java/org/apache/commons/math/MaxIterationsExceededException.java",
        "signature": "org.apache.commons.math.MaxIterationsExceededException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -7821226672760574694L;",
        "begin_line": 32,
        "end_line": 32,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MaxIterationsExceededException",
        "src_path": "src/java/org/apache/commons/math/MaxIterationsExceededException.java",
        "signature": "org.apache.commons.math.MaxIterationsExceededException.maxIterations",
        "snippet": "    private final int maxIterations;",
        "begin_line": 35,
        "end_line": 35,
        "comment": " Maximal number of iterations allowed. "
    },
    {
        "class_name": "org.apache.commons.math.distribution.AbstractContinuousDistribution",
        "src_path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java",
        "signature": "org.apache.commons.math.distribution.AbstractContinuousDistribution.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -38038050983108802L;",
        "begin_line": 40,
        "end_line": 40,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.GAMMA",
        "snippet": "    public static final double GAMMA = 0.577215664901532860606512090082;",
        "begin_line": 35,
        "end_line": 35,
        "comment": " \n     * <a href=\"http://en.wikipedia.org/wiki/Euler-Mascheroni_constant\">Euler-Mascheroni constant</a>\n     * @since 2.0\n     "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.DEFAULT_EPSILON",
        "snippet": "    private static final double DEFAULT_EPSILON = 10e-15;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Maximum allowed numerical error. "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.lanczos",
        "snippet": "    private static final double[] lanczos =\n    {\n        0.99999999999999709182,\n        57.156235665862923517,\n        -59.597960355475491248,\n        14.136097974741747174,\n        -0.49191381609762019978,\n        .33994649984811888699e-4,\n        .46523628927048575665e-4,\n        -.98374475304879564677e-4,\n        .15808870322491248884e-3,\n        -.21026444172410488319e-3,\n        .21743961811521264320e-3,\n        -.16431810653676389022e-3,\n        .84418223983852743293e-4,\n        -.26190838401581408670e-4,\n        .36899182659531622704e-5,\n    };",
        "begin_line": 41,
        "end_line": 58,
        "comment": " Lanczos coefficients "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.HALF_LOG_2_PI",
        "snippet": "    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);",
        "begin_line": 61,
        "end_line": 61,
        "comment": " Avoid repeated computation of log of 2 PI in logGamma "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.C_LIMIT",
        "snippet": "     private static final double C_LIMIT = 49;",
        "begin_line": 267,
        "end_line": 267,
        "comment": " C limit "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.S_LIMIT",
        "snippet": "     private static final double S_LIMIT = 1e-5;",
        "begin_line": 269,
        "end_line": 269,
        "comment": " S limit "
    },
    {
        "class_name": "org.apache.commons.math.MathException",
        "src_path": "src/java/org/apache/commons/math/MathException.java",
        "signature": "org.apache.commons.math.MathException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -9004610152740737812L;",
        "begin_line": 39,
        "end_line": 39,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathException",
        "src_path": "src/java/org/apache/commons/math/MathException.java",
        "signature": "org.apache.commons.math.MathException.pattern",
        "snippet": "    private final String pattern;",
        "begin_line": 44,
        "end_line": 44,
        "comment": "\n     * Pattern used to build the message.\n     "
    },
    {
        "class_name": "org.apache.commons.math.MathException",
        "src_path": "src/java/org/apache/commons/math/MathException.java",
        "signature": "org.apache.commons.math.MathException.arguments",
        "snippet": "    private final Object[] arguments;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "\n     * Arguments used to build the message.\n     "
    },
    {
        "class_name": "org.apache.commons.math.ConvergenceException",
        "src_path": "src/java/org/apache/commons/math/ConvergenceException.java",
        "signature": "org.apache.commons.math.ConvergenceException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4883703247677159141L;",
        "begin_line": 28,
        "end_line": 28,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.distribution.NormalDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.NormalDistributionImpl.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8589540077390120676L;",
        "begin_line": 37,
        "end_line": 37,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.distribution.NormalDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI",
        "snippet": "    private static final double SQRT2PI = Math.sqrt(2 * Math.PI);",
        "begin_line": 40,
        "end_line": 40,
        "comment": " &sqrt;(2 &pi;) "
    },
    {
        "class_name": "org.apache.commons.math.distribution.NormalDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.NormalDistributionImpl.mean",
        "snippet": "    private double mean = 0;",
        "begin_line": 43,
        "end_line": 43,
        "comment": " The mean of this distribution. "
    },
    {
        "class_name": "org.apache.commons.math.distribution.NormalDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/NormalDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation",
        "snippet": "    private double standardDeviation = 1;",
        "begin_line": 46,
        "end_line": 46,
        "comment": " The standard deviation of this distribution. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.LazyHolder",
        "src_path": "src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils.java",
        "signature": "org.apache.commons.math.analysis.solvers.LazyHolder.FACTORY",
        "snippet": "        private static final UnivariateRealSolverFactory FACTORY =\n            UnivariateRealSolverFactory.newInstance();",
        "begin_line": 237,
        "end_line": 238,
        "comment": " Cached solver factory "
    },
    {
        "class_name": "org.apache.commons.math.distribution.AbstractDistribution",
        "src_path": "src/java/org/apache/commons/math/distribution/AbstractDistribution.java",
        "signature": "org.apache.commons.math.distribution.AbstractDistribution.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -38038050983108802L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Serializable version identifier "
    }
]