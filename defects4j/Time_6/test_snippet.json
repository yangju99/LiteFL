[
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.main(java.lang.String[])",
        "snippet": "    public static void main(String[] args) {\n        junit.textui.TestRunner.run(suite());\n    }\n",
        "begin_line": 30,
        "end_line": 32,
        "comment": "",
        "child_ranges": [
            "(line 31,col 9)-(line 31,col 45)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.suite()",
        "snippet": "    public static TestSuite suite() {\n        return new TestSuite(TestGJDate.class);\n    }\n",
        "begin_line": 34,
        "end_line": 36,
        "comment": "",
        "child_ranges": [
            "(line 35,col 9)-(line 35,col 47)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.TestGJDate(java.lang.String)",
        "snippet": "    public TestGJDate(String name) {\n        super(name);\n    }\n",
        "begin_line": 38,
        "end_line": 40,
        "comment": "",
        "child_ranges": [
            "(line 39,col 9)-(line 39,col 20)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.setUp()",
        "snippet": "    protected void setUp() throws Exception {\n    }\n",
        "begin_line": 42,
        "end_line": 43,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.tearDown()",
        "snippet": "    protected void tearDown() throws Exception {\n    }\n",
        "begin_line": 45,
        "end_line": 46,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToPositive()",
        "snippet": "    public void test_plusYears_positiveToPositive() {\n        LocalDate date = new LocalDate(3, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(7, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(4));\n    }\n",
        "begin_line": 52,
        "end_line": 56,
        "comment": "-----------------------------------------------------------------------",
        "child_ranges": [
            "(line 53,col 9)-(line 53,col 64)",
            "(line 54,col 9)-(line 54,col 68)",
            "(line 55,col 9)-(line 55,col 50)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToZero()",
        "snippet": "    public void test_plusYears_positiveToZero() {\n        LocalDate date = new LocalDate(3, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(-1, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(-3));\n    }\n",
        "begin_line": 58,
        "end_line": 62,
        "comment": "",
        "child_ranges": [
            "(line 59,col 9)-(line 59,col 64)",
            "(line 60,col 9)-(line 60,col 69)",
            "(line 61,col 9)-(line 61,col 51)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToNegative()",
        "snippet": "    public void test_plusYears_positiveToNegative() {\n        LocalDate date = new LocalDate(3, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(-2, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(-4));\n    }\n",
        "begin_line": 64,
        "end_line": 68,
        "comment": "",
        "child_ranges": [
            "(line 65,col 9)-(line 65,col 64)",
            "(line 66,col 9)-(line 66,col 69)",
            "(line 67,col 9)-(line 67,col 51)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_negativeToNegative()",
        "snippet": "    public void test_plusYears_negativeToNegative() {\n        LocalDate date = new LocalDate(-3, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(-1, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(2));\n    }\n",
        "begin_line": 71,
        "end_line": 75,
        "comment": "-----------------------------------------------------------------------",
        "child_ranges": [
            "(line 72,col 9)-(line 72,col 65)",
            "(line 73,col 9)-(line 73,col 69)",
            "(line 74,col 9)-(line 74,col 50)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_negativeToZero()",
        "snippet": "    public void test_plusYears_negativeToZero() {\n        LocalDate date = new LocalDate(-3, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(1, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(3));\n    }\n",
        "begin_line": 77,
        "end_line": 81,
        "comment": "",
        "child_ranges": [
            "(line 78,col 9)-(line 78,col 65)",
            "(line 79,col 9)-(line 79,col 68)",
            "(line 80,col 9)-(line 80,col 50)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_negativeToPositive()",
        "snippet": "    public void test_plusYears_negativeToPositive() {\n        LocalDate date = new LocalDate(-3, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(2, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(4));\n    }\n",
        "begin_line": 83,
        "end_line": 87,
        "comment": "",
        "child_ranges": [
            "(line 84,col 9)-(line 84,col 65)",
            "(line 85,col 9)-(line 85,col 68)",
            "(line 86,col 9)-(line 86,col 50)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToPositive_crossCutover()",
        "snippet": "    public void test_plusYears_positiveToPositive_crossCutover() {\n        LocalDate date = new LocalDate(3, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(2007, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(2004));\n    }\n",
        "begin_line": 90,
        "end_line": 94,
        "comment": "-----------------------------------------------------------------------",
        "child_ranges": [
            "(line 91,col 9)-(line 91,col 64)",
            "(line 92,col 9)-(line 92,col 71)",
            "(line 93,col 9)-(line 93,col 53)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToZero_crossCutover()",
        "snippet": "    public void test_plusYears_positiveToZero_crossCutover() {\n        LocalDate date = new LocalDate(2003, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(-1, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(-2003));\n    }\n",
        "begin_line": 96,
        "end_line": 100,
        "comment": "",
        "child_ranges": [
            "(line 97,col 9)-(line 97,col 67)",
            "(line 98,col 9)-(line 98,col 69)",
            "(line 99,col 9)-(line 99,col 54)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToNegative_crossCutover()",
        "snippet": "    public void test_plusYears_positiveToNegative_crossCutover() {\n        LocalDate date = new LocalDate(2003, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(-2, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(-2004));\n    }\n",
        "begin_line": 102,
        "end_line": 106,
        "comment": "",
        "child_ranges": [
            "(line 103,col 9)-(line 103,col 67)",
            "(line 104,col 9)-(line 104,col 69)",
            "(line 105,col 9)-(line 105,col 54)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusYears_negativeToPositive_crossCutover()",
        "snippet": "    public void test_plusYears_negativeToPositive_crossCutover() {\n        LocalDate date = new LocalDate(-3, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(2002, 6, 30, GJ_CHRONOLOGY);\n        assertEquals(expected, date.plusYears(2004));\n    }\n",
        "begin_line": 108,
        "end_line": 112,
        "comment": "",
        "child_ranges": [
            "(line 109,col 9)-(line 109,col 65)",
            "(line 110,col 9)-(line 110,col 71)",
            "(line 111,col 9)-(line 111,col 53)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusWeekyears_positiveToZero_crossCutover()",
        "snippet": "    public void test_plusWeekyears_positiveToZero_crossCutover() {\n        LocalDate date = new LocalDate(2003, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(-1, 6, 30, GJ_CHRONOLOGY).withWeekOfWeekyear(date.getWeekOfWeekyear()).withDayOfWeek(date.getDayOfWeek());\n        assertEquals(expected, date.weekyear().addToCopy(-2003));\n    }\n",
        "begin_line": 115,
        "end_line": 119,
        "comment": "-----------------------------------------------------------------------",
        "child_ranges": [
            "(line 116,col 9)-(line 116,col 67)",
            "(line 117,col 9)-(line 117,col 149)",
            "(line 118,col 9)-(line 118,col 65)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_plusWeekyears_positiveToNegative_crossCutover()",
        "snippet": "    public void test_plusWeekyears_positiveToNegative_crossCutover() {\n        LocalDate date = new LocalDate(2003, 6, 30, GJ_CHRONOLOGY);\n        LocalDate expected = new LocalDate(-2, 6, 30, GJ_CHRONOLOGY).withWeekOfWeekyear(date.getWeekOfWeekyear()).withDayOfWeek(date.getDayOfWeek());\n        assertEquals(expected, date.weekyear().addToCopy(-2004));\n    }\n",
        "begin_line": 121,
        "end_line": 125,
        "comment": "",
        "child_ranges": [
            "(line 122,col 9)-(line 122,col 67)",
            "(line 123,col 9)-(line 123,col 149)",
            "(line 124,col 9)-(line 124,col 65)"
        ]
    },
    {
        "class_name": "org.joda.time.chrono.TestGJDate",
        "child_classes": [],
        "src_path": "src/test/java/org/joda/time/chrono/TestGJDate.java",
        "signature": "org.joda.time.chrono.TestGJDate.test_cutoverPreZero()",
        "snippet": "    public void test_cutoverPreZero() {\n        DateTime cutover = new LocalDate(-2, 6, 30, ISOChronology.getInstanceUTC()).toDateTimeAtStartOfDay(DateTimeZone.UTC);\n        try {\n            GJChronology.getInstance(DateTimeZone.UTC, cutover);\n            fail();\n        } catch (IllegalArgumentException ex) {\n            // expected\n        }\n    }\n",
        "begin_line": 128,
        "end_line": 136,
        "comment": "-----------------------------------------------------------------------",
        "child_ranges": [
            "(line 129,col 9)-(line 129,col 125)",
            "(line 130,col 9)-(line 135,col 9)"
        ]
    }
]