[
    {
        "name": "GrayPaintScale.getPaint#123",
        "is_bug": true,
        "src_path": "source/org/jfree/chart/renderer/GrayPaintScale.java",
        "class_name": "org.jfree.chart.renderer.GrayPaintScale",
        "signature": "org.jfree.chart.renderer.GrayPaintScale.getPaint(double)",
        "snippet": "    public Paint getPaint(double value) {\n        double v = Math.max(value, this.lowerBound);\n        v = Math.min(v, this.upperBound);\n        int g = (int) ((value - this.lowerBound) / (this.upperBound \n                - this.lowerBound) * 255.0);\n        return new Color(g, g, g);\n    }\n",
        "begin_line": 123,
        "end_line": 129,
        "comment": "\r\n     * Returns a paint for the specified value.\r\n     * \r\n     * @param value  the value (must be within the range specified by the\r\n     *         lower and upper bounds for the scale).\r\n     * \r\n     * @return A paint for the specified value.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 1.0
        },
        "num_failing_tests": 1
    },
    {
        "name": "GrayPaintScale.GrayPaintScale#71",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/renderer/GrayPaintScale.java",
        "class_name": "org.jfree.chart.renderer.GrayPaintScale",
        "signature": "org.jfree.chart.renderer.GrayPaintScale.GrayPaintScale()",
        "snippet": "    public GrayPaintScale() {\n        this(0.0, 1.0);\n    }\n",
        "begin_line": 71,
        "end_line": 73,
        "comment": "\r\n     * Creates a new <code>GrayPaintScale</code> instance with default values.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3333
        },
        "num_failing_tests": 1
    },
    {
        "name": "GrayPaintScale.GrayPaintScale#84",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/renderer/GrayPaintScale.java",
        "class_name": "org.jfree.chart.renderer.GrayPaintScale",
        "signature": "org.jfree.chart.renderer.GrayPaintScale.GrayPaintScale(double, double)",
        "snippet": "    public GrayPaintScale(double lowerBound, double upperBound) {\n        if (lowerBound >= upperBound) {\n            throw new IllegalArgumentException(\n                    \"Requires lowerBound < upperBound.\");\n        }\n        this.lowerBound = lowerBound;\n        this.upperBound = upperBound;\n    }\n",
        "begin_line": 84,
        "end_line": 91,
        "comment": "\r\n     * Creates a new paint scale for values in the specified range.\r\n     * \r\n     * @param lowerBound  the lower bound.\r\n     * @param upperBound  the upper bound.\r\n     * \r\n     * @throws IllegalArgumentException if <code>lowerBound</code> is not\r\n     *       less than <code>upperBound</code>.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3162
        },
        "num_failing_tests": 1
    }
]