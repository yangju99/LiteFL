[
    {
        "class_name": "org.jfree.chart.renderer.junit.GrayPaintScaleTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java",
        "signature": "org.jfree.chart.renderer.junit.GrayPaintScaleTests.suite()",
        "snippet": "    public static Test suite() {\n        return new TestSuite(GrayPaintScaleTests.class);\n    }\n",
        "begin_line": 71,
        "end_line": 73,
        "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
        "child_ranges": [
            "(line 72,col 9)-(line 72,col 56)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.junit.GrayPaintScaleTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java",
        "signature": "org.jfree.chart.renderer.junit.GrayPaintScaleTests.GrayPaintScaleTests(java.lang.String)",
        "snippet": "    public GrayPaintScaleTests(String name) {\n        super(name);\n    }\n",
        "begin_line": 80,
        "end_line": 82,
        "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
        "child_ranges": [
            "(line 81,col 9)-(line 81,col 20)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.junit.GrayPaintScaleTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java",
        "signature": "org.jfree.chart.renderer.junit.GrayPaintScaleTests.testConstructor()",
        "snippet": "    public void testConstructor() {\n        GrayPaintScale gps = new GrayPaintScale();\n        assertEquals(0.0, gps.getLowerBound(), EPSILON);\n        assertEquals(1.0, gps.getUpperBound(), EPSILON);\n    }\n",
        "begin_line": 89,
        "end_line": 93,
        "comment": " \n     * Simple check for the default constructor.\n     ",
        "child_ranges": [
            "(line 90,col 9)-(line 90,col 50)",
            "(line 91,col 9)-(line 91,col 56)",
            "(line 92,col 9)-(line 92,col 56)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.junit.GrayPaintScaleTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java",
        "signature": "org.jfree.chart.renderer.junit.GrayPaintScaleTests.testGetPaint()",
        "snippet": "    public void testGetPaint() {\n        GrayPaintScale gps = new GrayPaintScale();\n        Color c = (Color) gps.getPaint(0.0);\n        assertTrue(c.equals(Color.black));\n        c = (Color) gps.getPaint(1.0);\n        assertTrue(c.equals(Color.white));\n        \n        // check lookup values that are outside the bounds - see bug report\n        // 1767315\n        c = (Color) gps.getPaint(-0.5);\n        assertTrue(c.equals(Color.black));\n        c = (Color) gps.getPaint(1.5);\n        assertTrue(c.equals(Color.white));\n    }\n",
        "begin_line": 98,
        "end_line": 111,
        "comment": "\n     * Some checks for the getPaint() method.\n     ",
        "child_ranges": [
            "(line 99,col 9)-(line 99,col 50)",
            "(line 100,col 9)-(line 100,col 44)",
            "(line 101,col 9)-(line 101,col 42)",
            "(line 102,col 9)-(line 102,col 38)",
            "(line 103,col 9)-(line 103,col 42)",
            "(line 107,col 9)-(line 107,col 39)",
            "(line 108,col 9)-(line 108,col 42)",
            "(line 109,col 9)-(line 109,col 38)",
            "(line 110,col 9)-(line 110,col 42)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.junit.GrayPaintScaleTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java",
        "signature": "org.jfree.chart.renderer.junit.GrayPaintScaleTests.testEquals()",
        "snippet": "    public void testEquals() {\n        GrayPaintScale g1 = new GrayPaintScale();\n        GrayPaintScale g2 = new GrayPaintScale();\n        assertTrue(g1.equals(g2));\n        assertTrue(g2.equals(g1));\n        \n        g1 = new GrayPaintScale(0.0, 1.0);\n        g2 = new GrayPaintScale(0.0, 1.0);\n        assertTrue(g1.equals(g2));\n        g1 = new GrayPaintScale(0.1, 1.0);\n        assertFalse(g1.equals(g2));\n        g2 = new GrayPaintScale(0.1, 1.0);\n        assertTrue(g1.equals(g2));\n        \n        g1 = new GrayPaintScale(0.1, 0.9);\n        assertFalse(g1.equals(g2));\n        g2 = new GrayPaintScale(0.1, 0.9);\n        assertTrue(g1.equals(g2));\n    }\n",
        "begin_line": 116,
        "end_line": 134,
        "comment": "\n     * A test for the equals() method.\n     ",
        "child_ranges": [
            "(line 117,col 9)-(line 117,col 49)",
            "(line 118,col 9)-(line 118,col 49)",
            "(line 119,col 9)-(line 119,col 34)",
            "(line 120,col 9)-(line 120,col 34)",
            "(line 122,col 9)-(line 122,col 42)",
            "(line 123,col 9)-(line 123,col 42)",
            "(line 124,col 9)-(line 124,col 34)",
            "(line 125,col 9)-(line 125,col 42)",
            "(line 126,col 9)-(line 126,col 35)",
            "(line 127,col 9)-(line 127,col 42)",
            "(line 128,col 9)-(line 128,col 34)",
            "(line 130,col 9)-(line 130,col 42)",
            "(line 131,col 9)-(line 131,col 35)",
            "(line 132,col 9)-(line 132,col 42)",
            "(line 133,col 9)-(line 133,col 34)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.junit.GrayPaintScaleTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java",
        "signature": "org.jfree.chart.renderer.junit.GrayPaintScaleTests.testCloning()",
        "snippet": "    public void testCloning() {\n        GrayPaintScale g1 = new GrayPaintScale();\n        GrayPaintScale g2 = null;\n        try {\n            g2 = (GrayPaintScale) g1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        assertTrue(g1 != g2);\n        assertTrue(g1.getClass() == g2.getClass());\n        assertTrue(g1.equals(g2));\n    }\n",
        "begin_line": 139,
        "end_line": 151,
        "comment": "\n     * Confirm that cloning works.\n     ",
        "child_ranges": [
            "(line 140,col 9)-(line 140,col 49)",
            "(line 141,col 9)-(line 141,col 33)",
            "(line 142,col 9)-(line 147,col 9)",
            "(line 148,col 9)-(line 148,col 29)",
            "(line 149,col 9)-(line 149,col 51)",
            "(line 150,col 9)-(line 150,col 34)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.junit.GrayPaintScaleTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/junit/GrayPaintScaleTests.java",
        "signature": "org.jfree.chart.renderer.junit.GrayPaintScaleTests.testSerialization()",
        "snippet": "    public void testSerialization() {\n        GrayPaintScale g1 = new GrayPaintScale();\n        GrayPaintScale g2 = null;\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(g1);\n            out.close();\n\n            ObjectInput in = new ObjectInputStream(\n                    new ByteArrayInputStream(buffer.toByteArray()));\n            g2 = (GrayPaintScale) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n        assertEquals(g1, g2);       \n    }\n",
        "begin_line": 156,
        "end_line": 174,
        "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
        "child_ranges": [
            "(line 157,col 9)-(line 157,col 49)",
            "(line 158,col 9)-(line 158,col 33)",
            "(line 159,col 9)-(line 172,col 9)",
            "(line 173,col 9)-(line 173,col 29)"
        ]
    }
]