[
    {
        "name": "Marker.getOutlinePaint#264",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "class_name": "org.jfree.chart.plot.Marker",
        "signature": "org.jfree.chart.plot.Marker.getOutlinePaint()",
        "snippet": "    public Paint getOutlinePaint() {\n        return this.outlinePaint;\n    }\n",
        "begin_line": 264,
        "end_line": 266,
        "comment": "\r\n     * Returns the outline paint.\r\n     *\r\n     * @return The outline paint (possibly <code>null</code>).\r\n     * \r\n     * @see #setOutlinePaint(Paint)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4472
        },
        "num_failing_tests": 1
    },
    {
        "name": "Marker.getStroke#237",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "class_name": "org.jfree.chart.plot.Marker",
        "signature": "org.jfree.chart.plot.Marker.getStroke()",
        "snippet": "    public Stroke getStroke() {\n        return this.stroke;\n    }\n",
        "begin_line": 237,
        "end_line": 239,
        "comment": "\r\n     * Returns the stroke.\r\n     *\r\n     * @return The stroke (never <code>null</code>).\r\n     * \r\n     * @see #setStroke(Stroke)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1924
        },
        "num_failing_tests": 1
    },
    {
        "name": "Marker.getPaint#210",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "class_name": "org.jfree.chart.plot.Marker",
        "signature": "org.jfree.chart.plot.Marker.getPaint()",
        "snippet": "    public Paint getPaint() {\n        return this.paint;\n    }\n",
        "begin_line": 210,
        "end_line": 212,
        "comment": "\r\n     * Returns the paint.\r\n     *\r\n     * @return The paint (never <code>null</code>).\r\n     * \r\n     * @see #setPaint(Paint)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1826
        },
        "num_failing_tests": 1
    },
    {
        "name": "ValueMarker.getValue#106",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/plot/ValueMarker.java",
        "class_name": "org.jfree.chart.plot.ValueMarker",
        "signature": "org.jfree.chart.plot.ValueMarker.getValue()",
        "snippet": "    public double getValue() {\n        return this.value;\n    }\n",
        "begin_line": 106,
        "end_line": 108,
        "comment": "\r\n     * Returns the value.\r\n     *\r\n     * @return The value.\r\n     * \r\n     * @see #setValue(double)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1796
        },
        "num_failing_tests": 1
    },
    {
        "name": "ValueMarker.ValueMarker#93",
        "is_bug": true,
        "src_path": "source/org/jfree/chart/plot/ValueMarker.java",
        "class_name": "org.jfree.chart.plot.ValueMarker",
        "signature": "org.jfree.chart.plot.ValueMarker.ValueMarker(double, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float)",
        "snippet": "    public ValueMarker(double value, Paint paint, Stroke stroke, \n                       Paint outlinePaint, Stroke outlineStroke, float alpha) {\n        super(paint, stroke, paint, stroke, alpha);\n        this.value = value;\n    }\n",
        "begin_line": 93,
        "end_line": 97,
        "comment": "\r\n     * Creates a new value marker.\r\n     * \r\n     * @param value  the value.\r\n     * @param paint  the paint (<code>null</code> not permitted).\r\n     * @param stroke  the stroke (<code>null</code> not permitted).\r\n     * @param outlinePaint  the outline paint (<code>null</code> permitted).\r\n     * @param outlineStroke  the outline stroke (<code>null</code> permitted).\r\n     * @param alpha  the alpha transparency (in the range 0.0f to 1.0f).\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1026
        },
        "num_failing_tests": 1
    },
    {
        "name": "LengthAdjustmentType.LengthAdjustmentType#78",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/util/LengthAdjustmentType.java",
        "class_name": "org.jfree.chart.util.LengthAdjustmentType",
        "signature": "org.jfree.chart.util.LengthAdjustmentType.LengthAdjustmentType(java.lang.String)",
        "snippet": "    private LengthAdjustmentType(String name) {\n        this.name = name;\n    }\n",
        "begin_line": 78,
        "end_line": 80,
        "comment": "\n     * Private constructor.\n     *\n     * @param name  the name.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0924
        },
        "num_failing_tests": 1
    },
    {
        "name": "Marker.Marker#173",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "class_name": "org.jfree.chart.plot.Marker",
        "signature": "org.jfree.chart.plot.Marker.Marker(java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float)",
        "snippet": "    protected Marker(Paint paint, Stroke stroke, \n                     Paint outlinePaint, Stroke outlineStroke, \n                     float alpha) {\n\n        if (paint == null) {\n            throw new IllegalArgumentException(\"Null 'paint' argument.\");\n        }\n        if (stroke == null) {\n            throw new IllegalArgumentException(\"Null 'stroke' argument.\");\n        }\n        if (alpha < 0.0f || alpha > 1.0f)\n            throw new IllegalArgumentException(\n                    \"The 'alpha' value must be in the range 0.0f to 1.0f\");\n        \n        this.paint = paint;\n        this.stroke = stroke;\n        this.outlinePaint = outlinePaint;\n        this.outlineStroke = outlineStroke;\n        this.alpha = alpha;\n        \n        this.labelFont = new Font(\"SansSerif\", Font.PLAIN, 9);\n        this.labelPaint = Color.black;\n        this.labelAnchor = RectangleAnchor.TOP_LEFT;\n        this.labelOffset = new RectangleInsets(3.0, 3.0, 3.0, 3.0);\n        this.labelOffsetType = LengthAdjustmentType.CONTRACT;\n        this.labelTextAnchor = TextAnchor.CENTER;\n        \n        this.listenerList = new EventListenerList();\n    }\n",
        "begin_line": 173,
        "end_line": 201,
        "comment": "\r\n     * Constructs a new marker.\r\n     *\r\n     * @param paint  the paint (<code>null</code> not permitted).\r\n     * @param stroke  the stroke (<code>null</code> not permitted).\r\n     * @param outlinePaint  the outline paint (<code>null</code> permitted).\r\n     * @param outlineStroke  the outline stroke (<code>null</code> permitted).\r\n     * @param alpha  the alpha transparency (must be in the range 0.0f to \r\n     *     1.0f).\r\n     *     \r\n     * @throws IllegalArgumentException if <code>paint</code> or \r\n     *     <code>stroke</code> is <code>null</code>, or <code>alpha</code> is \r\n     *     not in the specified range.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0924
        },
        "num_failing_tests": 1
    },
    {
        "name": "RectangleAnchor.RectangleAnchor#83",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "signature": "org.jfree.chart.util.RectangleAnchor.RectangleAnchor(java.lang.String)",
        "snippet": "    private RectangleAnchor(final String name) {\n        this.name = name;\n    }\n",
        "begin_line": 83,
        "end_line": 85,
        "comment": "\n     * Private constructor.\n     *\n     * @param name  the name.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0776
        },
        "num_failing_tests": 1
    },
    {
        "name": "RectangleInsets.RectangleInsets#77",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "signature": "org.jfree.chart.util.RectangleInsets.RectangleInsets(double, double, double, double)",
        "snippet": "    public RectangleInsets(double top, double left, double bottom, \n            double right) {\n        this(UnitType.ABSOLUTE, top, left, bottom, right);   \n    }\n",
        "begin_line": 77,
        "end_line": 80,
        "comment": "\n     * Creates a new instance with the specified insets (as 'absolute' units).\n     * \n     * @param top  the top insets.\n     * @param left  the left insets.\n     * @param bottom  the bottom insets.\n     * @param right  the right insets.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.068
        },
        "num_failing_tests": 1
    },
    {
        "name": "RectangleInsets.RectangleInsets#92",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "signature": "org.jfree.chart.util.RectangleInsets.RectangleInsets(org.jfree.chart.util.UnitType, double, double, double, double)",
        "snippet": "    public RectangleInsets(UnitType unitType, double top, double left, \n                           double bottom, double right) {\n        if (unitType == null) {\n            throw new IllegalArgumentException(\"Null 'unitType' argument.\");\n        }\n        this.unitType = unitType;\n        this.top = top;\n        this.bottom = bottom;\n        this.left = left;\n        this.right = right;\n    }\n",
        "begin_line": 92,
        "end_line": 102,
        "comment": "\n     * Creates a new instance.\n     * \n     * @param unitType  absolute or relative units (<code>null</code> not \n     *                  permitted).\n     * @param top  the top insets.\n     * @param left  the left insets.\n     * @param bottom  the bottom insets.\n     * @param right  the right insets.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.068
        },
        "num_failing_tests": 1
    },
    {
        "name": "UnitType.UnitType#71",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "class_name": "org.jfree.chart.util.UnitType",
        "signature": "org.jfree.chart.util.UnitType.UnitType(java.lang.String)",
        "snippet": "    private UnitType(String name) {\n        this.name = name;\n    }\n",
        "begin_line": 71,
        "end_line": 73,
        "comment": "\n     * Private constructor.\n     *\n     * @param name  the name.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0674
        },
        "num_failing_tests": 1
    },
    {
        "name": "TextAnchor.TextAnchor#126",
        "is_bug": false,
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "class_name": "org.jfree.chart.text.TextAnchor",
        "signature": "org.jfree.chart.text.TextAnchor.TextAnchor(java.lang.String)",
        "snippet": "    private TextAnchor(String name) {\n        this.name = name;\n    }\n",
        "begin_line": 126,
        "end_line": 128,
        "comment": "\n     * Private constructor.\n     *\n     * @param name  the name.\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.063
        },
        "num_failing_tests": 1
    }
]