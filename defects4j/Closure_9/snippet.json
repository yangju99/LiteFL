[
    {
        "name": "ProcessCommonJSModules.normalizeSourceName#116",
        "is_bug": true,
        "src_path": "src/com/google/javascript/jscomp/ProcessCommonJSModules.java",
        "class_name": "com.google.javascript.jscomp.ProcessCommonJSModules",
        "signature": "com.google.javascript.jscomp.ProcessCommonJSModules.normalizeSourceName(java.lang.String)",
        "snippet": "  private String normalizeSourceName(String filename) {\n    // The DOS command shell will normalize \"/\" to \"\\\", so we have to\n    // wrestle it back.\n\n    if (filename.indexOf(filenamePrefix) == 0) {\n      filename = filename.substring(filenamePrefix.length());\n    }\n\n    return filename;\n  }\n",
        "begin_line": 116,
        "end_line": 125,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 1.0
        },
        "num_failing_tests": 1
    },
    {
        "name": "ProcessCommonJSModules.ProcessCommonJSModules#53",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/ProcessCommonJSModules.java",
        "class_name": "com.google.javascript.jscomp.ProcessCommonJSModules",
        "signature": "com.google.javascript.jscomp.ProcessCommonJSModules.ProcessCommonJSModules(com.google.javascript.jscomp.AbstractCompiler, java.lang.String)",
        "snippet": "  ProcessCommonJSModules(AbstractCompiler compiler, String filenamePrefix) {\n    this(compiler, filenamePrefix, true);\n  }\n",
        "begin_line": 53,
        "end_line": 55,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4472
        },
        "num_failing_tests": 1
    },
    {
        "name": "ProcessCommonJSModules.ProcessCommonJSModules#57",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/ProcessCommonJSModules.java",
        "class_name": "com.google.javascript.jscomp.ProcessCommonJSModules",
        "signature": "com.google.javascript.jscomp.ProcessCommonJSModules.ProcessCommonJSModules(com.google.javascript.jscomp.AbstractCompiler, java.lang.String, boolean)",
        "snippet": "  ProcessCommonJSModules(AbstractCompiler compiler, String filenamePrefix,\n      boolean reportDependencies) {\n    this.compiler = compiler;\n    this.filenamePrefix = filenamePrefix.endsWith(MODULE_SLASH) ?\n        filenamePrefix : filenamePrefix + MODULE_SLASH;\n    this.reportDependencies = reportDependencies;\n  }\n",
        "begin_line": 57,
        "end_line": 63,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3162
        },
        "num_failing_tests": 1
    },
    {
        "name": "ProcessCommonJSModules.guessCJSModuleName#71",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/ProcessCommonJSModules.java",
        "class_name": "com.google.javascript.jscomp.ProcessCommonJSModules",
        "signature": "com.google.javascript.jscomp.ProcessCommonJSModules.guessCJSModuleName(java.lang.String)",
        "snippet": "  String guessCJSModuleName(String filename) {\n    return toModuleName(normalizeSourceName(filename));\n  }\n",
        "begin_line": 71,
        "end_line": 73,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3162
        },
        "num_failing_tests": 1
    },
    {
        "name": "ProcessCommonJSModules.toModuleName#88",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/ProcessCommonJSModules.java",
        "class_name": "com.google.javascript.jscomp.ProcessCommonJSModules",
        "signature": "com.google.javascript.jscomp.ProcessCommonJSModules.toModuleName(java.lang.String)",
        "snippet": "  public static String toModuleName(String filename) {\n    return MODULE_NAME_PREFIX +\n        filename.replaceAll(\"^\\\\.\" + Pattern.quote(MODULE_SLASH), \"\")\n            .replaceAll(Pattern.quote(MODULE_SLASH), MODULE_NAME_SEPARATOR)\n            .replaceAll(\"\\\\.js$\", \"\").replaceAll(\"-\", \"_\");\n  }\n",
        "begin_line": 88,
        "end_line": 93,
        "comment": "\n   * Turns a filename into a JS identifier that is used for moduleNames in\n   * rewritten code. Removes leading ./, replaces / with $, removes trailing .js\n   * and replaces - with _. All moduleNames get a \"module$\" prefix.\n   ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3162
        },
        "num_failing_tests": 1
    },
    {
        "name": "SourceFile.Preloaded#421",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/SourceFile.java",
        "class_name": "com.google.javascript.jscomp.SourceFile",
        "signature": "com.google.javascript.jscomp.SourceFile.Preloaded.Preloaded(java.lang.String, java.lang.String, java.lang.String)",
        "snippet": "    Preloaded(String fileName, String originalPath, String code) {\n      super(fileName);\n      super.setOriginalPath(originalPath);\n      super.setCode(code);\n    }\n",
        "begin_line": 421,
        "end_line": 425,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0933
        },
        "num_failing_tests": 1
    },
    {
        "name": "SourceFile.Builder#368",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/SourceFile.java",
        "class_name": "com.google.javascript.jscomp.SourceFile",
        "signature": "com.google.javascript.jscomp.SourceFile.Builder.Builder()",
        "snippet": "    public Builder() {}\n",
        "begin_line": 368,
        "end_line": 368,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0933
        },
        "num_failing_tests": 1
    },
    {
        "name": "SourceFile.buildFromCode#390",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/SourceFile.java",
        "class_name": "com.google.javascript.jscomp.SourceFile",
        "signature": "com.google.javascript.jscomp.SourceFile.Builder.buildFromCode(java.lang.String, java.lang.String)",
        "snippet": "    public SourceFile buildFromCode(String fileName, String code) {\n      return new Preloaded(fileName, originalPath, code);\n    }\n",
        "begin_line": 390,
        "end_line": 392,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0933
        },
        "num_failing_tests": 1
    },
    {
        "name": "SourceFile.SourceFile#81",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/SourceFile.java",
        "class_name": "com.google.javascript.jscomp.SourceFile",
        "signature": "com.google.javascript.jscomp.SourceFile.SourceFile(java.lang.String)",
        "snippet": "  public SourceFile(String fileName) {\n    if (fileName == null || fileName.isEmpty()) {\n      throw new IllegalArgumentException(\"a source must have a name\");\n    }\n    this.fileName = fileName;\n  }\n",
        "begin_line": 81,
        "end_line": 86,
        "comment": "\n   * Construct a new abstract source file.\n   *\n   * @param fileName The file name of the source file. It does not necessarily\n   *     need to correspond to a real path. But it should be unique. Will\n   *     appear in warning messages emitted by the compiler.\n   ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0933
        },
        "num_failing_tests": 1
    },
    {
        "name": "SourceFile.setCode#147",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/SourceFile.java",
        "class_name": "com.google.javascript.jscomp.SourceFile",
        "signature": "com.google.javascript.jscomp.SourceFile.setCode(java.lang.String)",
        "snippet": "  private void setCode(String sourceCode) {\n    code = sourceCode;\n  }\n",
        "begin_line": 147,
        "end_line": 149,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0933
        },
        "num_failing_tests": 1
    },
    {
        "name": "SourceFile.setOriginalPath#155",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/SourceFile.java",
        "class_name": "com.google.javascript.jscomp.SourceFile",
        "signature": "com.google.javascript.jscomp.SourceFile.setOriginalPath(java.lang.String)",
        "snippet": "  public void setOriginalPath(String originalPath) {\n    this.originalPath = originalPath;\n  }\n",
        "begin_line": 155,
        "end_line": 157,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0933
        },
        "num_failing_tests": 1
    },
    {
        "name": "SourceFile.fromCode#322",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/SourceFile.java",
        "class_name": "com.google.javascript.jscomp.SourceFile",
        "signature": "com.google.javascript.jscomp.SourceFile.fromCode(java.lang.String, java.lang.String)",
        "snippet": "  public static SourceFile fromCode(String fileName, String code) {\n    return builder().buildFromCode(fileName, code);\n  }\n",
        "begin_line": 322,
        "end_line": 324,
        "comment": "",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0933
        },
        "num_failing_tests": 1
    },
    {
        "name": "SourceFile.builder#354",
        "is_bug": false,
        "src_path": "src/com/google/javascript/jscomp/SourceFile.java",
        "class_name": "com.google.javascript.jscomp.SourceFile",
        "signature": "com.google.javascript.jscomp.SourceFile.builder()",
        "snippet": "  public static Builder builder() {\n    return new Builder();\n  }\n",
        "begin_line": 354,
        "end_line": 356,
        "comment": " Create a new builder for source files. ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0933
        },
        "num_failing_tests": 1
    }
]