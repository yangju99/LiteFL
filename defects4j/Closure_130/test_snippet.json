[
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.CollapsePropertiesTest()",
        "snippet": "  public CollapsePropertiesTest() {\n    super(EXTERNS);\n  }\n",
        "begin_line": 38,
        "end_line": 40,
        "comment": "",
        "child_ranges": [
            "(line 39,col 5)-(line 39,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.getProcessor(com.google.javascript.jscomp.Compiler)",
        "snippet": "  @Override public CompilerPass getProcessor(Compiler compiler) {\n    return new CollapseProperties(\n        compiler, collapsePropertiesOnExternTypes, true);\n  }\n",
        "begin_line": 42,
        "end_line": 45,
        "comment": "",
        "child_ranges": [
            "(line 43,col 5)-(line 44,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.setUp()",
        "snippet": "  @Override\n  public void setUp() {\n    enableLineNumberCheck(true);\n    enableNormalize(true);\n  }\n",
        "begin_line": 47,
        "end_line": 51,
        "comment": "",
        "child_ranges": [
            "(line 49,col 5)-(line 49,col 32)",
            "(line 50,col 5)-(line 50,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.getNumRepetitions()",
        "snippet": "  @Override public int getNumRepetitions() {\n    return 1;\n  }\n",
        "begin_line": 53,
        "end_line": 55,
        "comment": "",
        "child_ranges": [
            "(line 54,col 5)-(line 54,col 13)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapse()",
        "snippet": "  public void testCollapse() {\n    test(\"var a = {}; a.b = {}; var c = a.b;\",\n         \"var a$b = {}; var c = a$b\");\n  }\n",
        "begin_line": 57,
        "end_line": 60,
        "comment": "",
        "child_ranges": [
            "(line 58,col 5)-(line 59,col 38)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMultiLevelCollapse()",
        "snippet": "  public void testMultiLevelCollapse() {\n    test(\"var a = {}; a.b = {}; a.b.c = {}; var d = a.b.c;\",\n         \"var a$b$c = {}; var d = a$b$c;\");\n  }\n",
        "begin_line": 62,
        "end_line": 65,
        "comment": "",
        "child_ranges": [
            "(line 63,col 5)-(line 64,col 43)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDecrement()",
        "snippet": "  public void testDecrement() {\n    test(\"var a = {}; a.b = 5; a.b--; a.b = 5\",\n         \"var a$b = 5; a$b--; a$b = 5\");\n  }\n",
        "begin_line": 67,
        "end_line": 70,
        "comment": "",
        "child_ranges": [
            "(line 68,col 5)-(line 69,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testIncrement()",
        "snippet": "  public void testIncrement() {\n    test(\"var a = {}; a.b = 5; a.b++; a.b = 5\",\n         \"var a$b = 5; a$b++; a$b = 5\");\n  }\n",
        "begin_line": 72,
        "end_line": 75,
        "comment": "",
        "child_ranges": [
            "(line 73,col 5)-(line 74,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclaration()",
        "snippet": "  public void testObjLitDeclaration() {\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c\");\n  }\n",
        "begin_line": 77,
        "end_line": 80,
        "comment": "",
        "child_ranges": [
            "(line 78,col 5)-(line 79,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithGet1()",
        "snippet": "  public void testObjLitDeclarationWithGet1() {\n    testSame(\"var a = {get b(){}};\");\n  }\n",
        "begin_line": 82,
        "end_line": 84,
        "comment": "",
        "child_ranges": [
            "(line 83,col 5)-(line 83,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithGet2()",
        "snippet": "  public void testObjLitDeclarationWithGet2() {\n    test(\"var a = {b: {}, get c(){}}; var d = a.b; var e = a.c\",\n         \"var a$b = {};var a = {get c(){}};var d = a$b; var e = a.c\");\n  }\n",
        "begin_line": 86,
        "end_line": 89,
        "comment": "",
        "child_ranges": [
            "(line 87,col 5)-(line 88,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithGet3()",
        "snippet": "  public void testObjLitDeclarationWithGet3() {\n    test(\"var a = {b: {get c() { return 3; }}};\",\n         \"var a$b = {get c() { return 3; }};\");\n  }\n",
        "begin_line": 91,
        "end_line": 94,
        "comment": "",
        "child_ranges": [
            "(line 92,col 5)-(line 93,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithSet1()",
        "snippet": "  public void testObjLitDeclarationWithSet1() {\n    testSame(\"var a = {set b(a){}};\");\n  }\n",
        "begin_line": 96,
        "end_line": 98,
        "comment": "",
        "child_ranges": [
            "(line 97,col 5)-(line 97,col 38)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithSet2()",
        "snippet": "  public void testObjLitDeclarationWithSet2() {\n    test(\"var a = {b: {}, set c(a){}}; var d = a.b; var e = a.c\",\n         \"var a$b = {};var a = {set c(a){}};var d = a$b; var e = a.c\");\n  }\n",
        "begin_line": 100,
        "end_line": 103,
        "comment": "",
        "child_ranges": [
            "(line 101,col 5)-(line 102,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithSet3()",
        "snippet": "  public void testObjLitDeclarationWithSet3() {\n    test(\"var a = {b: {set c(d) {}}};\",\n         \"var a$b = {set c(d) {}};\");\n  }\n",
        "begin_line": 105,
        "end_line": 108,
        "comment": "",
        "child_ranges": [
            "(line 106,col 5)-(line 107,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithGetAndSet1()",
        "snippet": "  public void testObjLitDeclarationWithGetAndSet1() {\n    test(\"var a = {b: {get c() { return 3; },set c(d) {}}};\",\n         \"var a$b = {get c() { return 3; },set c(d) {}};\");\n  }\n",
        "begin_line": 110,
        "end_line": 113,
        "comment": "",
        "child_ranges": [
            "(line 111,col 5)-(line 112,col 59)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithDuplicateKeys()",
        "snippet": "  public void testObjLitDeclarationWithDuplicateKeys() {\n    test(\"var a = {b: 0, b: 1}; var c = a.b;\",\n         \"var a$b = 0; var a$b = 1; var c = a$b;\",\n         SyntacticScopeCreator.VAR_MULTIPLY_DECLARED_ERROR);\n  }\n",
        "begin_line": 115,
        "end_line": 119,
        "comment": "",
        "child_ranges": [
            "(line 116,col 5)-(line 118,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth1()",
        "snippet": "  public void testObjLitAssignmentDepth1() {\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c\");\n  }\n",
        "begin_line": 121,
        "end_line": 124,
        "comment": "",
        "child_ranges": [
            "(line 122,col 5)-(line 123,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth2()",
        "snippet": "  public void testObjLitAssignmentDepth2() {\n    test(\"var a = {}; a.b = {c: {}, d: {}}; var e = a.b.c; var f = a.b.d\",\n         \"var a$b$c = {}; var a$b$d = {}; var e = a$b$c; var f = a$b$d\");\n  }\n",
        "begin_line": 126,
        "end_line": 129,
        "comment": "",
        "child_ranges": [
            "(line 127,col 5)-(line 128,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth3()",
        "snippet": "  public void testObjLitAssignmentDepth3() {\n    test(\"var a = {}; a.b = {}; a.b.c = {d: 1, e: 2}; var f = a.b.c.d\",\n         \"var a$b$c$d = 1; var a$b$c$e = 2; var f = a$b$c$d\");\n  }\n",
        "begin_line": 131,
        "end_line": 134,
        "comment": "",
        "child_ranges": [
            "(line 132,col 5)-(line 133,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth4()",
        "snippet": "  public void testObjLitAssignmentDepth4() {\n    test(\"var a = {}; a.b = {}; a.b.c = {}; a.b.c.d = {e: 1, f: 2}; \" +\n         \"var g = a.b.c.d.e\",\n         \"var a$b$c$d$e = 1; var a$b$c$d$f = 2; var g = a$b$c$d$e\");\n  }\n",
        "begin_line": 136,
        "end_line": 140,
        "comment": "",
        "child_ranges": [
            "(line 137,col 5)-(line 139,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectDeclaredToPreserveItsPreviousValue1()",
        "snippet": "  public void testGlobalObjectDeclaredToPreserveItsPreviousValue1() {\n    test(\"var a = a ? a : {}; a.c = 1;\",\n         \"var a = a ? a : {}; var a$c = 1;\");\n  }\n",
        "begin_line": 142,
        "end_line": 145,
        "comment": "",
        "child_ranges": [
            "(line 143,col 5)-(line 144,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectDeclaredToPreserveItsPreviousValue2()",
        "snippet": "  public void testGlobalObjectDeclaredToPreserveItsPreviousValue2() {\n    test(\"var a = a || {}; a.c = 1;\",\n         \"var a = a || {}; var a$c = 1;\");\n  }\n",
        "begin_line": 147,
        "end_line": 150,
        "comment": "",
        "child_ranges": [
            "(line 148,col 5)-(line 149,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectDeclaredToPreserveItsPreviousValue3()",
        "snippet": "  public void testGlobalObjectDeclaredToPreserveItsPreviousValue3() {\n    test(\"var a = a || {get b() {}}; a.c = 1;\",\n         \"var a = a || {get b() {}}; var a$c = 1;\");\n  }\n",
        "begin_line": 152,
        "end_line": 155,
        "comment": "",
        "child_ranges": [
            "(line 153,col 5)-(line 154,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_1()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_1() {\n    test(\"var a = {b: 0}; a.c = 1; if (a) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; if (a) x();\");\n  }\n",
        "begin_line": 157,
        "end_line": 160,
        "comment": "",
        "child_ranges": [
            "(line 158,col 5)-(line 159,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_2()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_2() {\n    test(\"var a = {b: 0}; a.c = 1; if (!(a && a.c)) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; if (!(a && a$c)) x();\");\n  }\n",
        "begin_line": 162,
        "end_line": 165,
        "comment": "",
        "child_ranges": [
            "(line 163,col 5)-(line 164,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_3()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_3() {\n    test(\"var a = {b: 0}; a.c = 1; while (a || a.c) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; while (a || a$c) x();\");\n  }\n",
        "begin_line": 167,
        "end_line": 170,
        "comment": "",
        "child_ranges": [
            "(line 168,col 5)-(line 169,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_4()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_4() {\n    testSame(\"var a = {}; a.c = 1; var d = a || {}; a.c;\");\n  }\n",
        "begin_line": 172,
        "end_line": 174,
        "comment": "",
        "child_ranges": [
            "(line 173,col 5)-(line 173,col 59)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_5()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_5() {\n    testSame(\"var a = {}; a.c = 1; var d = a.c || a; a.c;\");\n  }\n",
        "begin_line": 176,
        "end_line": 178,
        "comment": "",
        "child_ranges": [
            "(line 177,col 5)-(line 177,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_6()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_6() {\n    test(\"var a = {b: 0}; a.c = 1; var d = !(a.c || a); a.c;\",\n         \"var a$b = 0; var a = {}; var a$c = 1; var d = !(a$c || a); a$c;\");\n  }\n",
        "begin_line": 180,
        "end_line": 183,
        "comment": "",
        "child_ranges": [
            "(line 181,col 5)-(line 182,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth2()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth2() {\n    test(\"var a = {b: {}}; a.b.c = 1; if (a.b) x(a.b.c);\",\n         \"var a$b = {}; var a$b$c = 1; if (a$b) x(a$b$c);\");\n  }\n",
        "begin_line": 185,
        "end_line": 188,
        "comment": "",
        "child_ranges": [
            "(line 186,col 5)-(line 187,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth3()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth3() {\n    // TODO(user): Make CollapseProperties even more aggressive so that\n    // a$b.z gets collapsed. Right now, it doesn't get collapsed because the\n    // expression (a.b && a.b.c) could return a.b. But since it returns a.b iff\n    // a.b *is* safely collapsible, the Boolean logic should be smart enough to\n    // only consider the right side of the && as aliasing.\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \" a.b.z = 1; var d = a.b && a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){};\" +\n         \" a$b.z = 1; var d = a$b && a$b$c;\", null,\n         CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 190,
        "end_line": 201,
        "comment": "",
        "child_ranges": [
            "(line 196,col 5)-(line 200,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionNameInBooleanExpressionDepth1()",
        "snippet": "  public void testGlobalFunctionNameInBooleanExpressionDepth1() {\n    test(\"function a() {} a.c = 1; if (a) x(a.c);\",\n         \"function a() {} var a$c = 1; if (a) x(a$c);\");\n  }\n",
        "begin_line": 203,
        "end_line": 206,
        "comment": "",
        "child_ranges": [
            "(line 204,col 5)-(line 205,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionNameInBooleanExpressionDepth2()",
        "snippet": "  public void testGlobalFunctionNameInBooleanExpressionDepth2() {\n    test(\"var a = {b: function(){}}; a.b.c = 1; if (a.b) x(a.b.c);\",\n         \"var a$b = function(){}; var a$b$c = 1; if (a$b) x(a$b$c);\");\n  }\n",
        "begin_line": 208,
        "end_line": 211,
        "comment": "",
        "child_ranges": [
            "(line 209,col 5)-(line 210,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_1()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_1() {\n    // An object's properties are not collapsed if the object is referenced\n    // in a such a way that an alias is created for it.\n    testSame(\"var a = {b: 0}; var c = a; c.b = 1; a.b == c.b;\");\n  }\n",
        "begin_line": 213,
        "end_line": 217,
        "comment": "",
        "child_ranges": [
            "(line 216,col 5)-(line 216,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_2()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_2() {\n    testSame(\"var a = {b: 0}; f(a); a.b;\");\n  }\n",
        "begin_line": 219,
        "end_line": 221,
        "comment": "",
        "child_ranges": [
            "(line 220,col 5)-(line 220,col 43)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_3()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_3() {\n    testSame(\"var a = {b: 0}; new f(a); a.b;\");\n  }\n",
        "begin_line": 223,
        "end_line": 225,
        "comment": "",
        "child_ranges": [
            "(line 224,col 5)-(line 224,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth2_1()",
        "snippet": "  public void testAliasCreatedForObjectDepth2_1() {\n    test(\"var a = {}; a.b = {c: 0}; var d = a.b; a.b.c == d.c;\",\n         \"var a$b = {c: 0}; var d = a$b; a$b.c == d.c;\");\n  }\n",
        "begin_line": 227,
        "end_line": 230,
        "comment": "",
        "child_ranges": [
            "(line 228,col 5)-(line 229,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth2_2()",
        "snippet": "  public void testAliasCreatedForObjectDepth2_2() {\n    test(\"var a = {}; a.b = {c: 0}; for (var p in a.b) { e(a.b[p]); }\",\n         \"var a$b = {c: 0}; for (var p in a$b) { e(a$b[p]); }\");\n  }\n",
        "begin_line": 232,
        "end_line": 235,
        "comment": "",
        "child_ranges": [
            "(line 233,col 5)-(line 234,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_1()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_1() {\n    // An enum's values are always collapsed, even if the enum object is\n    // referenced in a such a way that an alias is created for it.\n    test(\"/** @enum */ var a = {b: 0}; var c = a; c.b = 1; a.b != c.b;\",\n         \"var a$b = 0; var a = {b: a$b}; var c = a; c.b = 1; a$b != c.b;\");\n  }\n",
        "begin_line": 237,
        "end_line": 242,
        "comment": "",
        "child_ranges": [
            "(line 240,col 5)-(line 241,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_2()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_2() {\n    test(\"/** @enum */ var a = {b: 0}; f(a); a.b;\",\n         \"var a$b = 0; var a = {b: a$b}; f(a); a$b;\");\n  }\n",
        "begin_line": 244,
        "end_line": 247,
        "comment": "",
        "child_ranges": [
            "(line 245,col 5)-(line 246,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_3()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_3() {\n    test(\"/** @enum */ var a = {b: 0}; new f(a); a.b;\",\n         \"var a$b = 0; var a = {b: a$b}; new f(a); a$b;\");\n  }\n",
        "begin_line": 249,
        "end_line": 252,
        "comment": "",
        "child_ranges": [
            "(line 250,col 5)-(line 251,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_4()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_4() {\n    test(\"/** @enum */ var a = {b: 0}; for (var p in a) { f(a[p]); }\",\n         \"var a$b = 0; var a = {b: a$b}; for (var p in a) { f(a[p]); }\");\n  }\n",
        "begin_line": 254,
        "end_line": 257,
        "comment": "",
        "child_ranges": [
            "(line 255,col 5)-(line 256,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_1()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_1() {\n    test(\"var a = {}; /** @enum */ a.b = {c: 0};\" +\n         \"var d = a.b; d.c = 1; a.b.c != d.c;\",\n         \"var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"var d = a$b; d.c = 1; a$b$c != d.c;\");\n  }\n",
        "begin_line": 259,
        "end_line": 264,
        "comment": "",
        "child_ranges": [
            "(line 260,col 5)-(line 263,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_2()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_2() {\n    test(\"var a = {}; /** @enum */ a.b = {c: 0};\" +\n         \"for (var p in a.b) { f(a.b[p]); }\",\n         \"var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"for (var p in a$b) { f(a$b[p]); }\");\n  }\n",
        "begin_line": 266,
        "end_line": 271,
        "comment": "",
        "child_ranges": [
            "(line 267,col 5)-(line 270,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_3()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_3() {\n    test(\"var a = {}; var d = a; /** @enum */ a.b = {c: 0};\" +\n         \"for (var p in a.b) { f(a.b[p]); }\",\n         \"var a = {}; var d = a; var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"for (var p in a$b) { f(a$b[p]); }\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 273,
        "end_line": 279,
        "comment": "",
        "child_ranges": [
            "(line 274,col 5)-(line 278,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumOfObjects()",
        "snippet": "  public void testAliasCreatedForEnumOfObjects() {\n    test(\"var a = {}; \" +\n         \"/** @enum {Object} */ a.b = {c: {d: 1}}; a.b.c;\" +\n         \"searchEnum(a.b);\",\n         \"var a$b$c = {d: 1};var a$b = {c: a$b$c}; a$b$c; \" +\n         \"searchEnum(a$b)\");\n  }\n",
        "begin_line": 281,
        "end_line": 287,
        "comment": "",
        "child_ranges": [
            "(line 282,col 5)-(line 286,col 28)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumOfObjects2()",
        "snippet": "  public void testAliasCreatedForEnumOfObjects2() {\n    test(\"var a = {}; \" +\n         \"/** @enum {Object} */ a.b = {c: {d: 1}}; a.b.c.d;\" +\n         \"searchEnum(a.b);\",\n         \"var a$b$c = {d: 1};var a$b = {c: a$b$c}; a$b$c.d; \" +\n         \"searchEnum(a$b)\");\n  }\n",
        "begin_line": 289,
        "end_line": 295,
        "comment": "",
        "child_ranges": [
            "(line 290,col 5)-(line 294,col 28)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForPropertyOfEnumOfObjects()",
        "snippet": "  public void testAliasCreatedForPropertyOfEnumOfObjects() {\n    test(\"var a = {}; \" +\n         \"/** @enum {Object} */ a.b = {c: {d: 1}}; a.b.c;\" +\n         \"searchEnum(a.b.c);\",\n         \"var a$b$c = {d: 1}; a$b$c; searchEnum(a$b$c);\");\n  }\n",
        "begin_line": 297,
        "end_line": 302,
        "comment": "",
        "child_ranges": [
            "(line 298,col 5)-(line 301,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForPropertyOfEnumOfObjects2()",
        "snippet": "  public void testAliasCreatedForPropertyOfEnumOfObjects2() {\n    test(\"var a = {}; \" +\n         \"/** @enum {Object} */ a.b = {c: {d: 1}}; a.b.c.d;\" +\n         \"searchEnum(a.b.c);\",\n         \"var a$b$c = {d: 1}; a$b$c.d; searchEnum(a$b$c);\");\n  }\n",
        "begin_line": 304,
        "end_line": 309,
        "comment": "",
        "child_ranges": [
            "(line 305,col 5)-(line 308,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMisusedEnumTag()",
        "snippet": "  public void testMisusedEnumTag() {\n    testSame(\"var a = {}; var d = a; a.b = function() {};\" +\n             \"/** @enum */ a.b.c = 0; a.b.c;\");\n  }\n",
        "begin_line": 311,
        "end_line": 314,
        "comment": "",
        "child_ranges": [
            "(line 312,col 5)-(line 313,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMisusedConstructorTag()",
        "snippet": "  public void testMisusedConstructorTag() {\n    testSame(\"var a = {}; var d = a; a.b = function() {};\" +\n             \"/** @constructor */ a.b.c = 0; a.b.c;\");\n  }\n",
        "begin_line": 316,
        "end_line": 319,
        "comment": "",
        "child_ranges": [
            "(line 317,col 5)-(line 318,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_1() {\n    testSame(\"var a = function(){}; a.b = 1; var c = a; c.b = 2; a.b != c.b;\");\n  }\n",
        "begin_line": 321,
        "end_line": 323,
        "comment": "",
        "child_ranges": [
            "(line 322,col 5)-(line 322,col 79)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForCtorDepth1_1()",
        "snippet": "  public void testAliasCreatedForCtorDepth1_1() {\n    // A constructor's properties *are* collapsed even if the function is\n    // referenced in a such a way that an alias is created for it,\n    // since a function with custom properties is considered a class and its\n    // non-prototype properties are considered static methods and variables.\n    // People don't typically iterate through static members of a class or\n    // refer to them using an alias for the class name.\n    test(\"/** @constructor */ var a = function(){}; a.b = 1; \" +\n         \"var c = a; c.b = 2; a.b != c.b;\",\n         \"var a = function(){}; var a$b = 1; var c = a; c.b = 2; a$b != c.b;\");\n  }\n",
        "begin_line": 325,
        "end_line": 335,
        "comment": "",
        "child_ranges": [
            "(line 332,col 5)-(line 334,col 79)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_2() {\n    testSame(\"var a = function(){}; a.b = 1; f(a); a.b;\");\n  }\n",
        "begin_line": 337,
        "end_line": 339,
        "comment": "",
        "child_ranges": [
            "(line 338,col 5)-(line 338,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForCtorDepth1_2()",
        "snippet": "  public void testAliasCreatedForCtorDepth1_2() {\n    test(\"/** @constructor */ var a = function(){}; a.b = 1; f(a); a.b;\",\n         \"var a = function(){}; var a$b = 1; f(a); a$b;\");\n  }\n",
        "begin_line": 341,
        "end_line": 344,
        "comment": "",
        "child_ranges": [
            "(line 342,col 5)-(line 343,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_3() {\n    testSame(\"var a = function(){}; a.b = 1; new f(a); a.b;\");\n  }\n",
        "begin_line": 346,
        "end_line": 348,
        "comment": "",
        "child_ranges": [
            "(line 347,col 5)-(line 347,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForCtorDepth1_3()",
        "snippet": "  public void testAliasCreatedForCtorDepth1_3() {\n    test(\"/** @constructor */ var a = function(){}; a.b = 1; new f(a); a.b;\",\n         \"var a = function(){}; var a$b = 1; new f(a); a$b;\");\n  }\n",
        "begin_line": 350,
        "end_line": 353,
        "comment": "",
        "child_ranges": [
            "(line 351,col 5)-(line 352,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2()",
        "snippet": "  public void testAliasCreatedForFunctionDepth2() {\n    test(\n        \"var a = {}; a.b = function() {}; a.b.c = 1; var d = a.b;\" +\n        \"a.b.c != d.c;\",\n        \"var a$b = function() {}; a$b.c = 1; var d = a$b;\" +\n        \"a$b.c != d.c;\");\n  }\n",
        "begin_line": 355,
        "end_line": 361,
        "comment": "",
        "child_ranges": [
            "(line 356,col 5)-(line 360,col 25)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForCtorDepth2()",
        "snippet": "  public void testAliasCreatedForCtorDepth2() {\n    test(\"var a = {}; /** @constructor */ a.b = function() {}; \" +\n         \"a.b.c = 1; var d = a.b;\" +\n         \"a.b.c != d.c;\",\n         \"var a$b = function() {}; var a$b$c = 1; var d = a$b;\" +\n         \"a$b$c != d.c;\");\n  }\n",
        "begin_line": 363,
        "end_line": 369,
        "comment": "",
        "child_ranges": [
            "(line 364,col 5)-(line 368,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_1()",
        "snippet": "  public void testAliasCreatedForClassDepth1_1() {\n    // A class's name is always collapsed, even if one of its prefixes is\n    // referenced in a such a way that an alias is created for it.\n    test(\"var a = {}; /** @constructor */ a.b = function(){};\" +\n         \"var c = a; c.b = 0; a.b != c.b;\",\n         \"var a = {}; var a$b = function(){};\" +\n         \"var c = a; c.b = 0; a$b != c.b;\", null,\n         CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 371,
        "end_line": 379,
        "comment": "",
        "child_ranges": [
            "(line 374,col 5)-(line 378,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_2()",
        "snippet": "  public void testAliasCreatedForClassDepth1_2() {\n    test(\"var a = {}; /** @constructor */ a.b = function(){}; f(a); a.b;\",\n         \"var a = {}; var a$b = function(){}; f(a); a$b;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 381,
        "end_line": 385,
        "comment": "",
        "child_ranges": [
            "(line 382,col 5)-(line 384,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_3()",
        "snippet": "  public void testAliasCreatedForClassDepth1_3() {\n    test(\"var a = {}; /** @constructor */ a.b = function(){}; new f(a); a.b;\",\n         \"var a = {}; var a$b = function(){}; new f(a); a$b;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 387,
        "end_line": 391,
        "comment": "",
        "child_ranges": [
            "(line 388,col 5)-(line 390,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_1()",
        "snippet": "  public void testAliasCreatedForClassDepth2_1() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"var d = a.b; a.b.c != d.c;\",\n         \"var a$b = {}; var a$b$c = function(){};\" +\n         \"var d = a$b; a$b$c != d.c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 393,
        "end_line": 399,
        "comment": "",
        "child_ranges": [
            "(line 394,col 5)-(line 398,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_2()",
        "snippet": "  public void testAliasCreatedForClassDepth2_2() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"f(a.b); a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){}; f(a$b); a$b$c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 401,
        "end_line": 406,
        "comment": "",
        "child_ranges": [
            "(line 402,col 5)-(line 405,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_3()",
        "snippet": "  public void testAliasCreatedForClassDepth2_3() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"new f(a.b); a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){}; new f(a$b); a$b$c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 408,
        "end_line": 413,
        "comment": "",
        "child_ranges": [
            "(line 409,col 5)-(line 412,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassProperty()",
        "snippet": "  public void testAliasCreatedForClassProperty() {\n    test(\"var a = {}; /** @constructor */ a.b = function(){};\" +\n         \"a.b.c = {d: 3}; new f(a.b.c); a.b.c.d;\",\n         \"var a$b = function(){}; var a$b$c = {d:3}; new f(a$b$c); a$b$c.d;\");\n  }\n",
        "begin_line": 415,
        "end_line": 419,
        "comment": "",
        "child_ranges": [
            "(line 416,col 5)-(line 418,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNestedObjLit()",
        "snippet": "  public void testNestedObjLit() {\n    test(\"var a = {}; a.b = {f: 0, c: {d: 1}}; var e = a.b.c.d\",\n         \"var a$b$f = 0; var a$b$c$d = 1; var e = a$b$c$d;\");\n  }\n",
        "begin_line": 421,
        "end_line": 424,
        "comment": "",
        "child_ranges": [
            "(line 422,col 5)-(line 423,col 61)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationUsedInSameVarList()",
        "snippet": "  public void testObjLitDeclarationUsedInSameVarList() {\n    // The collapsed properties must defined in the same place in the var list\n    // where they were originally defined (and not, for example, at the end).\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c;\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c;\");\n  }\n",
        "begin_line": 426,
        "end_line": 431,
        "comment": "",
        "child_ranges": [
            "(line 429,col 5)-(line 430,col 66)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropGetInsideAnObjLit()",
        "snippet": "  public void testPropGetInsideAnObjLit() {\n    test(\"var x = {}; x.y = 1; var a = {}; a.b = {c: x.y}\",\n         \"var x$y = 1; var a$b$c = x$y;\");\n  }\n",
        "begin_line": 433,
        "end_line": 436,
        "comment": "",
        "child_ranges": [
            "(line 434,col 5)-(line 435,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithQuotedKeyThatDoesNotGetRead()",
        "snippet": "  public void testObjLitWithQuotedKeyThatDoesNotGetRead() {\n    test(\"var a = {}; a.b = {c: 0, 'd': 1}; var e = a.b.c;\",\n         \"var a$b$c = 0; var a$b$d = 1; var e = a$b$c;\");\n  }\n",
        "begin_line": 438,
        "end_line": 441,
        "comment": "",
        "child_ranges": [
            "(line 439,col 5)-(line 440,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithQuotedKeyThatGetsRead()",
        "snippet": "  public void testObjLitWithQuotedKeyThatGetsRead() {\n    test(\"var a = {}; a.b = {c: 0, 'd': 1}; var e = a.b['d'];\",\n         \"var a$b = {c: 0, 'd': 1}; var e = a$b['d'];\");\n  }\n",
        "begin_line": 443,
        "end_line": 446,
        "comment": "",
        "child_ranges": [
            "(line 444,col 5)-(line 445,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionWithQuotedPropertyThatDoesNotGetRead()",
        "snippet": "  public void testFunctionWithQuotedPropertyThatDoesNotGetRead() {\n    test(\"var a = {}; a.b = function() {}; a.b['d'] = 1;\",\n         \"var a$b = function() {}; a$b['d'] = 1;\");\n  }\n",
        "begin_line": 448,
        "end_line": 451,
        "comment": "",
        "child_ranges": [
            "(line 449,col 5)-(line 450,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionWithQuotedPropertyThatGetsRead()",
        "snippet": "  public void testFunctionWithQuotedPropertyThatGetsRead() {\n    test(\"var a = {}; a.b = function() {}; a.b['d'] = 1; f(a.b['d']);\",\n         \"var a$b = function() {}; a$b['d'] = 1; f(a$b['d']);\");\n  }\n",
        "begin_line": 453,
        "end_line": 456,
        "comment": "",
        "child_ranges": [
            "(line 454,col 5)-(line 455,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedToMultipleNames1()",
        "snippet": "  public void testObjLitAssignedToMultipleNames1() {\n    // An object literal that's assigned to multiple names isn't collapsed.\n    testSame(\"var a = b = {c: 0, d: 1}; var e = a.c; var f = b.d;\");\n  }\n",
        "begin_line": 458,
        "end_line": 461,
        "comment": "",
        "child_ranges": [
            "(line 460,col 5)-(line 460,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedToMultipleNames2()",
        "snippet": "  public void testObjLitAssignedToMultipleNames2() {\n    testSame(\"a = b = {c: 0, d: 1}; var e = a.c; var f = b.d;\");\n  }\n",
        "begin_line": 463,
        "end_line": 465,
        "comment": "",
        "child_ranges": [
            "(line 464,col 5)-(line 464,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitRedefinedInGlobalScope()",
        "snippet": "  public void testObjLitRedefinedInGlobalScope() {\n    testSame(\"a = {b: 0}; a = {c: 1}; var d = a.b; var e = a.c;\");\n  }\n",
        "begin_line": 467,
        "end_line": 469,
        "comment": "",
        "child_ranges": [
            "(line 468,col 5)-(line 468,col 66)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitRedefinedInLocalScope()",
        "snippet": "  public void testObjLitRedefinedInLocalScope() {\n    test(\"var a = {}; a.b = {c: 0}; function d() { a.b = {c: 1}; } e(a.b.c);\",\n         \"var a$b = {c: 0}; function d() { a$b = {c: 1}; } e(a$b.c);\");\n  }\n",
        "begin_line": 471,
        "end_line": 474,
        "comment": "",
        "child_ranges": [
            "(line 472,col 5)-(line 473,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedInTernaryExpression1()",
        "snippet": "  public void testObjLitAssignedInTernaryExpression1() {\n    testSame(\"a = x ? {b: 0} : d; var c = a.b;\");\n  }\n",
        "begin_line": 476,
        "end_line": 478,
        "comment": "",
        "child_ranges": [
            "(line 477,col 5)-(line 477,col 49)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedInTernaryExpression2()",
        "snippet": "  public void testObjLitAssignedInTernaryExpression2() {\n    testSame(\"a = x ? {b: 0} : {b: 1}; var c = a.b;\");\n  }\n",
        "begin_line": 480,
        "end_line": 482,
        "comment": "",
        "child_ranges": [
            "(line 481,col 5)-(line 481,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally1()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally1() {\n    testSame(\"var a; if (x) a = {b: 0}; var c = x ? a.b : 0;\");\n  }\n",
        "begin_line": 484,
        "end_line": 486,
        "comment": "",
        "child_ranges": [
            "(line 485,col 5)-(line 485,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally1b()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally1b() {\n    test(\"if (x) var a = {b: 0}; var c = x ? a.b : 0;\",\n         \"if (x) var a$b = 0; var c = x ? a$b : 0;\");\n  }\n",
        "begin_line": 488,
        "end_line": 491,
        "comment": "",
        "child_ranges": [
            "(line 489,col 5)-(line 490,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally2()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally2() {\n    test(\"if (x) var a = {b: 0}; var c = a.b; var d = a.c;\",\n         \"if (x){ var a$b = 0; var a = {}; }var c = a$b; var d = a.c;\");\n  }\n",
        "begin_line": 493,
        "end_line": 496,
        "comment": "",
        "child_ranges": [
            "(line 494,col 5)-(line 495,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally3()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally3() {\n    testSame(\"var a; if (x) a = {b: 0}; else a = {b: 1}; var c = a.b;\");\n  }\n",
        "begin_line": 498,
        "end_line": 500,
        "comment": "",
        "child_ranges": [
            "(line 499,col 5)-(line 499,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectPropertySetToObjLitConditionally()",
        "snippet": "  public void testObjectPropertySetToObjLitConditionally() {\n    test(\"var a = {}; if (x) a.b = {c: 0}; var d = a.b ? a.b.c : 0;\",\n         \"if (x){ var a$b$c = 0; var a$b = {} } var d = a$b ? a$b$c : 0;\");\n  }\n",
        "begin_line": 502,
        "end_line": 505,
        "comment": "",
        "child_ranges": [
            "(line 503,col 5)-(line 504,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionPropertySetToObjLitConditionally()",
        "snippet": "  public void testFunctionPropertySetToObjLitConditionally() {\n    test(\"function a() {} if (x) a.b = {c: 0}; var d = a.b ? a.b.c : 0;\",\n         \"function a() {} if (x){ var a$b$c = 0; var a$b = {} }\" +\n         \"var d = a$b ? a$b$c : 0;\");\n  }\n",
        "begin_line": 507,
        "end_line": 511,
        "comment": "",
        "child_ranges": [
            "(line 508,col 5)-(line 510,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPrototypePropertySetToAnObjectLiteral()",
        "snippet": "  public void testPrototypePropertySetToAnObjectLiteral() {\n    test(\"var a = {b: function(){}}; a.b.prototype.c = {d: 0};\",\n         \"var a$b = function(){}; a$b.prototype.c = {d: 0};\");\n  }\n",
        "begin_line": 513,
        "end_line": 516,
        "comment": "",
        "child_ranges": [
            "(line 514,col 5)-(line 515,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectPropertyResetInLocalScope()",
        "snippet": "  public void testObjectPropertyResetInLocalScope() {\n    test(\"var z = {}; z.a = 0; function f() {z.a = 5; return z.a}\",\n         \"var z$a = 0; function f() {z$a = 5; return z$a}\");\n  }\n",
        "begin_line": 518,
        "end_line": 521,
        "comment": "",
        "child_ranges": [
            "(line 519,col 5)-(line 520,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionPropertyResetInLocalScope()",
        "snippet": "  public void testFunctionPropertyResetInLocalScope() {\n    test(\"function z() {} z.a = 0; function f() {z.a = 5; return z.a}\",\n         \"function z() {} var z$a = 0; function f() {z$a = 5; return z$a}\");\n  }\n",
        "begin_line": 523,
        "end_line": 526,
        "comment": "",
        "child_ranges": [
            "(line 524,col 5)-(line 525,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInGlobalScope1()",
        "snippet": "  public void testNamespaceResetInGlobalScope1() {\n    test(\"var a = {}; /** @constructor */a.b = function() {}; a = {};\",\n         \"var a = {}; var a$b = function() {}; a = {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 528,
        "end_line": 532,
        "comment": "",
        "child_ranges": [
            "(line 529,col 5)-(line 531,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInGlobalScope2()",
        "snippet": "  public void testNamespaceResetInGlobalScope2() {\n    test(\"var a = {}; a = {}; /** @constructor */a.b = function() {};\",\n         \"var a = {}; a = {}; var a$b = function() {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 534,
        "end_line": 538,
        "comment": "",
        "child_ranges": [
            "(line 535,col 5)-(line 537,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInLocalScope1()",
        "snippet": "  public void testNamespaceResetInLocalScope1() {\n    test(\"var a = {}; /** @constructor */a.b = function() {};\" +\n         \" function f() { a = {}; }\",\n         \"var a = {};var a$b = function() {};\" +\n         \" function f() { a = {}; }\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 540,
        "end_line": 546,
        "comment": "",
        "child_ranges": [
            "(line 541,col 5)-(line 545,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInLocalScope2()",
        "snippet": "  public void testNamespaceResetInLocalScope2() {\n    test(\"var a = {}; function f() { a = {}; }\" +\n         \" /** @constructor */a.b = function() {};\",\n         \"var a = {}; function f() { a = {}; }\" +\n         \" var a$b = function() {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 548,
        "end_line": 554,
        "comment": "",
        "child_ranges": [
            "(line 549,col 5)-(line 553,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceDefinedInLocalScope()",
        "snippet": "  public void testNamespaceDefinedInLocalScope() {\n    test(\"var a = {}; (function() { a.b = {}; })();\" +\n         \" /** @constructor */a.b.c = function() {};\",\n         \"var a$b; (function() { a$b = {}; })(); var a$b$c = function() {};\");\n  }\n",
        "begin_line": 556,
        "end_line": 560,
        "comment": "",
        "child_ranges": [
            "(line 557,col 5)-(line 559,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToObjectInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToObjectInLocalScopeDepth1() {\n    test(\"var a = {b: 0}; function f() { a.c = 5; return a.c; }\",\n         \"var a$b = 0; var a$c; function f() { a$c = 5; return a$c; }\");\n  }\n",
        "begin_line": 562,
        "end_line": 565,
        "comment": "",
        "child_ranges": [
            "(line 563,col 5)-(line 564,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToObjectInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToObjectInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = {}; (function() {a.b.c = 0;})(); x = a.b.c;\",\n         \"var a$b$c; (function() {a$b$c = 0;})(); x = a$b$c;\");\n  }\n",
        "begin_line": 567,
        "end_line": 570,
        "comment": "",
        "child_ranges": [
            "(line 568,col 5)-(line 569,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToFunctionInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToFunctionInLocalScopeDepth1() {\n    test(\"function a() {} function f() { a.c = 5; return a.c; }\",\n         \"function a() {} var a$c; function f() { a$c = 5; return a$c; }\");\n  }\n",
        "begin_line": 572,
        "end_line": 575,
        "comment": "",
        "child_ranges": [
            "(line 573,col 5)-(line 574,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToFunctionInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToFunctionInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = function() {}; function f() {a.b.c = 0;}\",\n         \"var a$b = function() {}; var a$b$c; function f() {a$b$c = 0;}\");\n  }\n",
        "begin_line": 577,
        "end_line": 580,
        "comment": "",
        "child_ranges": [
            "(line 578,col 5)-(line 579,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleObjectInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleObjectInLocalScopeDepth1() {\n    testSame(\"var a = {}; var c = a; (function() {a.b = 0;})(); a.b;\");\n  }\n",
        "begin_line": 582,
        "end_line": 584,
        "comment": "",
        "child_ranges": [
            "(line 583,col 5)-(line 583,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1() {\n    testSame(\"function a() {} var c = a; (function() {a.b = 0;})(); a.b;\");\n  }\n",
        "begin_line": 586,
        "end_line": 588,
        "comment": "",
        "child_ranges": [
            "(line 587,col 5)-(line 587,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1() {\n    testSame(\n          \"/** @constructor */ function a() {} var a$b; var c = a; \" +\n          \"(function() {a$b = 0;})(); a$b;\");\n  }\n",
        "begin_line": 590,
        "end_line": 594,
        "comment": "",
        "child_ranges": [
            "(line 591,col 5)-(line 593,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleCtorInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleCtorInLocalScopeDepth1() {\n    test(\"/** @constructor */ var a = function() {}; var c = a; \" +\n         \"(function() {a.b = 0;})(); a.b;\",\n         \"var a = function() {}; var a$b; \" +\n         \"var c = a; (function() {a$b = 0;})(); a$b;\");\n  }\n",
        "begin_line": 596,
        "end_line": 601,
        "comment": "",
        "child_ranges": [
            "(line 597,col 5)-(line 600,col 55)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleObjectInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToUncollapsibleObjectInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = {}; var d = a.b;\" +\n         \"(function() {a.b.c = 0;})(); a.b.c;\",\n         \"var a$b = {}; var d = a$b;\" +\n         \"(function() {a$b.c = 0;})(); a$b.c;\");\n  }\n",
        "begin_line": 603,
        "end_line": 608,
        "comment": "",
        "child_ranges": [
            "(line 604,col 5)-(line 607,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = function (){}; var d = a.b;\" +\n         \"(function() {a.b.c = 0;})(); a.b.c;\",\n         \"var a$b = function (){}; var d = a$b;\" +\n         \"(function() {a$b.c = 0;})(); a$b.c;\");\n  }\n",
        "begin_line": 610,
        "end_line": 615,
        "comment": "",
        "child_ranges": [
            "(line 611,col 5)-(line 614,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleCtorInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToUncollapsibleCtorInLocalScopeDepth2() {\n    test(\"var a = {}; /** @constructor */ a.b = function (){}; var d = a.b;\" +\n         \"(function() {a.b.c = 0;})(); a.b.c;\",\n         \"var a$b = function (){}; var a$b$c; var d = a$b;\" +\n         \"(function() {a$b$c = 0;})(); a$b$c;\");\n  }\n",
        "begin_line": 617,
        "end_line": 622,
        "comment": "",
        "child_ranges": [
            "(line 618,col 5)-(line 621,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfChildFuncOfUncollapsibleObjectDepth1()",
        "snippet": "  public void testPropertyOfChildFuncOfUncollapsibleObjectDepth1() {\n    testSame(\"var a = {}; var c = a; a.b = function (){}; a.b.x = 0; a.b.x;\");\n  }\n",
        "begin_line": 624,
        "end_line": 626,
        "comment": "",
        "child_ranges": [
            "(line 625,col 5)-(line 625,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfChildFuncOfUncollapsibleObjectDepth2()",
        "snippet": "  public void testPropertyOfChildFuncOfUncollapsibleObjectDepth2() {\n    test(\"var a = {}; a.b = {}; var c = a.b;\" +\n         \"a.b.c = function (){}; a.b.c.x = 0; a.b.c.x;\",\n         \"var a$b = {}; var c = a$b;\" +\n         \"a$b.c = function (){}; a$b.c.x = 0; a$b.c.x;\");\n  }\n",
        "begin_line": 628,
        "end_line": 633,
        "comment": "",
        "child_ranges": [
            "(line 629,col 5)-(line 632,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildFuncOfUncollapsibleObjectInLocalScope()",
        "snippet": "  public void testAddPropertyToChildFuncOfUncollapsibleObjectInLocalScope() {\n    testSame(\"var a = {}; a.b = function (){}; a.b.x = 0;\" +\n             \"var c = a; (function() {a.b.y = 1;})(); a.b.x; a.b.y;\");\n  }\n",
        "begin_line": 635,
        "end_line": 638,
        "comment": "",
        "child_ranges": [
            "(line 636,col 5)-(line 637,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildTypeOfUncollapsibleObjectInLocalScope()",
        "snippet": "  public void testAddPropertyToChildTypeOfUncollapsibleObjectInLocalScope() {\n    test(\"var a = {}; /** @constructor */ a.b = function (){}; a.b.x = 0;\" +\n         \"var c = a; (function() {a.b.y = 1;})(); a.b.x; a.b.y;\",\n         \"var a = {}; var a$b = function (){}; var a$b$y; var a$b$x = 0;\" +\n         \"var c = a; (function() {a$b$y = 1;})(); a$b$x; a$b$y;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 640,
        "end_line": 646,
        "comment": "",
        "child_ranges": [
            "(line 641,col 5)-(line 645,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope()",
        "snippet": "  public void testAddPropertyToChildOfUncollapsibleFunctionInLocalScope() {\n    testSame(\n        \"function a() {} a.b = {x: 0}; var c = a;\" +\n        \"(function() {a.b.y = 0;})(); a.b.y;\");\n  }\n",
        "begin_line": 648,
        "end_line": 652,
        "comment": "",
        "child_ranges": [
            "(line 649,col 5)-(line 651,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleCtorInLocalScope()",
        "snippet": "  public void testAddPropertyToChildOfUncollapsibleCtorInLocalScope() {\n    test(\"/** @constructor */ var a = function() {}; a.b = {x: 0}; var c = a;\" +\n         \"(function() {a.b.y = 0;})(); a.b.y;\",\n         \"var a = function() {}; var a$b$x = 0; var a$b$y; var c = a;\" +\n         \"(function() {a$b$y = 0;})(); a$b$y;\");\n  }\n",
        "begin_line": 654,
        "end_line": 659,
        "comment": "",
        "child_ranges": [
            "(line 655,col 5)-(line 658,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testResetObjectPropertyInLocalScope()",
        "snippet": "  public void testResetObjectPropertyInLocalScope() {\n    test(\"var a = {b: 0}; a.c = 1; function f() { a.c = 5; }\",\n         \"var a$b = 0; var a$c = 1; function f() { a$c = 5; }\");\n  }\n",
        "begin_line": 661,
        "end_line": 664,
        "comment": "",
        "child_ranges": [
            "(line 662,col 5)-(line 663,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testResetFunctionPropertyInLocalScope()",
        "snippet": "  public void testResetFunctionPropertyInLocalScope() {\n    test(\"function a() {}; a.c = 1; function f() { a.c = 5; }\",\n         \"function a() {}; var a$c = 1; function f() { a$c = 5; }\");\n  }\n",
        "begin_line": 666,
        "end_line": 669,
        "comment": "",
        "child_ranges": [
            "(line 667,col 5)-(line 668,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalNameReferencedInLocalScopeBeforeDefined1()",
        "snippet": "  public void testGlobalNameReferencedInLocalScopeBeforeDefined1() {\n    // Because referencing global names earlier in the source code than they're\n    // defined is such a common practice, we collapse them even though a runtime\n    // exception could result (in the off-chance that the function gets called\n    // before the alias variable is defined).\n    test(\"var a = {b: 0}; function f() { a.c = 5; } a.c = 1;\",\n         \"var a$b = 0; function f() { a$c = 5; } var a$c = 1;\");\n  }\n",
        "begin_line": 671,
        "end_line": 678,
        "comment": "",
        "child_ranges": [
            "(line 676,col 5)-(line 677,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalNameReferencedInLocalScopeBeforeDefined2()",
        "snippet": "  public void testGlobalNameReferencedInLocalScopeBeforeDefined2() {\n    test(\"var a = {b: 0}; function f() { return a.c; } a.c = 1;\",\n         \"var a$b = 0; function f() { return a$c; } var a$c = 1;\");\n  }\n",
        "begin_line": 680,
        "end_line": 683,
        "comment": "",
        "child_ranges": [
            "(line 681,col 5)-(line 682,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth1_1()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth1_1() {\n    testSame(\"var a = {}; function f() { a.b(); }\" +\n             \"a = function() {}; a.b = function() {};\");\n  }\n",
        "begin_line": 685,
        "end_line": 688,
        "comment": "",
        "child_ranges": [
            "(line 686,col 5)-(line 687,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth1_2()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth1_2() {\n    testSame(\"var a = {}; /** @constructor */ a = function() {};\" +\n             \"a.b = {}; a.b.c = 0; function f() { a.b.d = 1; }\");\n  }\n",
        "begin_line": 690,
        "end_line": 693,
        "comment": "",
        "child_ranges": [
            "(line 691,col 5)-(line 692,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth2()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth2() {\n    test(\"var a = {}; a.b = {}; function f() { a.b.c(); }\" +\n         \"a.b = function() {}; a.b.c = function() {};\",\n         \"var a$b = {}; function f() { a$b.c(); }\" +\n         \"a$b = function() {}; a$b.c = function() {};\");\n  }\n",
        "begin_line": 695,
        "end_line": 700,
        "comment": "",
        "child_ranges": [
            "(line 696,col 5)-(line 699,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionCallDepth1()",
        "snippet": "  public void testFunctionCallDepth1() {\n    test(\"var a = {}; a.b = function(){}; var c = a.b();\",\n         \"var a$b = function(){}; var c = a$b()\");\n  }\n",
        "begin_line": 702,
        "end_line": 705,
        "comment": "",
        "child_ranges": [
            "(line 703,col 5)-(line 704,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionCallDepth2()",
        "snippet": "  public void testFunctionCallDepth2() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; a.b.c();\",\n         \"var a$b$c = function(){}; a$b$c();\");\n  }\n",
        "begin_line": 707,
        "end_line": 710,
        "comment": "",
        "child_ranges": [
            "(line 708,col 5)-(line 709,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionAlias()",
        "snippet": "  public void testFunctionAlias() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; a.b.d = a.b.c;\",\n         \"var a$b$c = function(){}; var a$b$d = a$b$c;\");\n  }\n",
        "begin_line": 712,
        "end_line": 715,
        "comment": "",
        "child_ranges": [
            "(line 713,col 5)-(line 714,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallToRedefinedFunction()",
        "snippet": "  public void testCallToRedefinedFunction() {\n    test(\"var a = {}; a.b = function(){}; a.b = function(){}; a.b();\",\n         \"var a$b = function(){}; a$b = function(){}; a$b();\");\n  }\n",
        "begin_line": 717,
        "end_line": 720,
        "comment": "",
        "child_ranges": [
            "(line 718,col 5)-(line 719,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapsePrototypeName()",
        "snippet": "  public void testCollapsePrototypeName() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; \" +\n         \"a.b.c.prototype.d = function(){}; (new a.b.c()).d();\",\n         \"var a$b$c = function(){}; a$b$c.prototype.d = function(){}; \" +\n         \"new a$b$c().d();\");\n  }\n",
        "begin_line": 722,
        "end_line": 727,
        "comment": "",
        "child_ranges": [
            "(line 723,col 5)-(line 726,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferencedPrototypeProperty()",
        "snippet": "  public void testReferencedPrototypeProperty() {\n    test(\"var a = {b: {}}; a.b.c = function(){}; a.b.c.prototype.d = {};\" +\n         \"e = a.b.c.prototype.d;\",\n         \"var a$b$c = function(){}; a$b$c.prototype.d = {};\" +\n         \"e = a$b$c.prototype.d;\");\n  }\n",
        "begin_line": 729,
        "end_line": 734,
        "comment": "",
        "child_ranges": [
            "(line 730,col 5)-(line 733,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testSetStaticAndPrototypePropertiesOnFunction()",
        "snippet": "  public void testSetStaticAndPrototypePropertiesOnFunction() {\n    test(\"var a = {}; a.b = function(){}; a.b.prototype.d = 0; a.b.c = 1;\",\n         \"var a$b = function(){}; a$b.prototype.d = 0; var a$b$c = 1;\");\n  }\n",
        "begin_line": 736,
        "end_line": 739,
        "comment": "",
        "child_ranges": [
            "(line 737,col 5)-(line 738,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReadUndefinedPropertyDepth1()",
        "snippet": "  public void testReadUndefinedPropertyDepth1() {\n    test(\"var a = {b: 0}; var c = a.d;\",\n         \"var a$b = 0; var a = {}; var c = a.d;\");\n  }\n",
        "begin_line": 741,
        "end_line": 744,
        "comment": "",
        "child_ranges": [
            "(line 742,col 5)-(line 743,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReadUndefinedPropertyDepth2()",
        "snippet": "  public void testReadUndefinedPropertyDepth2() {\n    test(\"var a = {b: {c: 0}}; f(a.b.c); f(a.b.d);\",\n         \"var a$b$c = 0; var a$b = {}; f(a$b$c); f(a$b.d);\");\n  }\n",
        "begin_line": 746,
        "end_line": 749,
        "comment": "",
        "child_ranges": [
            "(line 747,col 5)-(line 748,col 61)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallUndefinedMethodOnObjLitDepth1()",
        "snippet": "  public void testCallUndefinedMethodOnObjLitDepth1() {\n    test(\"var a = {b: 0}; a.c();\",\n         \"var a$b = 0; var a = {}; a.c();\");\n  }\n",
        "begin_line": 751,
        "end_line": 754,
        "comment": "",
        "child_ranges": [
            "(line 752,col 5)-(line 753,col 44)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallUndefinedMethodOnObjLitDepth2()",
        "snippet": "  public void testCallUndefinedMethodOnObjLitDepth2() {\n    test(\"var a = {b: {}}; a.b.c = function() {}; a.b.c(); a.b.d();\",\n         \"var a$b = {}; var a$b$c = function() {}; a$b$c(); a$b.d();\");\n  }\n",
        "begin_line": 756,
        "end_line": 759,
        "comment": "",
        "child_ranges": [
            "(line 757,col 5)-(line 758,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertiesOfAnUndefinedVar()",
        "snippet": "  public void testPropertiesOfAnUndefinedVar() {\n    testSame(\"a.document = d; f(a.document.innerHTML);\");\n  }\n",
        "begin_line": 761,
        "end_line": 763,
        "comment": "",
        "child_ranges": [
            "(line 762,col 5)-(line 762,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfAnObjectThatIsNeitherFunctionNorObjLit()",
        "snippet": "  public void testPropertyOfAnObjectThatIsNeitherFunctionNorObjLit() {\n    testSame(\"var a = window; a.document = d; f(a.document)\");\n  }\n",
        "begin_line": 765,
        "end_line": 767,
        "comment": "",
        "child_ranges": [
            "(line 766,col 5)-(line 766,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis1()",
        "snippet": "  public void testStaticFunctionReferencingThis1() {\n    // Note: Google's JavaScript Style Guide says to avoid using the 'this'\n    // keyword in a static function.\n    test(\"var a = {}; a.b = function() {this.c}; var d = a.b;\",\n         \"var a$b = function() {this.c}; var d = a$b;\", null, UNSAFE_THIS);\n  }\n",
        "begin_line": 769,
        "end_line": 774,
        "comment": "",
        "child_ranges": [
            "(line 772,col 5)-(line 773,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis2()",
        "snippet": "  public void testStaticFunctionReferencingThis2() {\n    // This gives no warning, because \"this\" is in a scope whose name is not\n    // getting collapsed.\n    test(\"var a = {}; \" +\n         \"a.b = function() { return function(){ return this; }; };\",\n         \"var a$b = function() { return function(){ return this; }; };\");\n  }\n",
        "begin_line": 776,
        "end_line": 782,
        "comment": "",
        "child_ranges": [
            "(line 779,col 5)-(line 781,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis3()",
        "snippet": "  public void testStaticFunctionReferencingThis3() {\n    test(\"var a = {b: function() {this.c}};\",\n         \"var a$b = function() { this.c };\", null, UNSAFE_THIS);\n  }\n",
        "begin_line": 784,
        "end_line": 787,
        "comment": "",
        "child_ranges": [
            "(line 785,col 5)-(line 786,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis4()",
        "snippet": "  public void testStaticFunctionReferencingThis4() {\n    test(\"var a = {/** @this {Element} */ b: function() {this.c}};\",\n         \"var a$b = function() { this.c };\");\n  }\n",
        "begin_line": 789,
        "end_line": 792,
        "comment": "",
        "child_ranges": [
            "(line 790,col 5)-(line 791,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPrototypeMethodReferencingThis()",
        "snippet": "  public void testPrototypeMethodReferencingThis() {\n    testSame(\"var A = function(){}; A.prototype = {b: function() {this.c}};\");\n  }\n",
        "begin_line": 794,
        "end_line": 796,
        "comment": "",
        "child_ranges": [
            "(line 795,col 5)-(line 795,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testConstructorReferencingThis()",
        "snippet": "  public void testConstructorReferencingThis() {\n    test(\"var a = {}; \" +\n         \"/** @constructor */ a.b = function() { this.a = 3; };\",\n         \"var a$b = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 798,
        "end_line": 802,
        "comment": "",
        "child_ranges": [
            "(line 799,col 5)-(line 801,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testSafeReferenceOfThis()",
        "snippet": "  public void testSafeReferenceOfThis() {\n    test(\"var a = {}; \" +\n         \"/** @this {Object} */ a.b = function() { this.a = 3; };\",\n         \"var a$b = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 804,
        "end_line": 808,
        "comment": "",
        "child_ranges": [
            "(line 805,col 5)-(line 807,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionReferenceOfThis()",
        "snippet": "  public void testGlobalFunctionReferenceOfThis() {\n    testSame(\"var a = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 810,
        "end_line": 812,
        "comment": "",
        "child_ranges": [
            "(line 811,col 5)-(line 811,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionGivenTwoNames()",
        "snippet": "  public void testFunctionGivenTwoNames() {\n    // It's okay to collapse f's properties because g is not added to the\n    // global scope as an alias for f. (Try it in your browser.)\n    test(\"var f = function g() {}; f.a = 1; h(f.a);\",\n         \"var f = function g() {}; var f$a = 1; h(f$a);\");\n  }\n",
        "begin_line": 814,
        "end_line": 819,
        "comment": "",
        "child_ranges": [
            "(line 817,col 5)-(line 818,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithUsedNumericKey()",
        "snippet": "  public void testObjLitWithUsedNumericKey() {\n    testSame(\"a = {40: {}, c: {}}; var d = a[40]; var e = a.c;\");\n  }\n",
        "begin_line": 821,
        "end_line": 823,
        "comment": "",
        "child_ranges": [
            "(line 822,col 5)-(line 822,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithUnusedNumericKey()",
        "snippet": "  public void testObjLitWithUnusedNumericKey() {\n    test(\"var a = {40: {}, c: {}}; var e = a.c;\",\n         \"var a$1 = {}; var a$c = {}; var e = a$c\");\n  }\n",
        "begin_line": 825,
        "end_line": 828,
        "comment": "",
        "child_ranges": [
            "(line 826,col 5)-(line 827,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithNonIdentifierKeys()",
        "snippet": "  public void testObjLitWithNonIdentifierKeys() {\n    testSame(\"a = {' ': 0, ',': 1}; var c = a[' '];\");\n  }\n",
        "begin_line": 830,
        "end_line": 832,
        "comment": "",
        "child_ranges": [
            "(line 831,col 5)-(line 831,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments1()",
        "snippet": "  public void testChainedAssignments1() {\n    test(\"var x = {}; x.y = a = 0;\",\n         \"var x$y = a = 0;\");\n  }\n",
        "begin_line": 834,
        "end_line": 837,
        "comment": "",
        "child_ranges": [
            "(line 835,col 5)-(line 836,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments2()",
        "snippet": "  public void testChainedAssignments2() {\n    test(\"var x = {}; x.y = a = b = c();\",\n         \"var x$y = a = b = c();\");\n  }\n",
        "begin_line": 839,
        "end_line": 842,
        "comment": "",
        "child_ranges": [
            "(line 840,col 5)-(line 841,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments3()",
        "snippet": "  public void testChainedAssignments3() {\n    test(\"var x = {y: 1}; a = b = x.y;\",\n         \"var x$y = 1; a = b = x$y;\");\n  }\n",
        "begin_line": 844,
        "end_line": 847,
        "comment": "",
        "child_ranges": [
            "(line 845,col 5)-(line 846,col 38)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments4()",
        "snippet": "  public void testChainedAssignments4() {\n    test(\"var x = {}; a = b = x.y;\",\n         \"var x = {}; a = b = x.y;\");\n  }\n",
        "begin_line": 849,
        "end_line": 852,
        "comment": "",
        "child_ranges": [
            "(line 850,col 5)-(line 851,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments5()",
        "snippet": "  public void testChainedAssignments5() {\n    test(\"var x = {}; a = x.y = 0;\", \"var x$y; a = x$y = 0;\");\n  }\n",
        "begin_line": 854,
        "end_line": 856,
        "comment": "",
        "child_ranges": [
            "(line 855,col 5)-(line 855,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments6()",
        "snippet": "  public void testChainedAssignments6() {\n    test(\"var x = {}; a = x.y = b = c();\",\n         \"var x$y; a = x$y = b = c();\");\n  }\n",
        "begin_line": 858,
        "end_line": 861,
        "comment": "",
        "child_ranges": [
            "(line 859,col 5)-(line 860,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments7()",
        "snippet": "  public void testChainedAssignments7() {\n    test(\"var x = {}; a = x.y = {}; /** @constructor */ x.y.z = function() {};\",\n         \"var x$y; a = x$y = {}; var x$y$z = function() {};\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 863,
        "end_line": 867,
        "comment": "",
        "child_ranges": [
            "(line 864,col 5)-(line 866,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments1()",
        "snippet": "  public void testChainedVarAssignments1() {\n    test(\"var x = {y: 1}; var a = x.y = 0;\",\n         \"var x$y = 1; var a = x$y = 0;\");\n  }\n",
        "begin_line": 869,
        "end_line": 872,
        "comment": "",
        "child_ranges": [
            "(line 870,col 5)-(line 871,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments2()",
        "snippet": "  public void testChainedVarAssignments2() {\n    test(\"var x = {y: 1}; var a = x.y = b = 0;\",\n         \"var x$y = 1; var a = x$y = b = 0;\");\n  }\n",
        "begin_line": 874,
        "end_line": 877,
        "comment": "",
        "child_ranges": [
            "(line 875,col 5)-(line 876,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments3()",
        "snippet": "  public void testChainedVarAssignments3() {\n    test(\"var x = {y: {z: 1}}; var b = 0; var a = x.y.z = 1; var c = 2;\",\n         \"var x$y$z = 1; var b = 0; var a = x$y$z = 1; var c = 2;\");\n  }\n",
        "begin_line": 879,
        "end_line": 882,
        "comment": "",
        "child_ranges": [
            "(line 880,col 5)-(line 881,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments4()",
        "snippet": "  public void testChainedVarAssignments4() {\n    test(\"var x = {}; var a = b = x.y = 0;\",\n         \"var x$y; var a = b = x$y = 0;\");\n  }\n",
        "begin_line": 884,
        "end_line": 887,
        "comment": "",
        "child_ranges": [
            "(line 885,col 5)-(line 886,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments5()",
        "snippet": "  public void testChainedVarAssignments5() {\n    test(\"var x = {y: {}}; var a = b = x.y.z = 0;\",\n         \"var x$y$z; var a = b = x$y$z = 0;\");\n  }\n",
        "begin_line": 889,
        "end_line": 892,
        "comment": "",
        "child_ranges": [
            "(line 890,col 5)-(line 891,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPeerAndSubpropertyOfUncollapsibleProperty()",
        "snippet": "  public void testPeerAndSubpropertyOfUncollapsibleProperty() {\n    test(\"var x = {}; var a = x.y = 0; x.w = 1; x.y.z = 2;\" +\n         \"b = x.w; c = x.y.z;\",\n         \"var x$y; var a = x$y = 0; var x$w = 1; x$y.z = 2;\" +\n         \"b = x$w; c = x$y.z;\");\n  }\n",
        "begin_line": 894,
        "end_line": 899,
        "comment": "",
        "child_ranges": [
            "(line 895,col 5)-(line 898,col 32)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testComplexAssignmentAfterInitialAssignment()",
        "snippet": "  public void testComplexAssignmentAfterInitialAssignment() {\n    test(\"var d = {}; d.e = {}; d.e.f = 0; a = b = d.e.f = 1;\",\n         \"var d$e$f = 0; a = b = d$e$f = 1;\");\n  }\n",
        "begin_line": 901,
        "end_line": 904,
        "comment": "",
        "child_ranges": [
            "(line 902,col 5)-(line 903,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testRenamePrefixOfUncollapsibleProperty()",
        "snippet": "  public void testRenamePrefixOfUncollapsibleProperty() {\n    test(\"var d = {}; d.e = {}; a = b = d.e.f = 0;\",\n         \"var d$e$f; a = b = d$e$f = 0;\");\n  }\n",
        "begin_line": 906,
        "end_line": 909,
        "comment": "",
        "child_ranges": [
            "(line 907,col 5)-(line 908,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNewOperator()",
        "snippet": "  public void testNewOperator() {\n    // Using the new operator on a name doesn't prevent its (static) properties\n    // from getting collapsed.\n    test(\"var a = {}; a.b = function() {}; a.b.c = 1; var d = new a.b();\",\n         \"var a$b = function() {}; var a$b$c = 1; var d = new a$b();\");\n  }\n",
        "begin_line": 911,
        "end_line": 916,
        "comment": "",
        "child_ranges": [
            "(line 914,col 5)-(line 915,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMethodCall()",
        "snippet": "  public void testMethodCall() {\n    test(\"var a = {}; a.b = function() {}; var d = a.b();\",\n         \"var a$b = function() {}; var d = a$b();\");\n  }\n",
        "begin_line": 918,
        "end_line": 921,
        "comment": "",
        "child_ranges": [
            "(line 919,col 5)-(line 920,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDefinedInLocalScopeIsLeftAlone()",
        "snippet": "  public void testObjLitDefinedInLocalScopeIsLeftAlone() {\n    test(\"var a = {}; a.b = function() {};\" +\n         \"a.b.prototype.f_ = function() {\" +\n         \"  var x = { p: '', q: '', r: ''}; var y = x.q;\" +\n         \"};\",\n         \"var a$b = function() {};\" +\n         \"a$b.prototype.f_ = function() {\" +\n         \"  var x = { p: '', q: '', r: ''}; var y = x.q;\" +\n         \"};\");\n  }\n",
        "begin_line": 923,
        "end_line": 932,
        "comment": "",
        "child_ranges": [
            "(line 924,col 5)-(line 931,col 15)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertiesOnBothSidesOfAssignment()",
        "snippet": "  public void testPropertiesOnBothSidesOfAssignment() {\n    // This verifies that replacements are done in the right order. Collapsing\n    // the l-value in an assignment affects the parse tree immediately above\n    // the r-value, so we update all rvalues before any lvalues.\n    test(\"var a = {b: 0}; a.c = a.b;\", \"var a$b = 0; var a$c = a$b;\");\n  }\n",
        "begin_line": 934,
        "end_line": 939,
        "comment": "",
        "child_ranges": [
            "(line 938,col 5)-(line 938,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallOnUndefinedProperty()",
        "snippet": "  public void testCallOnUndefinedProperty() {\n    // The \"inherits\" property is not explicitly defined on a.b anywhere, but\n    // it is accessed as though it certainly exists (it is called), so we infer\n    // that it must be an uncollapsible property that has come into existence\n    // some other way.\n    test(\"var a = {}; a.b = function(){}; a.b.inherits(x);\",\n         \"var a$b = function(){}; a$b.inherits(x);\");\n  }\n",
        "begin_line": 941,
        "end_line": 948,
        "comment": "",
        "child_ranges": [
            "(line 946,col 5)-(line 947,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGetPropOnUndefinedProperty()",
        "snippet": "  public void testGetPropOnUndefinedProperty() {\n    // The \"superClass_\" property is not explicitly defined on a.b anywhere,\n    // but it is accessed as though it certainly exists (a subproperty of it\n    // is accessed), so we infer that it must be an uncollapsible property that\n    // has come into existence some other way.\n    test(\"var a = {b: function(){}}; a.b.prototype.c =\" +\n         \"function() { a.b.superClass_.c.call(this); }\",\n         \"var a$b = function(){}; a$b.prototype.c =\" +\n         \"function() { a$b.superClass_.c.call(this); }\");\n  }\n",
        "begin_line": 950,
        "end_line": 959,
        "comment": "",
        "child_ranges": [
            "(line 955,col 5)-(line 958,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias1()",
        "snippet": "  public void testLocalAlias1() {\n    test(\"var a = {b: 3}; function f() { var x = a; f(x.b); }\",\n         \"var a$b = 3; function f() { var x = null; f(a$b); }\");\n  }\n",
        "begin_line": 961,
        "end_line": 964,
        "comment": "",
        "child_ranges": [
            "(line 962,col 5)-(line 963,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias2()",
        "snippet": "  public void testLocalAlias2() {\n    test(\"var a = {b: 3, c: 4}; function f() { var x = a; f(x.b); f(x.c);}\",\n         \"var a$b = 3; var a$c = 4; \" +\n         \"function f() { var x = null; f(a$b); f(a$c);}\");\n  }\n",
        "begin_line": 966,
        "end_line": 970,
        "comment": "",
        "child_ranges": [
            "(line 967,col 5)-(line 969,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias3()",
        "snippet": "  public void testLocalAlias3() {\n    test(\"var a = {b: 3, c: {d: 5}}; \" +\n         \"function f() { var x = a; f(x.b); f(x.c); f(x.c.d); }\",\n         \"var a$b = 3; var a$c = {d: 5}; \" +\n         \"function f() { var x = null; f(a$b); f(a$c); f(a$c.d);}\");\n  }\n",
        "begin_line": 972,
        "end_line": 977,
        "comment": "",
        "child_ranges": [
            "(line 973,col 5)-(line 976,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias4()",
        "snippet": "  public void testLocalAlias4() {\n    test(\"var a = {b: 3}; var c = {d: 5}; \" +\n         \"function f() { var x = a; var y = c; f(x.b); f(y.d); }\",\n         \"var a$b = 3; var c$d = 5; \" +\n         \"function f() { var x = null; var y = null; f(a$b); f(c$d);}\");\n  }\n",
        "begin_line": 979,
        "end_line": 984,
        "comment": "",
        "child_ranges": [
            "(line 980,col 5)-(line 983,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias5()",
        "snippet": "  public void testLocalAlias5() {\n    test(\"var a = {b: {c: 5}}; \" +\n         \"function f() { var x = a; var y = x.b; f(a.b.c); f(y.c); }\",\n         \"var a$b$c = 5; \" +\n         \"function f() { var x = null; var y = null; f(a$b$c); f(a$b$c);}\");\n  }\n",
        "begin_line": 986,
        "end_line": 991,
        "comment": "",
        "child_ranges": [
            "(line 987,col 5)-(line 990,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias6()",
        "snippet": "  public void testLocalAlias6() {\n    test(\"var a = {b: 3}; function f() { var x = a; if (x.b) { f(x.b); } }\",\n         \"var a$b = 3; function f() { var x = null; if (a$b) { f(a$b); } }\");\n  }\n",
        "begin_line": 993,
        "end_line": 996,
        "comment": "",
        "child_ranges": [
            "(line 994,col 5)-(line 995,col 77)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias7()",
        "snippet": "  public void testLocalAlias7() {\n    test(\"var a = {b: {c: 5}}; function f() { var x = a.b; f(x.c); }\",\n         \"var a$b$c = 5; function f() { var x = null; f(a$b$c); }\");\n  }\n",
        "begin_line": 998,
        "end_line": 1001,
        "comment": "",
        "child_ranges": [
            "(line 999,col 5)-(line 1000,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalWriteToAncestor()",
        "snippet": "  public void testGlobalWriteToAncestor() {\n    testSame(\"var a = {b: 3}; function f() { var x = a; f(a.b); } a = 5;\");\n  }\n",
        "begin_line": 1003,
        "end_line": 1005,
        "comment": "",
        "child_ranges": [
            "(line 1004,col 5)-(line 1004,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalWriteToNonAncestor()",
        "snippet": "  public void testGlobalWriteToNonAncestor() {\n    test(\"var a = {b: 3}; function f() { var x = a; f(a.b); } a.b = 5;\",\n         \"var a$b = 3; function f() { var x = null; f(a$b); } a$b = 5;\");\n  }\n",
        "begin_line": 1007,
        "end_line": 1010,
        "comment": "",
        "child_ranges": [
            "(line 1008,col 5)-(line 1009,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalWriteToAncestor()",
        "snippet": "  public void testLocalWriteToAncestor() {\n    testSame(\"var a = {b: 3}; function f() { a = 5; var x = a; f(a.b); } \");\n  }\n",
        "begin_line": 1012,
        "end_line": 1014,
        "comment": "",
        "child_ranges": [
            "(line 1013,col 5)-(line 1013,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalWriteToNonAncestor()",
        "snippet": "  public void testLocalWriteToNonAncestor() {\n    test(\"var a = {b: 3}; \" +\n         \"function f() { a.b = 5; var x = a; f(a.b); }\",\n         \"var a$b = 3; function f() { a$b = 5; var x = null; f(a$b); } \");\n  }\n",
        "begin_line": 1016,
        "end_line": 1020,
        "comment": "",
        "child_ranges": [
            "(line 1017,col 5)-(line 1019,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNonWellformedAlias1()",
        "snippet": "  public void testNonWellformedAlias1() {\n    testSame(\"var a = {b: 3}; function f() { f(x); var x = a; f(x.b); }\");\n  }\n",
        "begin_line": 1022,
        "end_line": 1024,
        "comment": "",
        "child_ranges": [
            "(line 1023,col 5)-(line 1023,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNonWellformedAlias2()",
        "snippet": "  public void testNonWellformedAlias2() {\n    testSame(\"var a = {b: 3}; \" +\n             \"function f() { if (false) { var x = a; f(x.b); } f(x); }\");\n  }\n",
        "begin_line": 1026,
        "end_line": 1029,
        "comment": "",
        "child_ranges": [
            "(line 1027,col 5)-(line 1028,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfAncestor()",
        "snippet": "  public void testLocalAliasOfAncestor() {\n    testSame(\"var a = {b: {c: 5}}; function g() { f(a); } \" +\n             \"function f() { var x = a.b; f(x.c); }\");\n  }\n",
        "begin_line": 1031,
        "end_line": 1034,
        "comment": "",
        "child_ranges": [
            "(line 1032,col 5)-(line 1033,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalAliasOfAncestor()",
        "snippet": "  public void testGlobalAliasOfAncestor() {\n    testSame(\"var a = {b: {c: 5}}; var y = a; \" +\n             \"function f() { var x = a.b; f(x.c); }\");\n  }\n",
        "begin_line": 1036,
        "end_line": 1039,
        "comment": "",
        "child_ranges": [
            "(line 1037,col 5)-(line 1038,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfOtherName()",
        "snippet": "  public void testLocalAliasOfOtherName() {\n    testSame(\"var foo = function() { return {b: 3}; };\" +\n             \"var a = foo(); a.b = 5; \" +\n             \"function f() { var x = a.b; f(x); }\");\n  }\n",
        "begin_line": 1041,
        "end_line": 1045,
        "comment": "",
        "child_ranges": [
            "(line 1042,col 5)-(line 1044,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfFunction()",
        "snippet": "  public void testLocalAliasOfFunction() {\n    test(\"var a = function() {}; a.b = 5; \" +\n         \"function f() { var x = a.b; f(x); }\",\n         \"var a = function() {}; var a$b = 5; \" +\n         \"function f() { var x = null; f(a$b); }\");\n  }\n",
        "begin_line": 1047,
        "end_line": 1052,
        "comment": "",
        "child_ranges": [
            "(line 1048,col 5)-(line 1051,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNoInlineGetpropIntoCall()",
        "snippet": "  public void testNoInlineGetpropIntoCall() {\n    test(\"var b = x; function f() { var a = b; a(); }\",\n         \"var b = x; function f() { var a = null; b(); }\");\n    test(\"var b = {}; b.c = x; function f() { var a = b.c; a(); }\",\n         \"var b$c = x; function f() { var a = null; b$c(); }\");\n  }\n",
        "begin_line": 1054,
        "end_line": 1059,
        "comment": "",
        "child_ranges": [
            "(line 1055,col 5)-(line 1056,col 59)",
            "(line 1057,col 5)-(line 1058,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testInlineAliasWithModifications()",
        "snippet": "  public void testInlineAliasWithModifications() {\n    testSame(\"var x = 10; function f() { var y = x; x++; alert(y)} \");\n    testSame(\"var x = 10; function f() { var y = x; x+=1; alert(y)} \");\n    test(\"var x = {}; x.x = 10; function f() {var y=x.x; x.x++; alert(y)}\",\n         \"var x$x = 10; function f() {var y=x$x; x$x++; alert(y)}\");\n    test(\"var x = {}; x.x = 10; function f() {var y=x.x; x.x+=1; alert(y)}\",\n         \"var x$x = 10; function f() {var y=x$x; x$x+=1; alert(y)}\");\n  }\n",
        "begin_line": 1061,
        "end_line": 1068,
        "comment": "",
        "child_ranges": [
            "(line 1062,col 5)-(line 1062,col 70)",
            "(line 1063,col 5)-(line 1063,col 71)",
            "(line 1064,col 5)-(line 1065,col 68)",
            "(line 1066,col 5)-(line 1067,col 69)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapsePropertyOnExternType()",
        "snippet": "  public void testCollapsePropertyOnExternType() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"String.myFunc = function() {}; String.myFunc();\",\n         \"var String$myFunc = function() {}; String$myFunc()\");\n  }\n",
        "begin_line": 1070,
        "end_line": 1074,
        "comment": "",
        "child_ranges": [
            "(line 1071,col 5)-(line 1071,col 43)",
            "(line 1072,col 5)-(line 1073,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapseForEachWithoutExterns()",
        "snippet": "  public void testCollapseForEachWithoutExterns() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"/** @constructor */function Array(){};\\n\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\",\n         \"if (!Array$forEach) {\\n\" +\n         \"  var Array$forEach = function() {};\\n\" +\n         \"}\", null, null);\n  }\n",
        "begin_line": 1076,
        "end_line": 1085,
        "comment": "",
        "child_ranges": [
            "(line 1077,col 5)-(line 1077,col 43)",
            "(line 1078,col 5)-(line 1084,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNoCollapseForEachInExterns()",
        "snippet": "  public void testNoCollapseForEachInExterns() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"/** @constructor */ function Array() {}\" +\n         \"Array.forEach = function() {}\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\", null, null);\n  }\n",
        "begin_line": 1087,
        "end_line": 1097,
        "comment": "",
        "child_ranges": [
            "(line 1088,col 5)-(line 1088,col 43)",
            "(line 1089,col 5)-(line 1096,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testIssue931()",
        "snippet": "  public void testIssue931() {\n    collapsePropertiesOnExternTypes = true;\n    testSame(\n      \"function f() {\\n\" +\n      \"  return function () {\\n\" +\n      \"    var args = arguments;\\n\" +\n      \"    setTimeout(function() { alert(args); }, 0);\\n\" +\n      \"  }\\n\" +\n      \"};\\n\");\n  }\n",
        "begin_line": 1099,
        "end_line": 1108,
        "comment": "",
        "child_ranges": [
            "(line 1100,col 5)-(line 1100,col 43)",
            "(line 1101,col 5)-(line 1107,col 14)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDoNotCollapsePropertyOnExternType()",
        "snippet": "  public void testDoNotCollapsePropertyOnExternType() {\n    collapsePropertiesOnExternTypes = false;\n    test(\"String.myFunc = function() {}; String.myFunc()\",\n         \"String.myFunc = function() {}; String.myFunc()\");\n  }\n",
        "begin_line": 1110,
        "end_line": 1114,
        "comment": "",
        "child_ranges": [
            "(line 1111,col 5)-(line 1111,col 44)",
            "(line 1112,col 5)-(line 1113,col 59)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1704733()",
        "snippet": "  public void testBug1704733() {\n    String prelude =\n        \"function protect(x) { return x; }\" +\n        \"function O() {}\" +\n        \"protect(O).m1 = function() {};\" +\n        \"protect(O).m2 = function() {};\" +\n        \"protect(O).m3 = function() {};\";\n\n    testSame(prelude +\n        \"alert(O.m1); alert(O.m2()); alert(!O.m3);\");\n  }\n",
        "begin_line": 1116,
        "end_line": 1126,
        "comment": "",
        "child_ranges": [
            "(line 1117,col 5)-(line 1122,col 41)",
            "(line 1124,col 5)-(line 1125,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1956277()",
        "snippet": "  public void testBug1956277() {\n    test(\"var CONST = {}; CONST.URL = 3;\",\n         \"var CONST$URL = 3;\");\n  }\n",
        "begin_line": 1128,
        "end_line": 1131,
        "comment": "",
        "child_ranges": [
            "(line 1129,col 5)-(line 1130,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1974371()",
        "snippet": "  public void testBug1974371() {\n    test(\n        \"/** @enum {Object} */ var Foo = {A: {c: 2}, B: {c: 3}};\" +\n        \"for (var key in Foo) {}\",\n        \"var Foo$A = {c: 2}; var Foo$B = {c: 3};\" +\n        \"var Foo = {A: Foo$A, B: Foo$B};\" +\n         \"for (var key in Foo) {}\");\n  }\n",
        "begin_line": 1133,
        "end_line": 1140,
        "comment": "",
        "child_ranges": [
            "(line 1134,col 5)-(line 1139,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects1()",
        "snippet": "  public void testEnumOfObjects1() {\n    test(\n        COMMON_ENUM +\n        \"for (var key in Foo.A) {}\",\n         \"var Foo$A = {c: 2}; var Foo$B$c = 3; for (var key in Foo$A) {}\");\n  }\n",
        "begin_line": 1145,
        "end_line": 1150,
        "comment": "",
        "child_ranges": [
            "(line 1146,col 5)-(line 1149,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects2()",
        "snippet": "  public void testEnumOfObjects2() {\n    test(\n        COMMON_ENUM +\n        \"foo(Foo.A.c);\",\n         \"var Foo$A$c = 2; var Foo$B$c = 3; foo(Foo$A$c);\");\n  }\n",
        "begin_line": 1152,
        "end_line": 1157,
        "comment": "",
        "child_ranges": [
            "(line 1153,col 5)-(line 1156,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects3()",
        "snippet": "  public void testEnumOfObjects3() {\n    test(\n        \"var x = {c: 2}; var y = {c: 3};\" +\n        \"/** @enum {Object} */ var Foo = {A: x, B: y};\" +\n        \"for (var key in Foo) {}\",\n        \"var x = {c: 2}; var y = {c: 3};\" +\n        \"var Foo$A = x; var Foo$B = y; var Foo = {A: Foo$A, B: Foo$B};\" +\n        \"for (var key in Foo) {}\");\n  }\n",
        "begin_line": 1159,
        "end_line": 1167,
        "comment": "",
        "child_ranges": [
            "(line 1160,col 5)-(line 1166,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects4()",
        "snippet": "  public void testEnumOfObjects4() {\n    // Note that this produces bad code, but that's OK, because\n    // checkConsts will yell at you for reassigning an enum value.\n    // (enum values have to be constant).\n    test(\n        COMMON_ENUM +\n        \"for (var key in Foo) {} Foo.A = 3; alert(Foo.A);\",\n        \"var Foo$A = {c: 2}; var Foo$B = {c: 3};\" +\n        \"var Foo = {A: Foo$A, B: Foo$B};\" +\n        \"for (var key in Foo) {} Foo$A = 3; alert(Foo$A);\");\n  }\n",
        "begin_line": 1169,
        "end_line": 1179,
        "comment": "",
        "child_ranges": [
            "(line 1173,col 5)-(line 1178,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectOfObjects1()",
        "snippet": "  public void testObjectOfObjects1() {\n    // Basically the same as testEnumOfObjects4, but without the\n    // constant enum values.\n    testSame(\n        \"var Foo = {a: {c: 2}, b: {c: 3}};\" +\n        \"for (var key in Foo) {} Foo.a = 3; alert(Foo.a);\");\n  }\n",
        "begin_line": 1181,
        "end_line": 1187,
        "comment": "",
        "child_ranges": [
            "(line 1184,col 5)-(line 1186,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject0()",
        "snippet": "  public void testReferenceInAnonymousObject0() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"var d = a.b.prototype.c;\",\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var d = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1189,
        "end_line": 1197,
        "comment": "",
        "child_ranges": [
            "(line 1190,col 5)-(line 1196,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject1()",
        "snippet": "  public void testReferenceInAnonymousObject1() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"var d = a.b.prototype.c;\",\n         \"var a$b = function(){};\" +\n         \"var d = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1199,
        "end_line": 1205,
        "comment": "",
        "child_ranges": [
            "(line 1200,col 5)-(line 1204,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject2()",
        "snippet": "  public void testReferenceInAnonymousObject2() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"var d = {c: a.b.prototype.c};\",\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var d$c = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1207,
        "end_line": 1215,
        "comment": "",
        "child_ranges": [
            "(line 1208,col 5)-(line 1214,col 39)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject3()",
        "snippet": "  public void testReferenceInAnonymousObject3() {\n    test(\"function CreateClass(a$$1) {}\" +\n         \"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"a.d = CreateClass({c: a.b.prototype.c});\",\n         \"function CreateClass(a$$1) {}\" +\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var a$d = CreateClass({c: a$b.prototype.c});\");\n  }\n",
        "begin_line": 1217,
        "end_line": 1227,
        "comment": "",
        "child_ranges": [
            "(line 1218,col 5)-(line 1226,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject4()",
        "snippet": "  public void testReferenceInAnonymousObject4() {\n    test(\"function CreateClass(a) {}\" +\n         \"var a = {};\" +\n         \"a.b = CreateClass({c: function() {}});\" +\n         \"a.d = CreateClass({c: a.b.c});\",\n         \"function CreateClass(a$$1) {}\" +\n         \"var a$b = CreateClass({c: function() {}});\" +\n         \"var a$d = CreateClass({c: a$b.c});\");\n  }\n",
        "begin_line": 1229,
        "end_line": 1237,
        "comment": "",
        "child_ranges": [
            "(line 1230,col 5)-(line 1236,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject5()",
        "snippet": "  public void testReferenceInAnonymousObject5() {\n    test(\"function CreateClass(a) {}\" +\n         \"var a = {};\" +\n         \"a.b = CreateClass({c: function() {}});\" +\n         \"a.d = CreateClass({c: a.b.prototype.c});\",\n         \"function CreateClass(a$$1) {}\" +\n         \"var a$b = CreateClass({c: function() {}});\" +\n         \"var a$d = CreateClass({c: a$b.prototype.c});\");\n  }\n",
        "begin_line": 1239,
        "end_line": 1247,
        "comment": "",
        "child_ranges": [
            "(line 1240,col 5)-(line 1246,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCrashInCommaOperator()",
        "snippet": "  public void testCrashInCommaOperator() {\n    test(\"var a = {}; a.b = function() {},a.b();\",\n         \"var a$b; a$b=function() {},a$b();\");\n  }\n",
        "begin_line": 1249,
        "end_line": 1252,
        "comment": "",
        "child_ranges": [
            "(line 1250,col 5)-(line 1251,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCrashInNestedAssign()",
        "snippet": "  public void testCrashInNestedAssign() {\n    test(\"var a = {}; if (a.b = function() {}) a.b();\",\n         \"var a$b; if (a$b=function() {}) { a$b(); }\");\n  }\n",
        "begin_line": 1254,
        "end_line": 1257,
        "comment": "",
        "child_ranges": [
            "(line 1255,col 5)-(line 1256,col 55)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwinReferenceCancelsChildCollapsing()",
        "snippet": "  public void testTwinReferenceCancelsChildCollapsing() {\n    test(\"var a = {}; if (a.b = function() {}) { a.b.c = 3; a.b(a.b.c); }\",\n         \"var a$b; if (a$b = function() {}) { a$b.c = 3; a$b(a$b.c); }\");\n  }\n",
        "begin_line": 1259,
        "end_line": 1262,
        "comment": "",
        "child_ranges": [
            "(line 1260,col 5)-(line 1261,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign()",
        "snippet": "  public void testPropWithDollarSign() {\n    test(\"var a = {$: 3}\", \"var a$$0 = 3;\");\n  }\n",
        "begin_line": 1264,
        "end_line": 1266,
        "comment": "",
        "child_ranges": [
            "(line 1265,col 5)-(line 1265,col 44)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign2()",
        "snippet": "  public void testPropWithDollarSign2() {\n    test(\"var a = {$: function(){}}\", \"var a$$0 = function(){};\");\n  }\n",
        "begin_line": 1268,
        "end_line": 1270,
        "comment": "",
        "child_ranges": [
            "(line 1269,col 5)-(line 1269,col 66)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign3()",
        "snippet": "  public void testPropWithDollarSign3() {\n    test(\"var a = {b: {c: 3}, b$c: function(){}}\",\n         \"var a$b$c = 3; var a$b$0c = function(){};\");\n  }\n",
        "begin_line": 1272,
        "end_line": 1275,
        "comment": "",
        "child_ranges": [
            "(line 1273,col 5)-(line 1274,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign4()",
        "snippet": "  public void testPropWithDollarSign4() {\n    test(\"var a = {$$: {$$$: 3}};\", \"var a$$0$0$$0$0$0 = 3;\");\n  }\n",
        "begin_line": 1277,
        "end_line": 1279,
        "comment": "",
        "child_ranges": [
            "(line 1278,col 5)-(line 1278,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign5()",
        "snippet": "  public void testPropWithDollarSign5() {\n    test(\"var a = {b: {$0c: true}, b$0c: false};\",\n         \"var a$b$$00c = true; var a$b$00c = false;\");\n  }\n",
        "begin_line": 1281,
        "end_line": 1284,
        "comment": "",
        "child_ranges": [
            "(line 1282,col 5)-(line 1283,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testConstKey()",
        "snippet": "  public void testConstKey() {\n    test(\"var foo = {A: 3};\", \"var foo$A = 3;\");\n  }\n",
        "begin_line": 1286,
        "end_line": 1288,
        "comment": "",
        "child_ranges": [
            "(line 1287,col 5)-(line 1287,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOnGlobalCtor()",
        "snippet": "  public void testPropertyOnGlobalCtor() {\n    test(\"/** @constructor */ function Map() {} Map.foo = 3; Map;\",\n         \"function Map() {} var Map$foo = 3; Map;\");\n  }\n",
        "begin_line": 1290,
        "end_line": 1293,
        "comment": "",
        "child_ranges": [
            "(line 1291,col 5)-(line 1292,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOnGlobalInterface()",
        "snippet": "  public void testPropertyOnGlobalInterface() {\n    test(\"/** @interface */ function Map() {} Map.foo = 3; Map;\",\n         \"function Map() {} var Map$foo = 3; Map;\");\n  }\n",
        "begin_line": 1295,
        "end_line": 1298,
        "comment": "",
        "child_ranges": [
            "(line 1296,col 5)-(line 1297,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOnGlobalFunction()",
        "snippet": "  public void testPropertyOnGlobalFunction() {\n    testSame(\"function Map() {} Map.foo = 3; Map;\");\n  }\n",
        "begin_line": 1300,
        "end_line": 1302,
        "comment": "",
        "child_ranges": [
            "(line 1301,col 5)-(line 1301,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testIssue389()",
        "snippet": "  public void testIssue389() {\n    test(\n        \"function alias() {}\" +\n        \"var dojo = {};\" +\n        \"dojo.gfx = {};\" +\n        \"dojo.declare = function() {};\" +\n        \"/** @constructor */\" +\n        \"dojo.gfx.Shape = function() {};\" +\n        \"dojo.gfx.Shape = dojo.declare('dojo.gfx.Shape');\" +\n        \"alias(dojo);\",\n        \"function alias() {}\" +\n        \"var dojo = {};\" +\n        \"dojo.gfx = {};\" +\n        \"dojo.declare = function() {};\" +\n        \"/** @constructor */\" +\n        \"var dojo$gfx$Shape = function() {};\" +\n        \"dojo$gfx$Shape = dojo.declare('dojo.gfx.Shape');\" +\n        \"alias(dojo);\",\n        null,\n        CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 1304,
        "end_line": 1324,
        "comment": "",
        "child_ranges": [
            "(line 1305,col 5)-(line 1323,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasedTopLevelName()",
        "snippet": "  public void testAliasedTopLevelName() {\n    testSame(\n        \"function alias() {}\" +\n        \"var dojo = {};\" +\n        \"dojo.gfx = {};\" +\n        \"dojo.declare = function() {};\" +\n        \"dojo.gfx.Shape = {SQUARE: 2};\" +\n        \"dojo.gfx.Shape = dojo.declare('dojo.gfx.Shape');\" +\n        \"alias(dojo);\" +\n        \"alias(dojo$gfx$Shape$SQUARE);\");\n  }\n",
        "begin_line": 1326,
        "end_line": 1336,
        "comment": "",
        "child_ranges": [
            "(line 1327,col 5)-(line 1335,col 41)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasedTopLevelEnum()",
        "snippet": "  public void testAliasedTopLevelEnum() {\n    test(\n        \"function alias() {}\" +\n        \"var dojo = {};\" +\n        \"dojo.gfx = {};\" +\n        \"dojo.declare = function() {};\" +\n        \"/** @enum {number} */\" +\n        \"dojo.gfx.Shape = {SQUARE: 2};\" +\n        \"dojo.gfx.Shape = dojo.declare('dojo.gfx.Shape');\" +\n        \"alias(dojo);\" +\n        \"alias(dojo.gfx.Shape.SQUARE);\",\n        \"function alias() {}\" +\n        \"var dojo = {};\" +\n        \"dojo.gfx = {};\" +\n        \"dojo.declare = function() {};\" +\n        \"/** @constructor */\" +\n        \"var dojo$gfx$Shape = {SQUARE: 2};\" +\n        \"dojo$gfx$Shape = dojo.declare('dojo.gfx.Shape');\" +\n        \"alias(dojo);\" +\n        \"alias(dojo$gfx$Shape.SQUARE);\",\n        null,\n        CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 1338,
        "end_line": 1360,
        "comment": "",
        "child_ranges": [
            "(line 1339,col 5)-(line 1359,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAssignFunctionBeforeDefinition()",
        "snippet": "  public void testAssignFunctionBeforeDefinition() {\n    testSame(\n        \"f = function() {};\" +\n        \"var f = null;\");\n  }\n",
        "begin_line": 1362,
        "end_line": 1366,
        "comment": "",
        "child_ranges": [
            "(line 1363,col 5)-(line 1365,col 25)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectLitBeforeDefinition()",
        "snippet": "  public void testObjectLitBeforeDefinition() {\n    testSame(\n        \"a = {b: 3};\" +\n        \"var a = null;\" +\n        \"this.c = a.b;\");\n  }\n",
        "begin_line": 1368,
        "end_line": 1373,
        "comment": "",
        "child_ranges": [
            "(line 1369,col 5)-(line 1372,col 25)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTypedef1()",
        "snippet": "  public void testTypedef1() {\n    test(\"var foo = {};\" +\n         \"/** @typedef {number} */ foo.Baz;\",\n         \"var foo = {}; var foo$Baz;\");\n  }\n",
        "begin_line": 1375,
        "end_line": 1379,
        "comment": "",
        "child_ranges": [
            "(line 1376,col 5)-(line 1378,col 39)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTypedef2()",
        "snippet": "  public void testTypedef2() {\n    test(\"var foo = {};\" +\n         \"/** @typedef {number} */ foo.Bar.Baz;\" +\n         \"foo.Bar = function() {};\",\n         \"var foo$Bar$Baz; var foo$Bar = function(){};\");\n  }\n",
        "begin_line": 1381,
        "end_line": 1386,
        "comment": "",
        "child_ranges": [
            "(line 1382,col 5)-(line 1385,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete1()",
        "snippet": "  public void testDelete1() {\n    testSame(\n        \"var foo = {};\" +\n        \"foo.bar = 3;\" +\n        \"delete foo.bar;\");\n  }\n",
        "begin_line": 1388,
        "end_line": 1393,
        "comment": "",
        "child_ranges": [
            "(line 1389,col 5)-(line 1392,col 27)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete2()",
        "snippet": "  public void testDelete2() {\n    test(\n        \"var foo = {};\" +\n        \"foo.bar = 3;\" +\n        \"foo.baz = 3;\" +\n        \"delete foo.bar;\",\n        \"var foo = {};\" +\n        \"foo.bar = 3;\" +\n        \"var foo$baz = 3;\" +\n        \"delete foo.bar;\");\n  }\n",
        "begin_line": 1395,
        "end_line": 1405,
        "comment": "",
        "child_ranges": [
            "(line 1396,col 5)-(line 1404,col 27)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete3()",
        "snippet": "  public void testDelete3() {\n    testSame(\n        \"var foo = {bar: 3};\" +\n        \"delete foo.bar;\");\n  }\n",
        "begin_line": 1407,
        "end_line": 1411,
        "comment": "",
        "child_ranges": [
            "(line 1408,col 5)-(line 1410,col 27)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete4()",
        "snippet": "  public void testDelete4() {\n    test(\n        \"var foo = {bar: 3, baz: 3};\" +\n        \"delete foo.bar;\",\n        \"var foo$baz=3;var foo={bar:3};delete foo.bar\");\n  }\n",
        "begin_line": 1413,
        "end_line": 1418,
        "comment": "",
        "child_ranges": [
            "(line 1414,col 5)-(line 1417,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete5()",
        "snippet": "  public void testDelete5() {\n    test(\n        \"var x = {};\" +\n        \"x.foo = {};\" +\n        \"x.foo.bar = 3;\" +\n        \"delete x.foo.bar;\",\n        \"var x$foo = {};\" +\n        \"x$foo.bar = 3;\" +\n        \"delete x$foo.bar;\");\n  }\n",
        "begin_line": 1420,
        "end_line": 1429,
        "comment": "",
        "child_ranges": [
            "(line 1421,col 5)-(line 1428,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete6()",
        "snippet": "  public void testDelete6() {\n    test(\n        \"var x = {};\" +\n        \"x.foo = {};\" +\n        \"x.foo.bar = 3;\" +\n        \"x.foo.baz = 3;\" +\n        \"delete x.foo.bar;\",\n        \"var x$foo = {};\" +\n        \"x$foo.bar = 3;\" +\n        \"var x$foo$baz = 3;\" +\n        \"delete x$foo.bar;\");\n  }\n",
        "begin_line": 1431,
        "end_line": 1442,
        "comment": "",
        "child_ranges": [
            "(line 1432,col 5)-(line 1441,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete7()",
        "snippet": "  public void testDelete7() {\n    test(\n        \"var x = {};\" +\n        \"x.foo = {bar: 3};\" +\n        \"delete x.foo.bar;\",\n        \"var x$foo = {bar: 3};\" +\n        \"delete x$foo.bar;\");\n  }\n",
        "begin_line": 1444,
        "end_line": 1451,
        "comment": "",
        "child_ranges": [
            "(line 1445,col 5)-(line 1450,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete8()",
        "snippet": "  public void testDelete8() {\n    test(\n        \"var x = {};\" +\n        \"x.foo = {bar: 3, baz: 3};\" +\n        \"delete x.foo.bar;\",\n        \"var x$foo$baz = 3; var x$foo = {bar: 3};\" +\n        \"delete x$foo.bar;\");\n  }\n",
        "begin_line": 1453,
        "end_line": 1460,
        "comment": "",
        "child_ranges": [
            "(line 1454,col 5)-(line 1459,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete9()",
        "snippet": "  public void testDelete9() {\n    testSame(\n        \"var x = {};\" +\n        \"x.foo = {};\" +\n        \"x.foo.bar = 3;\" +\n        \"delete x.foo;\");\n  }\n",
        "begin_line": 1462,
        "end_line": 1468,
        "comment": "",
        "child_ranges": [
            "(line 1463,col 5)-(line 1467,col 25)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete10()",
        "snippet": "  public void testDelete10() {\n    testSame(\n        \"var x = {};\" +\n        \"x.foo = {bar: 3};\" +\n        \"delete x.foo;\");\n  }\n",
        "begin_line": 1470,
        "end_line": 1475,
        "comment": "",
        "child_ranges": [
            "(line 1471,col 5)-(line 1474,col 25)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDelete11()",
        "snippet": "  public void testDelete11() {\n    // Constructors are always collapsed.\n    test(\n        \"var x = {};\" +\n        \"x.foo = {};\" +\n        \"/** @constructor */ x.foo.Bar = function() {};\" +\n        \"delete x.foo;\",\n        \"var x = {};\" +\n        \"x.foo = {};\" +\n        \"var x$foo$Bar = function() {};\" +\n        \"delete x.foo;\",\n        null,\n        CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 1477,
        "end_line": 1490,
        "comment": "",
        "child_ranges": [
            "(line 1479,col 5)-(line 1489,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPreserveConstructorDoc()",
        "snippet": "  public void testPreserveConstructorDoc() {\n    test(\"var foo = {};\" +\n         \"/** @constructor */\\n\" +\n         \"foo.bar = function() {}\",\n         \"var foo$bar = function() {}\");\n\n    Node root = getLastCompiler().getRoot();\n\n    Node fooBarNode = findQualifiedNameNode(\"foo$bar\", root);\n    Node varNode = fooBarNode.getParent();\n    assertTrue(varNode.isVar());\n    assertTrue(varNode.getJSDocInfo().isConstructor());\n  }\n",
        "begin_line": 1492,
        "end_line": 1504,
        "comment": "",
        "child_ranges": [
            "(line 1493,col 5)-(line 1496,col 40)",
            "(line 1498,col 5)-(line 1498,col 44)",
            "(line 1500,col 5)-(line 1500,col 61)",
            "(line 1501,col 5)-(line 1501,col 42)",
            "(line 1502,col 5)-(line 1502,col 32)",
            "(line 1503,col 5)-(line 1503,col 55)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase(java.lang.String, boolean)",
        "snippet": "  protected CompilerTestCase(String externs, boolean compareAsTree) {\n    this.externsInputs = ImmutableList.of(\n        SourceFile.fromCode(\"externs\", externs));\n    this.compareAsTree = compareAsTree;\n    this.parseTypeInfo = false;\n  }\n",
        "begin_line": 128,
        "end_line": 133,
        "comment": "\n   * Constructs a test.\n   *\n   * @param externs Externs JS as a string\n   * @param compareAsTree True to compare output & expected as a node tree.\n   *     99% of the time you want to compare as a tree. There are a few\n   *     special cases where you don't, like if you want to test the code\n   *     printing of \"unnatural\" syntax trees. For example,\n   *\n   * <pre>\n   * IF\n   *   IF\n   *     STATEMENT\n   * ELSE\n   *   STATEMENT\n   * </pre>\n   ",
        "child_ranges": [
            "(line 129,col 5)-(line 130,col 49)",
            "(line 131,col 5)-(line 131,col 39)",
            "(line 132,col 5)-(line 132,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase(java.lang.String)",
        "snippet": "  protected CompilerTestCase(String externs) {\n    this(externs, true);\n  }\n",
        "begin_line": 139,
        "end_line": 141,
        "comment": "\n   * Constructs a test. Uses AST comparison.\n   * @param externs Externs JS as a string\n   ",
        "child_ranges": [
            "(line 140,col 5)-(line 140,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase()",
        "snippet": "  protected CompilerTestCase() {\n    this(\"\", true);\n  }\n",
        "begin_line": 146,
        "end_line": 148,
        "comment": "\n   * Constructs a test. Uses AST comparison and no externs.\n   ",
        "child_ranges": [
            "(line 147,col 5)-(line 147,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.tearDown()",
        "snippet": "  @Override protected void tearDown() throws Exception {\n    super.tearDown();\n    expectParseWarningsThisTest = false;\n  }\n",
        "begin_line": 150,
        "end_line": 153,
        "comment": "",
        "child_ranges": [
            "(line 151,col 5)-(line 151,col 21)",
            "(line 152,col 5)-(line 152,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getProcessor(com.google.javascript.jscomp.Compiler)",
        "snippet": "  protected abstract CompilerPass getProcessor(Compiler compiler);\n",
        "begin_line": 161,
        "end_line": 161,
        "comment": "\n   * Gets the compiler pass instance to use for a test.\n   *\n   * @param compiler The compiler\n   * @return The pass to test\n   ",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getOptions()",
        "snippet": "  protected CompilerOptions getOptions() {\n    return getOptions(new CompilerOptions());\n  }\n",
        "begin_line": 168,
        "end_line": 170,
        "comment": "\n   * Gets the compiler options to use for this test. Use getProcessor to\n   * determine what passes should be run.\n   ",
        "child_ranges": [
            "(line 169,col 5)-(line 169,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getOptions(com.google.javascript.jscomp.CompilerOptions)",
        "snippet": "  protected CompilerOptions getOptions(CompilerOptions options) {\n    if (this.acceptES5) {\n      options.setLanguageIn(LanguageMode.ECMASCRIPT5);\n    }\n\n    // This doesn't affect whether checkSymbols is run--it just affects\n    // whether variable warnings are filtered.\n    options.checkSymbols = true;\n\n    options.setWarningLevel(\n        DiagnosticGroups.MISSING_PROPERTIES, CheckLevel.WARNING);\n    options.setWarningLevel(\n        DiagnosticGroups.INVALID_CASTS, CheckLevel.WARNING);\n    options.setCodingConvention(getCodingConvention());\n    return options;\n  }\n",
        "begin_line": 176,
        "end_line": 191,
        "comment": "\n   * Gets the compiler options to use for this test. Use getProcessor to\n   * determine what passes should be run.\n   ",
        "child_ranges": [
            "(line 177,col 5)-(line 179,col 5)",
            "(line 183,col 5)-(line 183,col 32)",
            "(line 185,col 5)-(line 186,col 65)",
            "(line 187,col 5)-(line 188,col 60)",
            "(line 189,col 5)-(line 189,col 55)",
            "(line 190,col 5)-(line 190,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getCodingConvention()",
        "snippet": "  protected CodingConvention getCodingConvention() {\n    return new GoogleCodingConvention();\n  }\n",
        "begin_line": 193,
        "end_line": 195,
        "comment": "",
        "child_ranges": [
            "(line 194,col 5)-(line 194,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.setFilename(java.lang.String)",
        "snippet": "  public void setFilename(String filename) {\n    this.filename = filename;\n  }\n",
        "begin_line": 197,
        "end_line": 199,
        "comment": "",
        "child_ranges": [
            "(line 198,col 5)-(line 198,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getNumRepetitions()",
        "snippet": "  protected int getNumRepetitions() {\n    // Since most compiler passes should be idempotent, we run each pass twice\n    // by default.\n    return 2;\n  }\n",
        "begin_line": 205,
        "end_line": 209,
        "comment": "\n   * Returns the number of times the pass should be run before results are\n   * verified.\n   ",
        "child_ranges": [
            "(line 208,col 5)-(line 208,col 13)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.allowSourcelessWarnings()",
        "snippet": "  void allowSourcelessWarnings() {\n    allowSourcelessWarnings = true;\n  }\n",
        "begin_line": 212,
        "end_line": 214,
        "comment": " Expect warnings without source information. ",
        "child_ranges": [
            "(line 213,col 5)-(line 213,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getLastCompiler()",
        "snippet": "  Compiler getLastCompiler() {\n    return lastCompiler;\n  }\n",
        "begin_line": 217,
        "end_line": 219,
        "comment": " The most recently used JSComp instance. ",
        "child_ranges": [
            "(line 218,col 5)-(line 218,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableEcmaScript5(boolean)",
        "snippet": "  protected void enableEcmaScript5(boolean acceptES5) {\n    this.acceptES5 = acceptES5;\n  }\n",
        "begin_line": 224,
        "end_line": 226,
        "comment": "\n   * Whether to allow ECMASCRIPT5 source parsing.\n   ",
        "child_ranges": [
            "(line 225,col 5)-(line 225,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.allowExternsChanges(boolean)",
        "snippet": "  protected void allowExternsChanges(boolean allowExternsChanges) {\n    this.allowExternsChanges = allowExternsChanges;\n  }\n",
        "begin_line": 231,
        "end_line": 233,
        "comment": "\n   * Whether to allow externs changes.\n   ",
        "child_ranges": [
            "(line 232,col 5)-(line 232,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableTypeCheck(com.google.javascript.jscomp.CheckLevel)",
        "snippet": "  public void enableTypeCheck(CheckLevel level) {\n    typeCheckEnabled  = true;\n    typeCheckLevel = level;\n  }\n",
        "begin_line": 243,
        "end_line": 246,
        "comment": "\n   * Perform type checking before running the test pass. This will check\n   * for type errors and annotate nodes with type information.\n   *\n   * @param level the level of severity to report for type errors\n   *\n   * @see TypeCheck\n   ",
        "child_ranges": [
            "(line 244,col 5)-(line 244,col 29)",
            "(line 245,col 5)-(line 245,col 27)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableLineNumberCheck(boolean)",
        "snippet": "  public void enableLineNumberCheck(boolean newVal) {\n    checkLineNumbers = newVal;\n  }\n",
        "begin_line": 251,
        "end_line": 253,
        "comment": "\n   * Check to make sure that line numbers were preserved.\n   ",
        "child_ranges": [
            "(line 252,col 5)-(line 252,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.disableTypeCheck()",
        "snippet": "  void disableTypeCheck() {\n    typeCheckEnabled  = false;\n  }\n",
        "begin_line": 260,
        "end_line": 262,
        "comment": "\n   * Do not run type checking before running the test pass.\n   *\n   * @see TypeCheck\n   ",
        "child_ranges": [
            "(line 261,col 5)-(line 261,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableClosurePass()",
        "snippet": "  void enableClosurePass() {\n    closurePassEnabled = true;\n  }\n",
        "begin_line": 268,
        "end_line": 270,
        "comment": " TODO(nicksantos): Fix other passes to use this when appropriate.",
        "child_ranges": [
            "(line 269,col 5)-(line 269,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableNormalize()",
        "snippet": "  protected void enableNormalize() {\n    enableNormalize(true);\n  }\n",
        "begin_line": 278,
        "end_line": 280,
        "comment": "\n   * Perform AST normalization before running the test pass, and anti-normalize\n   * after running it.\n   *\n   * @see Normalize\n   ",
        "child_ranges": [
            "(line 279,col 5)-(line 279,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableNormalize(boolean)",
        "snippet": "  protected void enableNormalize(boolean normalizeExpected) {\n    normalizeEnabled = true;\n    this.normalizeExpected = normalizeExpected;\n  }\n",
        "begin_line": 290,
        "end_line": 293,
        "comment": "\n   * Perform AST normalization before running the test pass, and anti-normalize\n   * after running it.\n   *\n   * @param normalizeExpected Whether to perform normalization on the\n   * expected JS result.\n   * @see Normalize\n   ",
        "child_ranges": [
            "(line 291,col 5)-(line 291,col 28)",
            "(line 292,col 5)-(line 292,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.disableNormalize()",
        "snippet": "  protected void disableNormalize() {\n    normalizeEnabled = false;\n  }\n",
        "begin_line": 299,
        "end_line": 301,
        "comment": "\n   * Don't perform AST normalization before running the test pass.\n   * @see Normalize\n   ",
        "child_ranges": [
            "(line 300,col 5)-(line 300,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableMarkNoSideEffects()",
        "snippet": "  void enableMarkNoSideEffects() {\n    markNoSideEffects  = true;\n  }\n",
        "begin_line": 308,
        "end_line": 310,
        "comment": "\n   * Run the MarkSideEffectCalls pass before running the test pass.\n   *\n   * @see MarkNoSideEffectCalls\n   ",
        "child_ranges": [
            "(line 309,col 5)-(line 309,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableAstValidation(boolean)",
        "snippet": "  protected void enableAstValidation(boolean validate) {\n    astValidationEnabled = validate;\n  }\n",
        "begin_line": 315,
        "end_line": 317,
        "comment": "\n   * Whether to allow Validate the AST after each run of the pass.\n   ",
        "child_ranges": [
            "(line 316,col 5)-(line 316,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.setExpectParseWarningsThisTest()",
        "snippet": "  protected void setExpectParseWarningsThisTest() {\n    expectParseWarningsThisTest = true;\n  }\n",
        "begin_line": 320,
        "end_line": 322,
        "comment": " Whether we should ignore parse warnings for the current test method. ",
        "child_ranges": [
            "(line 321,col 5)-(line 321,col 39)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createTypeCheck(com.google.javascript.jscomp.Compiler, com.google.javascript.jscomp.CheckLevel)",
        "snippet": "  private static TypeCheck createTypeCheck(Compiler compiler,\n      CheckLevel level) {\n    ReverseAbstractInterpreter rai =\n        new SemanticReverseAbstractInterpreter(compiler.getCodingConvention(),\n            compiler.getTypeRegistry());\n\n    return new TypeCheck(compiler, rai, compiler.getTypeRegistry(),\n        level, CheckLevel.OFF);\n  }\n",
        "begin_line": 325,
        "end_line": 333,
        "comment": " Returns a newly created TypeCheck. ",
        "child_ranges": [
            "(line 327,col 5)-(line 329,col 40)",
            "(line 331,col 5)-(line 332,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String)",
        "snippet": "  public void test(String js, String expected) {\n    test(js, expected, (DiagnosticType) null);\n  }\n",
        "begin_line": 341,
        "end_line": 343,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param js Input\n   * @param expected Expected JS output\n   ",
        "child_ranges": [
            "(line 342,col 5)-(line 342,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String js, String expected, DiagnosticType error) {\n    test(js, expected, error, null);\n  }\n",
        "begin_line": 353,
        "end_line": 355,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 354,col 5)-(line 354,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String js, String expected, DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    test(externsInputs, js, expected, error, warning, description);\n  }\n",
        "begin_line": 368,
        "end_line": 371,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The content of the error expected\n   ",
        "child_ranges": [
            "(line 370,col 5)-(line 370,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String js, String expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    test(externsInputs, js, expected, error, warning, null);\n  }\n",
        "begin_line": 383,
        "end_line": 386,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 385,col 5)-(line 385,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String externs, String js, String expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    test(externs, js, expected, error, warning, null);\n  }\n",
        "begin_line": 399,
        "end_line": 402,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs input\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 401,col 5)-(line 401,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String externs, String js, String expected,\n                   DiagnosticType error, DiagnosticType warning,\n                   String description) {\n    List<SourceFile> externsInputs = ImmutableList.of(\n        SourceFile.fromCode(\"externs\", externs));\n    test(externsInputs, js, expected, error, warning, description);\n  }\n",
        "begin_line": 418,
        "end_line": 424,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs input\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 421,col 5)-(line 422,col 49)",
            "(line 423,col 5)-(line 423,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.util.List<com.google.javascript.jscomp.SourceFile>, java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(List<SourceFile> externs, String js, String expected,\n                   DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    CompilerOptions options = getOptions();\n\n    if (this.acceptES5) {\n      options.setLanguageIn(LanguageMode.ECMASCRIPT5);\n    }\n    // Note that in this context, turning on the checkTypes option won't\n    // actually cause the type check to run.\n    options.checkTypes = parseTypeInfo;\n    compiler.init(externs, ImmutableList.of(\n        SourceFile.fromCode(filename, js)), options);\n\n    BaseJSTypeTestCase.addNativeProperties(compiler.getTypeRegistry());\n\n    test(compiler, maybeCreateArray(expected), error, warning, description);\n  }\n",
        "begin_line": 440,
        "end_line": 460,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs inputs\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 443,col 5)-(line 443,col 41)",
            "(line 444,col 5)-(line 444,col 28)",
            "(line 446,col 5)-(line 446,col 43)",
            "(line 448,col 5)-(line 450,col 5)",
            "(line 453,col 5)-(line 453,col 39)",
            "(line 454,col 5)-(line 455,col 53)",
            "(line 457,col 5)-(line 457,col 71)",
            "(line 459,col 5)-(line 459,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.maybeCreateArray(java.lang.String)",
        "snippet": "  private String[] maybeCreateArray(String expected) {\n    if (expected != null) {\n      return new String[] { expected };\n    }\n    return null;\n  }\n",
        "begin_line": 462,
        "end_line": 467,
        "comment": "",
        "child_ranges": [
            "(line 463,col 5)-(line 465,col 5)",
            "(line 466,col 5)-(line 466,col 16)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[])",
        "snippet": "  public void test(String[] js, String[] expected) {\n    test(js, expected, null);\n  }\n",
        "begin_line": 475,
        "end_line": 477,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   ",
        "child_ranges": [
            "(line 476,col 5)-(line 476,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error) {\n    test(js, expected, error, null);\n  }\n",
        "begin_line": 487,
        "end_line": 489,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 488,col 5)-(line 488,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error,\n                   DiagnosticType warning) {\n    test(js, expected, error, warning, null);\n  }\n",
        "begin_line": 501,
        "end_line": 504,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 503,col 5)-(line 503,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    List<SourceFile> inputs = Lists.newArrayList();\n    for (int i = 0; i < js.length; i++) {\n      inputs.add(SourceFile.fromCode(\"input\" + i, js[i]));\n    }\n    compiler.init(externsInputs, inputs, getOptions());\n    test(compiler, expected, error, warning, description);\n  }\n",
        "begin_line": 519,
        "end_line": 530,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 521,col 5)-(line 521,col 41)",
            "(line 522,col 5)-(line 522,col 28)",
            "(line 524,col 5)-(line 524,col 51)",
            "(line 525,col 5)-(line 527,col 5)",
            "(line 528,col 5)-(line 528,col 55)",
            "(line 529,col 5)-(line 529,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[])",
        "snippet": "  public void test(JSModule[] modules, String[] expected) {\n    test(modules, expected, null);\n  }\n",
        "begin_line": 538,
        "end_line": 540,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   ",
        "child_ranges": [
            "(line 539,col 5)-(line 539,col 34)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(JSModule[] modules, String[] expected,\n      DiagnosticType error) {\n    test(modules, expected, error, null);\n  }\n",
        "begin_line": 550,
        "end_line": 553,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 552,col 5)-(line 552,col 41)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(JSModule[] modules, String[] expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    compiler.initModules(\n        externsInputs, Lists.newArrayList(modules), getOptions());\n    test(compiler, expected, error, warning);\n  }\n",
        "begin_line": 565,
        "end_line": 573,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 567,col 5)-(line 567,col 41)",
            "(line 568,col 5)-(line 568,col 28)",
            "(line 570,col 5)-(line 571,col 66)",
            "(line 572,col 5)-(line 572,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String)",
        "snippet": "  public void testSame(String js) {\n    test(js, js);\n  }\n",
        "begin_line": 580,
        "end_line": 582,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input.\n   *\n   * @param js Input and output\n   ",
        "child_ranges": [
            "(line 581,col 5)-(line 581,col 17)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String js, DiagnosticType warning) {\n    test(js, js, null, warning);\n  }\n",
        "begin_line": 591,
        "end_line": 593,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 592,col 5)-(line 592,col 32)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, com.google.javascript.jscomp.DiagnosticType, boolean)",
        "snippet": "  public void testSame(String js, DiagnosticType diag, boolean error) {\n    if (error) {\n      test(js, js, diag);\n    } else {\n      test(js, js, null, diag);\n    }\n  }\n",
        "begin_line": 603,
        "end_line": 609,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param js Input and output\n   * @param diag Expected error or warning, or null if none is expected\n   * @param error true if diag is an error, false if it is a warning\n   ",
        "child_ranges": [
            "(line 604,col 5)-(line 608,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String externs, String js, DiagnosticType warning) {\n    testSame(externs, js, warning, null);\n  }\n",
        "begin_line": 619,
        "end_line": 621,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param externs Externs input\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 620,col 5)-(line 620,col 41)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, boolean)",
        "snippet": "  public void testSame(\n      String externs, String js, DiagnosticType diag, boolean error) {\n    if (error) {\n      test(externs, js, js, diag, null);\n    } else {\n      test(externs, js, js, null, diag);\n    }\n  }\n",
        "begin_line": 632,
        "end_line": 639,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param externs Externs input\n   * @param js Input and output\n   * @param diag Expected error or warning, or null if none is expected\n   * @param error true if diag is an error, false if it is a warning\n   ",
        "child_ranges": [
            "(line 634,col 5)-(line 638,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void testSame(String externs, String js, DiagnosticType warning,\n                       String description) {\n    List<SourceFile> externsInputs = ImmutableList.of(\n        SourceFile.fromCode(\"externs\", externs));\n    test(externsInputs, js, js, null, warning, description);\n  }\n",
        "begin_line": 652,
        "end_line": 657,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning and description is issued.\n   *\n   * @param externs Externs input\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 654,col 5)-(line 655,col 49)",
            "(line 656,col 5)-(line 656,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[])",
        "snippet": "  public void testSame(String[] js) {\n    test(js, js);\n  }\n",
        "begin_line": 664,
        "end_line": 666,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input.\n   *\n   * @param js Inputs and outputs\n   ",
        "child_ranges": [
            "(line 665,col 5)-(line 665,col 17)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String[] js, DiagnosticType error) {\n    test(js, js, error);\n  }\n",
        "begin_line": 675,
        "end_line": 677,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input,\n   * and emits the given error.\n   *\n   * @param js Inputs and outputs\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 676,col 5)-(line 676,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(\n      String[] js, DiagnosticType error, DiagnosticType warning) {\n    test(js, js, error, warning);\n  }\n",
        "begin_line": 687,
        "end_line": 690,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input,\n   * and emits the given error and warning.\n   *\n   * @param js Inputs and outputs\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 689,col 5)-(line 689,col 33)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(com.google.javascript.jscomp.JSModule[])",
        "snippet": "  public void testSame(JSModule[] modules) {\n    testSame(modules, null);\n  }\n",
        "begin_line": 697,
        "end_line": 699,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as the input.\n   *\n   * @param modules Module inputs\n   ",
        "child_ranges": [
            "(line 698,col 5)-(line 698,col 28)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(com.google.javascript.jscomp.JSModule[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(JSModule[] modules, DiagnosticType warning) {\n    try {\n      String[] expected = new String[modules.length];\n      for (int i = 0; i < modules.length; i++) {\n        expected[i] = \"\";\n        for (CompilerInput input : modules[i].getInputs()) {\n          expected[i] += input.getSourceFile().getCode();\n        }\n      }\n      test(modules, expected, null, warning);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n",
        "begin_line": 707,
        "end_line": 720,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as the input.\n   *\n   * @param modules Module inputs\n   * @param warning A warning, or null for no expected warning.\n   ",
        "child_ranges": [
            "(line 708,col 5)-(line 719,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.Compiler, java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  protected void test(Compiler compiler, String[] expected,\n                      DiagnosticType error, DiagnosticType warning) {\n    test(compiler, expected, error, warning, null);\n  }\n",
        "begin_line": 733,
        "end_line": 736,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param compiler A compiler that has been initialized via\n   *     {@link Compiler#init}\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 735,col 5)-(line 735,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.Compiler, java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  private void test(Compiler compiler, String[] expected,\n                    DiagnosticType error, DiagnosticType warning,\n                    String description) {\n    CodeChangeHandler recentChange = new  CodeChangeHandler();\n    compiler.addChangeHandler(recentChange);\n\n    Node root = compiler.parseInputs();\n    assertTrue(\"Unexpected parse error(s): \" +\n        Joiner.on(\"\\n\").join(compiler.getErrors()), root != null);\n    if (!expectParseWarningsThisTest) {\n      assertTrue(\"Unexpected parse warnings(s): \" +\n          Joiner.on(\"\\n\").join(compiler.getWarnings()),\n          compiler.getWarnings().length == 0);\n    }\n\n    if (astValidationEnabled) {\n      (new AstValidator()).validateRoot(root);\n    }\n    Node externsRoot = root.getFirstChild();\n    Node mainRoot = root.getLastChild();\n\n    // Save the tree for later comparison.\n    Node rootClone = root.cloneTree();\n    Node externsRootClone = rootClone.getFirstChild();\n    Node mainRootClone = rootClone.getLastChild();\n\n    int numRepetitions = getNumRepetitions();\n    ErrorManager[] errorManagers = new ErrorManager[numRepetitions];\n    int aggregateWarningCount = 0;\n    List<JSError> aggregateWarnings = Lists.newArrayList();\n    boolean hasCodeChanged = false;\n\n    assertFalse(\"Code should not change before processing\",\n        recentChange.hasCodeChanged());\n\n    for (int i = 0; i < numRepetitions; ++i) {\n      if (compiler.getErrorCount() == 0) {\n        errorManagers[i] = new BlackHoleErrorManager(compiler);\n\n        // Only run process closure primitives once, if asked.\n        if (closurePassEnabled && i == 0) {\n          recentChange.reset();\n          new ProcessClosurePrimitives(compiler, null, CheckLevel.ERROR)\n              .process(null, mainRoot);\n          hasCodeChanged = hasCodeChanged || recentChange.hasCodeChanged();\n        }\n\n        // Only run the type checking pass once, if asked.\n        // Running it twice can cause unpredictable behavior because duplicate\n        // objects for the same type are created, and the type system\n        // uses reference equality to compare many types.\n        if (typeCheckEnabled && i == 0) {\n          TypeCheck check = createTypeCheck(compiler, typeCheckLevel);\n          check.processForTesting(externsRoot, mainRoot);\n        }\n\n        // Only run the normalize pass once, if asked.\n        if (normalizeEnabled && i == 0) {\n          normalizeActualCode(compiler, externsRoot, mainRoot);\n        }\n\n        if (markNoSideEffects && i == 0) {\n          MarkNoSideEffectCalls mark = new MarkNoSideEffectCalls(compiler);\n          mark.process(externsRoot, mainRoot);\n        }\n\n        recentChange.reset();\n\n        getProcessor(compiler).process(externsRoot, mainRoot);\n        if (astValidationEnabled) {\n          (new AstValidator()).validateRoot(root);\n        }\n        if (checkLineNumbers) {\n          (new LineNumberCheck(compiler)).process(externsRoot, mainRoot);\n        }\n\n        hasCodeChanged = hasCodeChanged || recentChange.hasCodeChanged();\n        aggregateWarningCount += errorManagers[i].getWarningCount();\n        aggregateWarnings.addAll(Lists.newArrayList(compiler.getWarnings()));\n\n        if (normalizeEnabled) {\n          boolean verifyDeclaredConstants = true;\n          new Normalize.VerifyConstants(compiler, verifyDeclaredConstants)\n              .process(externsRoot, mainRoot);\n        }\n      }\n    }\n\n    if (error == null) {\n      assertEquals(\n          \"Unexpected error(s): \" + Joiner.on(\"\\n\").join(compiler.getErrors()),\n          0, compiler.getErrorCount());\n\n      // Verify the symbol table.\n      ErrorManager symbolTableErrorManager =\n          new BlackHoleErrorManager(compiler);\n      Node expectedRoot = null;\n      if (expected != null) {\n        expectedRoot = parseExpectedJs(expected);\n        expectedRoot.detachFromParent();\n      }\n\n      JSError[] stErrors = symbolTableErrorManager.getErrors();\n      if (expectedSymbolTableError != null) {\n        assertEquals(\"There should be one error.\", 1, stErrors.length);\n        assertEquals(expectedSymbolTableError, stErrors[0].getType());\n      } else {\n        assertEquals(\"Unexpected symbol table error(s): \" +\n            Joiner.on(\"\\n\").join(stErrors),\n            0, stErrors.length);\n      }\n\n      if (warning == null) {\n        assertEquals(\n            \"Unexpected warning(s): \" + Joiner.on(\"\\n\").join(aggregateWarnings),\n            0, aggregateWarningCount);\n      } else {\n        assertEquals(\"There should be one warning, repeated \" + numRepetitions +\n            \" time(s).\", numRepetitions, aggregateWarningCount);\n        for (int i = 0; i < numRepetitions; ++i) {\n          JSError[] warnings = errorManagers[i].getWarnings();\n          JSError actual = warnings[0];\n          assertEquals(warning, actual.getType());\n\n          // Make sure that source information is always provided.\n          if (!allowSourcelessWarnings) {\n            assertTrue(\"Missing source file name in warning\",\n                actual.sourceName != null && !actual.sourceName.isEmpty());\n            assertTrue(\"Missing line number in warning\",\n                -1 != actual.lineNumber);\n            assertTrue(\"Missing char number in warning\",\n                -1 != actual.getCharno());\n          }\n\n          if (description != null) {\n            assertEquals(description, actual.description);\n          }\n        }\n      }\n\n      // If we ran normalize on the AST, we must also run normalize on the\n      // clone before checking for changes.\n      if (normalizeEnabled) {\n        normalizeActualCode(compiler, externsRootClone, mainRootClone);\n      }\n\n      boolean codeChange = !mainRootClone.isEquivalentTo(mainRoot);\n      boolean externsChange = !externsRootClone.isEquivalentTo(externsRoot);\n\n      // Generally, externs should not be change by the compiler passes.\n      if (externsChange && !allowExternsChanges) {\n        String explanation = externsRootClone.checkTreeEquals(externsRoot);\n        fail(\"Unexpected changes to externs\" +\n            \"\\nExpected: \" + compiler.toSource(externsRootClone) +\n            \"\\nResult: \" + compiler.toSource(externsRoot) +\n            \"\\n\" + explanation);\n      }\n\n      if (!codeChange && !externsChange) {\n        assertFalse(\n            \"compiler.reportCodeChange() was called \" +\n            \"even though nothing changed\",\n            hasCodeChanged);\n      } else {\n        assertTrue(\"compiler.reportCodeChange() should have been called\",\n            hasCodeChanged);\n      }\n\n      if (expected != null) {\n        if (compareAsTree) {\n          String explanation = expectedRoot.checkTreeEquals(mainRoot);\n          assertNull(\"\\nExpected: \" + compiler.toSource(expectedRoot) +\n              \"\\nResult: \" + compiler.toSource(mainRoot) +\n              \"\\n\" + explanation, explanation);\n        } else if (expected != null) {\n          assertEquals(\n              Joiner.on(\"\").join(expected), compiler.toSource(mainRoot));\n        }\n      }\n\n      // Verify normalization is not invalidated.\n      Node normalizeCheckRootClone = root.cloneTree();\n      Node normalizeCheckExternsRootClone = normalizeCheckRootClone.getFirstChild();\n      Node normalizeCheckMainRootClone = normalizeCheckRootClone.getLastChild();\n      new PrepareAst(compiler).process(\n          normalizeCheckExternsRootClone, normalizeCheckMainRootClone);\n      String explanation =\n          normalizeCheckMainRootClone.checkTreeEquals(mainRoot);\n      assertNull(\"Node structure normalization invalidated.\\nExpected: \" +\n          compiler.toSource(normalizeCheckMainRootClone) +\n          \"\\nResult: \" + compiler.toSource(mainRoot) +\n          \"\\n\" + explanation, explanation);\n\n      // TODO(johnlenz): enable this for most test cases.\n      // Currently, this invalidates test for while-loops, for-loop\n      // initializers, and other naming.  However, a set of code\n      // (Closure primitive rewrites, etc) runs before the Normalize pass,\n      // so this can't be force on everywhere.\n      if (normalizeEnabled) {\n        new Normalize(compiler, true).process(\n            normalizeCheckExternsRootClone, normalizeCheckMainRootClone);\n        explanation =  normalizeCheckMainRootClone.checkTreeEquals(mainRoot);\n        assertNull(\"Normalization invalidated.\\nExpected: \" +\n            compiler.toSource(normalizeCheckMainRootClone) +\n            \"\\nResult: \" + compiler.toSource(mainRoot) +\n            \"\\n\" + explanation, explanation);\n      }\n    } else {\n      String errors = \"\";\n      for (JSError actualError : compiler.getErrors()) {\n        errors += actualError.description + \"\\n\";\n      }\n      assertEquals(\"There should be one error. \" + errors,\n          1, compiler.getErrorCount());\n      assertEquals(errors, error, compiler.getErrors()[0].getType());\n\n      if (warning != null) {\n        String warnings = \"\";\n        for (JSError actualError : compiler.getWarnings()) {\n          warnings += actualError.description + \"\\n\";\n        }\n        assertEquals(\"There should be one warning. \" + warnings,\n            1, compiler.getWarningCount());\n        assertEquals(warnings, warning, compiler.getWarnings()[0].getType());\n      }\n    }\n  }\n",
        "begin_line": 753,
        "end_line": 979,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param compiler A compiler that has been initialized via\n   *     {@link Compiler#init}\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 756,col 5)-(line 756,col 62)",
            "(line 757,col 5)-(line 757,col 44)",
            "(line 759,col 5)-(line 759,col 39)",
            "(line 760,col 5)-(line 761,col 66)",
            "(line 762,col 5)-(line 766,col 5)",
            "(line 768,col 5)-(line 770,col 5)",
            "(line 771,col 5)-(line 771,col 44)",
            "(line 772,col 5)-(line 772,col 40)",
            "(line 775,col 5)-(line 775,col 38)",
            "(line 776,col 5)-(line 776,col 54)",
            "(line 777,col 5)-(line 777,col 50)",
            "(line 779,col 5)-(line 779,col 45)",
            "(line 780,col 5)-(line 780,col 68)",
            "(line 781,col 5)-(line 781,col 34)",
            "(line 782,col 5)-(line 782,col 59)",
            "(line 783,col 5)-(line 783,col 35)",
            "(line 785,col 5)-(line 786,col 39)",
            "(line 788,col 5)-(line 839,col 5)",
            "(line 841,col 5)-(line 978,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.normalizeActualCode(com.google.javascript.jscomp.Compiler, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)",
        "snippet": "  private void normalizeActualCode(\n      Compiler compiler, Node externsRoot, Node mainRoot) {\n    Normalize normalize = new Normalize(compiler, false);\n    normalize.process(externsRoot, mainRoot);\n  }\n",
        "begin_line": 981,
        "end_line": 985,
        "comment": "",
        "child_ranges": [
            "(line 983,col 5)-(line 983,col 57)",
            "(line 984,col 5)-(line 984,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.parseExpectedJs(java.lang.String[])",
        "snippet": "  protected Node parseExpectedJs(String[] expected) {\n    Compiler compiler = createCompiler();\n    List<SourceFile> inputs = Lists.newArrayList();\n    for (int i = 0; i < expected.length; i++) {\n      inputs.add(SourceFile.fromCode(\"expected\" + i, expected[i]));\n    }\n    compiler.init(externsInputs, inputs, getOptions());\n    Node root = compiler.parseInputs();\n    assertTrue(\"Unexpected parse error(s): \" +\n        Joiner.on(\"\\n\").join(compiler.getErrors()), root != null);\n    Node externsRoot = root.getFirstChild();\n    Node mainRoot = externsRoot.getNext();\n    // Only run the normalize pass, if asked.\n    if (normalizeEnabled && normalizeExpected && !compiler.hasErrors()) {\n      Normalize normalize = new Normalize(compiler, false);\n      normalize.process(externsRoot, mainRoot);\n    }\n    return mainRoot;\n  }\n",
        "begin_line": 990,
        "end_line": 1008,
        "comment": "\n   * Parses expected JS inputs and returns the root of the parse tree.\n   ",
        "child_ranges": [
            "(line 991,col 5)-(line 991,col 41)",
            "(line 992,col 5)-(line 992,col 51)",
            "(line 993,col 5)-(line 995,col 5)",
            "(line 996,col 5)-(line 996,col 55)",
            "(line 997,col 5)-(line 997,col 39)",
            "(line 998,col 5)-(line 999,col 66)",
            "(line 1000,col 5)-(line 1000,col 44)",
            "(line 1001,col 5)-(line 1001,col 42)",
            "(line 1003,col 5)-(line 1006,col 5)",
            "(line 1007,col 5)-(line 1007,col 20)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.parseExpectedJs(java.lang.String)",
        "snippet": "  protected Node parseExpectedJs(String expected) {\n    return parseExpectedJs(new String[] {expected});\n  }\n",
        "begin_line": 1010,
        "end_line": 1012,
        "comment": "",
        "child_ranges": [
            "(line 1011,col 5)-(line 1011,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleChain(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleChain(String... inputs) {\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[i - 1]);\n    }\n    return modules;\n  }\n",
        "begin_line": 1018,
        "end_line": 1024,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that each module\n   * depends on the module before it.\n   ",
        "child_ranges": [
            "(line 1019,col 5)-(line 1019,col 47)",
            "(line 1020,col 5)-(line 1022,col 5)",
            "(line 1023,col 5)-(line 1023,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleStar(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleStar(String... inputs) {\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[0]);\n    }\n    return modules;\n  }\n",
        "begin_line": 1030,
        "end_line": 1036,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that each module\n   * depends on the first module.\n   ",
        "child_ranges": [
            "(line 1031,col 5)-(line 1031,col 47)",
            "(line 1032,col 5)-(line 1034,col 5)",
            "(line 1035,col 5)-(line 1035,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleBush(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleBush(String ... inputs) {\n    Preconditions.checkState(inputs.length > 2);\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[i == 1 ? 0 : 1]);\n    }\n    return modules;\n  }\n",
        "begin_line": 1043,
        "end_line": 1050,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that modules\n   * form a bush formation. In a bush formation, module 2 depends\n   * on module 1, and all other modules depend on module 2.\n   ",
        "child_ranges": [
            "(line 1044,col 5)-(line 1044,col 48)",
            "(line 1045,col 5)-(line 1045,col 47)",
            "(line 1046,col 5)-(line 1048,col 5)",
            "(line 1049,col 5)-(line 1049,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleTree(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleTree(String ... inputs) {\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[(i - 1) / 2]);\n    }\n    return modules;\n  }\n",
        "begin_line": 1057,
        "end_line": 1063,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that modules\n   * form a tree formation. In a tree formation, module N depends on\n   * module `floor(N/2)`, So the modules form a balanced binary tree.\n   ",
        "child_ranges": [
            "(line 1058,col 5)-(line 1058,col 47)",
            "(line 1059,col 5)-(line 1061,col 5)",
            "(line 1062,col 5)-(line 1062,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModules(java.lang.String...)",
        "snippet": "  static JSModule[] createModules(String... inputs) {\n    JSModule[] modules = new JSModule[inputs.length];\n    for (int i = 0; i < inputs.length; i++) {\n      JSModule module = modules[i] = new JSModule(\"m\" + i);\n      module.add(SourceFile.fromCode(\"i\" + i, inputs[i]));\n    }\n    return modules;\n  }\n",
        "begin_line": 1069,
        "end_line": 1076,
        "comment": "\n   * Generates a list of modules from a list of inputs. Does not generate any\n   * dependencies between the modules.\n   ",
        "child_ranges": [
            "(line 1070,col 5)-(line 1070,col 53)",
            "(line 1071,col 5)-(line 1074,col 5)",
            "(line 1075,col 5)-(line 1075,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.BlackHoleErrorManager(com.google.javascript.jscomp.Compiler)",
        "snippet": "    private BlackHoleErrorManager(Compiler compiler) {\n      compiler.setErrorManager(this);\n    }\n",
        "begin_line": 1079,
        "end_line": 1081,
        "comment": "",
        "child_ranges": [
            "(line 1080,col 7)-(line 1080,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.println(com.google.javascript.jscomp.CheckLevel, com.google.javascript.jscomp.JSError)",
        "snippet": "    @Override\n    public void println(CheckLevel level, JSError error) {}\n",
        "begin_line": 1083,
        "end_line": 1084,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.printSummary()",
        "snippet": "    @Override\n    public void printSummary() {}\n",
        "begin_line": 1086,
        "end_line": 1087,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createCompiler()",
        "snippet": "  Compiler createCompiler() {\n    Compiler compiler = new Compiler();\n    return compiler;\n  }\n",
        "begin_line": 1090,
        "end_line": 1093,
        "comment": "",
        "child_ranges": [
            "(line 1091,col 5)-(line 1091,col 39)",
            "(line 1092,col 5)-(line 1092,col 20)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.setExpectedSymbolTableError(com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  protected void setExpectedSymbolTableError(DiagnosticType type) {\n    this.expectedSymbolTableError = type;\n  }\n",
        "begin_line": 1095,
        "end_line": 1097,
        "comment": "",
        "child_ranges": [
            "(line 1096,col 5)-(line 1096,col 41)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.findQualifiedNameNode(java.lang.String, com.google.javascript.rhino.Node)",
        "snippet": "  protected final Node findQualifiedNameNode(final String name, Node root) {\n    final List<Node> matches = Lists.newArrayList();\n    NodeUtil.visitPostOrder(root,\n        new NodeUtil.Visitor() {\n          @Override public void visit(Node n) {\n            if (name.equals(n.getQualifiedName())) {\n              matches.add(n);\n            }\n          }\n        },\n        Predicates.<Node>alwaysTrue());\n    return matches.get(0);\n  }\n",
        "begin_line": 1100,
        "end_line": 1112,
        "comment": " Finds the first matching qualified name node in post-traversal order. ",
        "child_ranges": [
            "(line 1101,col 5)-(line 1101,col 52)",
            "(line 1102,col 5)-(line 1110,col 39)",
            "(line 1111,col 5)-(line 1111,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.Anonymous-5366b67c-196a-44d5-a437-9b04ecdca90f.visit(com.google.javascript.rhino.Node)",
        "snippet": "          @Override public void visit(Node n) {\n            if (name.equals(n.getQualifiedName())) {\n              matches.add(n);\n            }\n          }\n",
        "begin_line": 1104,
        "end_line": 1108,
        "comment": "",
        "child_ranges": [
            "(line 1105,col 13)-(line 1107,col 13)"
        ]
    }
]