[
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.handler",
        "snippet": "    private final EventHandler handler;",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Event handler. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.maxCheckInterval",
        "snippet": "    private final double maxCheckInterval;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " Maximal time interval between events handler checks. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.convergence",
        "snippet": "    private final double convergence;",
        "begin_line": 51,
        "end_line": 51,
        "comment": " Convergence threshold for event localization. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.maxIterationCount",
        "snippet": "    private final int maxIterationCount;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " Upper limit in the iteration count for event localization. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.t0",
        "snippet": "    private double t0;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " Time at the beginning of the step. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.g0",
        "snippet": "    private double g0;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " Value of the events handler at the beginning of the step. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.g0Positive",
        "snippet": "    private boolean g0Positive;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Simulated sign of g0 (we cheat when crossing events). "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.pendingEvent",
        "snippet": "    private boolean pendingEvent;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " Indicator of event expected during the step. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.pendingEventTime",
        "snippet": "    private double pendingEventTime;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Occurrence time of the pending event. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.previousEventTime",
        "snippet": "    private double previousEventTime;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " Occurrence time of the previous event. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.forward",
        "snippet": "    private boolean forward;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " Integration direction. "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.increasing",
        "snippet": "    private boolean increasing;",
        "begin_line": 80,
        "end_line": 80,
        "comment": " Variation direction around pending event.\n     *  (this is considered with respect to the integration direction)\n     "
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventState",
        "src_path": "src/main/java/org/apache/commons/math/ode/events/EventState.java",
        "signature": "org.apache.commons.math.ode.events.EventState.nextAction",
        "snippet": "    private int nextAction;",
        "begin_line": 83,
        "end_line": 83,
        "comment": " Next action indicator. "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.DummyStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/DummyStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.DummyStepInterpolator.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1708010296707839488L;",
        "begin_line": 44,
        "end_line": 44,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.functionValueAccuracy",
        "snippet": "    protected double functionValueAccuracy;",
        "begin_line": 35,
        "end_line": 35,
        "comment": " Maximum error of function. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.defaultFunctionValueAccuracy",
        "snippet": "    protected double defaultFunctionValueAccuracy;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Default maximum error of function. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.resultComputed",
        "snippet": "    protected boolean resultComputed = false;",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Indicates where a root has been computed. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.result",
        "snippet": "    protected double result;",
        "begin_line": 44,
        "end_line": 44,
        "comment": " The last computed root. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.functionValue",
        "snippet": "    protected double functionValue;",
        "begin_line": 47,
        "end_line": 47,
        "comment": " Value of the function at the last computed result. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.f",
        "snippet": "    @Deprecated\n    protected UnivariateRealFunction f;",
        "begin_line": 54,
        "end_line": 55,
        "comment": " The function to solve.\n     * @deprecated as of 2.0 the function to solve is passed as an argument\n     * to the {@link #solve(UnivariateRealFunction, double, double)} or\n     * {@link UnivariateRealSolverImpl#solve(UnivariateRealFunction, double, double, double)}\n     * method. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.absoluteAccuracy",
        "snippet": "    protected double absoluteAccuracy;",
        "begin_line": 31,
        "end_line": 31,
        "comment": " Maximum absolute error. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.relativeAccuracy",
        "snippet": "    protected double relativeAccuracy;",
        "begin_line": 34,
        "end_line": 34,
        "comment": " Maximum relative error. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.maximalIterationCount",
        "snippet": "    protected int maximalIterationCount;",
        "begin_line": 37,
        "end_line": 37,
        "comment": " Maximum number of iterations. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.defaultAbsoluteAccuracy",
        "snippet": "    protected double defaultAbsoluteAccuracy;",
        "begin_line": 40,
        "end_line": 40,
        "comment": " Default maximum absolute error. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.defaultRelativeAccuracy",
        "snippet": "    protected double defaultRelativeAccuracy;",
        "begin_line": 43,
        "end_line": 43,
        "comment": " Default maximum relative error. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.defaultMaximalIterationCount",
        "snippet": "    protected int defaultMaximalIterationCount;",
        "begin_line": 46,
        "end_line": 46,
        "comment": " Default maximum number of iterations. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.iterationCount",
        "snippet": "    protected int iterationCount;",
        "begin_line": 50,
        "end_line": 50,
        "comment": " The last iteration count. "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime",
        "snippet": "  protected double previousTime;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " previous time "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime",
        "snippet": "  protected double currentTime;",
        "begin_line": 51,
        "end_line": 51,
        "comment": " current time "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h",
        "snippet": "  protected double h;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " current time step "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState",
        "snippet": "  protected double[] currentState;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " current state "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime",
        "snippet": "  protected double interpolatedTime;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " interpolated time "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState",
        "snippet": "  protected double[] interpolatedState;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " interpolated state "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives",
        "snippet": "  protected double[] interpolatedDerivatives;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " interpolated derivatives "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized",
        "snippet": "  private boolean finalized;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " indicate if the step has been finalized or not. "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward",
        "snippet": "  private boolean forward;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " integration direction. "
    },
    {
        "class_name": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator",
        "src_path": "src/main/java/org/apache/commons/math/ode/sampling/AbstractStepInterpolator.java",
        "signature": "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.dirtyState",
        "snippet": "  private boolean dirtyState;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " indicator for dirty state. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BrentSolver",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "signature": "org.apache.commons.math.analysis.solvers.BrentSolver.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7694577816772532779L;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " Serializable version identifier "
    }
]