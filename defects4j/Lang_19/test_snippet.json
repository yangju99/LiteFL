[
    {
        "class_name": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "signature": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping()",
        "snippet": "    public void testSupplementaryUnescaping() {\n        NumericEntityUnescaper neu = new NumericEntityUnescaper();\n        String input = \"&#68642;\";\n        String expected = \"\\uD803\\uDC22\";\n\n        String result = neu.translate(input);\n        assertEquals(\"Failed to unescape numeric entities supplementary characters\", expected, result);\n    }\n",
        "begin_line": 28,
        "end_line": 35,
        "comment": "",
        "child_ranges": [
            "(line 29,col 9)-(line 29,col 66)",
            "(line 30,col 9)-(line 30,col 34)",
            "(line 31,col 9)-(line 31,col 41)",
            "(line 33,col 9)-(line 33,col 45)",
            "(line 34,col 9)-(line 34,col 103)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "signature": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds()",
        "snippet": "    public void testOutOfBounds() {\n        NumericEntityUnescaper neu = new NumericEntityUnescaper();\n\n        assertEquals(\"Failed to ignore when last character is &\", \"Test &\", neu.translate(\"Test &\"));\n        assertEquals(\"Failed to ignore when last character is &\", \"Test &#\", neu.translate(\"Test &#\"));\n        assertEquals(\"Failed to ignore when last character is &\", \"Test &#x\", neu.translate(\"Test &#x\"));\n        assertEquals(\"Failed to ignore when last character is &\", \"Test &#X\", neu.translate(\"Test &#X\"));\n    }\n",
        "begin_line": 37,
        "end_line": 44,
        "comment": "",
        "child_ranges": [
            "(line 38,col 9)-(line 38,col 66)",
            "(line 40,col 9)-(line 40,col 101)",
            "(line 41,col 9)-(line 41,col 103)",
            "(line 42,col 9)-(line 42,col 105)",
            "(line 43,col 9)-(line 43,col 105)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaperTest.java",
        "signature": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testUnfinishedEntity()",
        "snippet": "    public void testUnfinishedEntity() {\n        NumericEntityUnescaper neu = new NumericEntityUnescaper();\n        String input = \"Test &#x30 not test\";\n        String expected = \"Test \\u0030 not test\";\n\n        String result = neu.translate(input);\n        assertEquals(\"Failed to support unfinished entities (i.e. missing semi-colon\", expected, result);\n    }\n",
        "begin_line": 46,
        "end_line": 53,
        "comment": "",
        "child_ranges": [
            "(line 47,col 9)-(line 47,col 66)",
            "(line 48,col 9)-(line 48,col 45)",
            "(line 49,col 9)-(line 49,col 49)",
            "(line 51,col 9)-(line 51,col 45)",
            "(line 52,col 9)-(line 52,col 105)"
        ]
    }
]