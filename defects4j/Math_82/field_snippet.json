[
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1097961340710804027L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.DEFAULT_FORMAT",
        "snippet": "    private static final RealVectorFormat DEFAULT_FORMAT =\n        RealVectorFormat.getInstance();",
        "begin_line": 36,
        "end_line": 37,
        "comment": " Default format. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.data",
        "snippet": "    protected double data[];",
        "begin_line": 40,
        "end_line": 40,
        "comment": " Entries of the vector. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.EPSILON",
        "snippet": "    public static final double EPSILON = 0x1.0p-53;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Smallest positive number such that 1 - EPSILON is not numerically equal to 1. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.SAFE_MIN",
        "snippet": "    public static final double SAFE_MIN = 0x1.0p-1022;",
        "begin_line": 39,
        "end_line": 39,
        "comment": " Safe minimum, such that 1 / SAFE_MIN does not overflow.\n     * <p>In IEEE 754 arithmetic, this is also the smallest normalized\n     * number 2<sup>-1022</sup>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.NB",
        "snippet": "    private static final byte  NB = (byte)-1;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " -1.0 cast as a byte. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.NS",
        "snippet": "    private static final short NS = (short)-1;",
        "begin_line": 45,
        "end_line": 45,
        "comment": " -1.0 cast as a short. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.PB",
        "snippet": "    private static final byte  PB = (byte)1;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " 1.0 cast as a byte. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.PS",
        "snippet": "    private static final short PS = (short)1;",
        "begin_line": 51,
        "end_line": 51,
        "comment": " 1.0 cast as a short. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.ZB",
        "snippet": "    private static final byte  ZB = (byte)0;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " 0.0 cast as a byte. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.ZS",
        "snippet": "    private static final short ZS = (short)0;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " 0.0 cast as a short. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.TWO_PI",
        "snippet": "    private static final double TWO_PI = 2 * Math.PI;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " 2 &pi;. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.NAN_GAP",
        "snippet": "    private static final int NAN_GAP = 4 * 1024 * 1024;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Gap between NaN and regular numbers. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.SGN_MASK",
        "snippet": "    private static final long SGN_MASK = 0x8000000000000000L;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " Offset to order signed double numbers lexicographically. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/main/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.factorials",
        "snippet": "    private static final long[] factorials = new long[] \n       {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800,\n        479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l,\n        355687428096000l, 6402373705728000l, 121645100408832000l,\n        2432902008176640000l};",
        "begin_line": 473,
        "end_line": 477,
        "comment": " All long-representable factorials "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1369660067587938365L;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.f",
        "snippet": "    private final LinearObjectiveFunction f;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Linear objective function. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.constraints",
        "snippet": "    private final Collection<LinearConstraint> constraints;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " Linear constraints. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.restrictToNonNegative",
        "snippet": "    private final boolean restrictToNonNegative;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " Whether to restrict the variables to non-negative values. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.tableau",
        "snippet": "    protected transient RealMatrix tableau;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " Simple tableau. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables",
        "snippet": "    protected final int numDecisionVariables;",
        "begin_line": 81,
        "end_line": 81,
        "comment": " Number of decision variables. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables",
        "snippet": "    protected final int numSlackVariables;",
        "begin_line": 84,
        "end_line": 84,
        "comment": " Number of slack variables. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables",
        "snippet": "    protected int numArtificialVariables;",
        "begin_line": 87,
        "end_line": 87,
        "comment": " Number of artificial variables. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexTableau",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexTableau.epsilon",
        "snippet": "    protected final double epsilon;",
        "begin_line": 90,
        "end_line": 90,
        "comment": " Amount of error to accept in floating point comparisons. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexSolver",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexSolver.DEFAULT_EPSILON",
        "snippet": "    private static final double DEFAULT_EPSILON = 1.0e-6;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Default amount of error to accept in floating point comparisons. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.SimplexSolver",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver.java",
        "signature": "org.apache.commons.math.optimization.linear.SimplexSolver.epsilon",
        "snippet": "    protected final double epsilon;  ",
        "begin_line": 36,
        "end_line": 36,
        "comment": " Amount of error to accept in floating point comparisons. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.LinearConstraint",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java",
        "signature": "org.apache.commons.math.optimization.linear.LinearConstraint.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -764632794033034092L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.LinearConstraint",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java",
        "signature": "org.apache.commons.math.optimization.linear.LinearConstraint.coefficients",
        "snippet": "    private final transient RealVector coefficients;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " Coefficients of the constraint (left hand side). "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.LinearConstraint",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java",
        "signature": "org.apache.commons.math.optimization.linear.LinearConstraint.relationship",
        "snippet": "    private final Relationship relationship;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " Relationship between left and right hand sides (=, &lt;=, >=). "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.LinearConstraint",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/LinearConstraint.java",
        "signature": "org.apache.commons.math.optimization.linear.LinearConstraint.value",
        "snippet": "    private final double value;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Value of the constraint (right hand side). "
    },
    {
        "class_name": "org.apache.commons.math.util.CompositeFormat",
        "src_path": "src/main/java/org/apache/commons/math/util/CompositeFormat.java",
        "signature": "org.apache.commons.math.util.CompositeFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5358685519349262494L;",
        "begin_line": 34,
        "end_line": 34,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.LinearObjectiveFunction",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java",
        "signature": "org.apache.commons.math.optimization.linear.LinearObjectiveFunction.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -4531815507568396090L;",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.LinearObjectiveFunction",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java",
        "signature": "org.apache.commons.math.optimization.linear.LinearObjectiveFunction.coefficients",
        "snippet": "    private final transient RealVector coefficients;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " Coefficients of the constraint (c<sub>i</sub>). "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.LinearObjectiveFunction",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/LinearObjectiveFunction.java",
        "signature": "org.apache.commons.math.optimization.linear.LinearObjectiveFunction.constantTerm",
        "snippet": "    private final double constantTerm;",
        "begin_line": 51,
        "end_line": 51,
        "comment": " Constant term of the linear equation. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.lu",
        "snippet": "    @Deprecated\n    private DecompositionSolver lu;",
        "begin_line": 37,
        "end_line": 38,
        "comment": " Cached LU solver.\n     * @deprecated as of release 2.0, since all methods using this are deprecated\n     "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.endRow",
        "snippet": "            private double endRow;",
        "begin_line": 198,
        "end_line": 198,
        "comment": " Last row index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.columnSum",
        "snippet": "            private double columnSum;",
        "begin_line": 201,
        "end_line": 201,
        "comment": " Sum of absolute values on one column. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.maxColSum",
        "snippet": "            private double maxColSum;",
        "begin_line": 204,
        "end_line": 204,
        "comment": " Maximal sum across all columns. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.sum",
        "snippet": "            private double sum;",
        "begin_line": 237,
        "end_line": 237,
        "comment": " Sum of squared entries. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.startRow",
        "snippet": "            private int startRow;",
        "begin_line": 323,
        "end_line": 323,
        "comment": " Initial row index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.startColumn",
        "snippet": "            private int startColumn;",
        "begin_line": 326,
        "end_line": 326,
        "comment": " Initial column index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.Array2DRowRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java",
        "signature": "org.apache.commons.math.linear.Array2DRowRealMatrix.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1067294169172445528L;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.linear.Array2DRowRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java",
        "signature": "org.apache.commons.math.linear.Array2DRowRealMatrix.data",
        "snippet": "    protected double data[][];",
        "begin_line": 58,
        "end_line": 58,
        "comment": " Entries of the matrix "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -708767813036157690L;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_PREFIX",
        "snippet": "    private static final String DEFAULT_PREFIX = \"{\";",
        "begin_line": 51,
        "end_line": 51,
        "comment": " The default prefix: \"{\". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_SUFFIX",
        "snippet": "    private static final String DEFAULT_SUFFIX = \"}\";",
        "begin_line": 54,
        "end_line": 54,
        "comment": " The default suffix: \"}\". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_SEPARATOR",
        "snippet": "    private static final String DEFAULT_SEPARATOR = \"; \";",
        "begin_line": 57,
        "end_line": 57,
        "comment": " The default separator: \", \". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.prefix",
        "snippet": "    private final String prefix;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " Prefix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.suffix",
        "snippet": "    private final String suffix;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Suffix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.separator",
        "snippet": "    private final String separator;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " Separator. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedPrefix",
        "snippet": "    private final String trimmedPrefix;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Trimmed prefix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedSuffix",
        "snippet": "    private final String trimmedSuffix;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " Trimmed suffix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedSeparator",
        "snippet": "    private final String trimmedSeparator;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " Trimmed separator. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.format",
        "snippet": "    private NumberFormat format;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The format used for components. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.Relationship",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/Relationship.java",
        "signature": "org.apache.commons.math.optimization.linear.Relationship.stringValue",
        "snippet": "    private String stringValue;",
        "begin_line": 37,
        "end_line": 37,
        "comment": " Display string for the relationship. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.RealPointValuePair",
        "src_path": "src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java",
        "signature": "org.apache.commons.math.optimization.RealPointValuePair.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1003888396256744753L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.RealPointValuePair",
        "src_path": "src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java",
        "signature": "org.apache.commons.math.optimization.RealPointValuePair.point",
        "snippet": "    private final double[] point;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Point coordinates. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.RealPointValuePair",
        "src_path": "src/main/java/org/apache/commons/math/optimization/RealPointValuePair.java",
        "signature": "org.apache.commons.math.optimization.RealPointValuePair.value",
        "snippet": "    private final double value;",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Value of the objective function at the point. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java",
        "signature": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.DEFAULT_MAX_ITERATIONS",
        "snippet": "    public static final int DEFAULT_MAX_ITERATIONS = 100;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Default maximal number of iterations allowed. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java",
        "signature": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.maxIterations",
        "snippet": "    private int maxIterations;",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Maximal number of iterations allowed. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java",
        "signature": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.iterations",
        "snippet": "    private int iterations;",
        "begin_line": 44,
        "end_line": 44,
        "comment": " Number of iterations already performed. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java",
        "signature": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.f",
        "snippet": "    protected LinearObjectiveFunction f;",
        "begin_line": 47,
        "end_line": 47,
        "comment": " Linear objective function. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java",
        "signature": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.constraints",
        "snippet": "    protected Collection<LinearConstraint> constraints;",
        "begin_line": 50,
        "end_line": 50,
        "comment": " Linear constraints. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java",
        "signature": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.goalType",
        "snippet": "    protected GoalType goalType;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " Type of optimization goal: either {@link GoalType#MAXIMIZE} or {@link GoalType#MINIMIZE}. "
    },
    {
        "class_name": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer",
        "src_path": "src/main/java/org/apache/commons/math/optimization/linear/AbstractLinearOptimizer.java",
        "signature": "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.restrictToNonNegative",
        "snippet": "    protected boolean restrictToNonNegative;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " Whether to restrict the variables to non-negative values. "
    }
]