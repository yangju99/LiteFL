[
    {
        "class_name": "org.jfree.chart.StrokeMap",
        "src_path": "source/org/jfree/chart/StrokeMap.java",
        "signature": "org.jfree.chart.StrokeMap.store",
        "snippet": "    private transient Map store;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " Storage for the keys and values. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8831571430103671324L;",
        "begin_line": 188,
        "end_line": 188,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.ZERO",
        "snippet": "    public static final Number ZERO = new Integer(0);",
        "begin_line": 191,
        "end_line": 191,
        "comment": " Useful constant representing zero. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_INSETS",
        "snippet": "    public static final RectangleInsets DEFAULT_INSETS \n            = new RectangleInsets(4.0, 8.0, 4.0, 8.0);",
        "begin_line": 194,
        "end_line": 195,
        "comment": " The default insets. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE",
        "snippet": "    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f);",
        "begin_line": 198,
        "end_line": 198,
        "comment": " The default outline stroke. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT",
        "snippet": "    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;",
        "begin_line": 201,
        "end_line": 201,
        "comment": " The default outline color. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_FOREGROUND_ALPHA",
        "snippet": "    public static final float DEFAULT_FOREGROUND_ALPHA = 1.0f;",
        "begin_line": 204,
        "end_line": 204,
        "comment": " The default foreground alpha transparency. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_ALPHA",
        "snippet": "    public static final float DEFAULT_BACKGROUND_ALPHA = 1.0f;",
        "begin_line": 207,
        "end_line": 207,
        "comment": " The default background alpha transparency. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT",
        "snippet": "    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;",
        "begin_line": 210,
        "end_line": 210,
        "comment": " The default background color. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW",
        "snippet": "    public static final int MINIMUM_WIDTH_TO_DRAW = 10;",
        "begin_line": 213,
        "end_line": 213,
        "comment": " The minimum width at which the plot should be drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW",
        "snippet": "    public static final int MINIMUM_HEIGHT_TO_DRAW = 10;",
        "begin_line": 216,
        "end_line": 216,
        "comment": " The minimum height at which the plot should be drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX",
        "snippet": "    public static final Shape DEFAULT_LEGEND_ITEM_BOX \n            = new Rectangle2D.Double(-4.0, -4.0, 8.0, 8.0);",
        "begin_line": 219,
        "end_line": 220,
        "comment": " A default box shape for legend items. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE",
        "snippet": "    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE \n            = new Ellipse2D.Double(-4.0, -4.0, 8.0, 8.0);",
        "begin_line": 223,
        "end_line": 224,
        "comment": " A default circle shape for legend items. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.parent",
        "snippet": "    private Plot parent;",
        "begin_line": 227,
        "end_line": 227,
        "comment": " The parent plot (<code>null</code> if this is the root plot). "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.datasetGroup",
        "snippet": "    private DatasetGroup datasetGroup;",
        "begin_line": 230,
        "end_line": 230,
        "comment": " The dataset group (to be used for thread synchronisation). "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessage",
        "snippet": "    private String noDataMessage;",
        "begin_line": 233,
        "end_line": 233,
        "comment": " The message to display if no data is available. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessageFont",
        "snippet": "    private Font noDataMessageFont;",
        "begin_line": 236,
        "end_line": 236,
        "comment": " The font used to display the 'no data' message. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessagePaint",
        "snippet": "    private transient Paint noDataMessagePaint;",
        "begin_line": 239,
        "end_line": 239,
        "comment": " The paint used to draw the 'no data' message. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.insets",
        "snippet": "    private RectangleInsets insets;",
        "begin_line": 242,
        "end_line": 242,
        "comment": " Amount of blank space around the plot area. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlineVisible",
        "snippet": "    private boolean outlineVisible;",
        "begin_line": 249,
        "end_line": 249,
        "comment": " \r\n     * A flag that controls whether or not the plot outline is drawn. \r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlineStroke",
        "snippet": "    private transient Stroke outlineStroke;",
        "begin_line": 252,
        "end_line": 252,
        "comment": " The Stroke used to draw an outline around the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlinePaint",
        "snippet": "    private transient Paint outlinePaint;",
        "begin_line": 255,
        "end_line": 255,
        "comment": " The Paint used to draw an outline around the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundPaint",
        "snippet": "    private transient Paint backgroundPaint;",
        "begin_line": 258,
        "end_line": 258,
        "comment": " An optional color used to fill the plot background. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImage",
        "snippet": "    private transient Image backgroundImage;  // not currently serialized",
        "begin_line": 261,
        "end_line": 261,
        "comment": " not currently serialized"
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImageAlignment",
        "snippet": "    private int backgroundImageAlignment = Align.FIT;",
        "begin_line": 264,
        "end_line": 264,
        "comment": " The alignment for the background image. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImageAlpha",
        "snippet": "    private float backgroundImageAlpha = 0.5f;",
        "begin_line": 267,
        "end_line": 267,
        "comment": " The alpha value used to draw the background image. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.foregroundAlpha",
        "snippet": "    private float foregroundAlpha;",
        "begin_line": 270,
        "end_line": 270,
        "comment": " The alpha-transparency for the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundAlpha",
        "snippet": "    private float backgroundAlpha;",
        "begin_line": 273,
        "end_line": 273,
        "comment": " The alpha transparency for the background paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.drawingSupplier",
        "snippet": "    private DrawingSupplier drawingSupplier;",
        "begin_line": 276,
        "end_line": 276,
        "comment": " The drawing supplier. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 279,
        "end_line": 279,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_RED",
        "snippet": "    public static final Color VERY_DARK_RED = new Color(0x80, 0x00, 0x00);",
        "begin_line": 59,
        "end_line": 59,
        "comment": " A very dark red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_RED",
        "snippet": "    public static final Color DARK_RED = new Color(0xc0, 0x00, 0x00);",
        "begin_line": 62,
        "end_line": 62,
        "comment": " A dark red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_RED",
        "snippet": "    public static final Color LIGHT_RED = new Color(0xFF, 0x40, 0x40);",
        "begin_line": 65,
        "end_line": 65,
        "comment": " A light red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_RED",
        "snippet": "    public static final Color VERY_LIGHT_RED = new Color(0xFF, 0x80, 0x80);",
        "begin_line": 68,
        "end_line": 68,
        "comment": " A very light red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_YELLOW",
        "snippet": "    public static final Color VERY_DARK_YELLOW = new Color(0x80, 0x80, 0x00);",
        "begin_line": 71,
        "end_line": 71,
        "comment": " A very dark yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_YELLOW",
        "snippet": "    public static final Color DARK_YELLOW = new Color(0xC0, 0xC0, 0x00);",
        "begin_line": 74,
        "end_line": 74,
        "comment": " A dark yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_YELLOW",
        "snippet": "    public static final Color LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x40);",
        "begin_line": 77,
        "end_line": 77,
        "comment": " A light yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW",
        "snippet": "    public static final Color VERY_LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x80);",
        "begin_line": 80,
        "end_line": 80,
        "comment": " A very light yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_GREEN",
        "snippet": "    public static final Color VERY_DARK_GREEN = new Color(0x00, 0x80, 0x00);",
        "begin_line": 83,
        "end_line": 83,
        "comment": " A very dark green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_GREEN",
        "snippet": "    public static final Color DARK_GREEN = new Color(0x00, 0xC0, 0x00);",
        "begin_line": 86,
        "end_line": 86,
        "comment": " A dark green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_GREEN",
        "snippet": "    public static final Color LIGHT_GREEN = new Color(0x40, 0xFF, 0x40);",
        "begin_line": 89,
        "end_line": 89,
        "comment": " A light green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_GREEN",
        "snippet": "    public static final Color VERY_LIGHT_GREEN = new Color(0x80, 0xFF, 0x80);",
        "begin_line": 92,
        "end_line": 92,
        "comment": " A very light green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_CYAN",
        "snippet": "    public static final Color VERY_DARK_CYAN = new Color(0x00, 0x80, 0x80);",
        "begin_line": 95,
        "end_line": 95,
        "comment": " A very dark cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_CYAN",
        "snippet": "    public static final Color DARK_CYAN = new Color(0x00, 0xC0, 0xC0);",
        "begin_line": 98,
        "end_line": 98,
        "comment": " A dark cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_CYAN",
        "snippet": "    public static final Color LIGHT_CYAN = new Color(0x40, 0xFF, 0xFF);",
        "begin_line": 101,
        "end_line": 101,
        "comment": " A light cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_CYAN",
        "snippet": "    public static final Color VERY_LIGHT_CYAN = new Color(0x80, 0xFF, 0xFF);",
        "begin_line": 104,
        "end_line": 104,
        "comment": " Aa very light cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_BLUE",
        "snippet": "    public static final Color VERY_DARK_BLUE = new Color(0x00, 0x00, 0x80);",
        "begin_line": 107,
        "end_line": 107,
        "comment": " A very dark blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_BLUE",
        "snippet": "    public static final Color DARK_BLUE = new Color(0x00, 0x00, 0xC0);",
        "begin_line": 110,
        "end_line": 110,
        "comment": " A dark blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_BLUE",
        "snippet": "    public static final Color LIGHT_BLUE = new Color(0x40, 0x40, 0xFF);",
        "begin_line": 113,
        "end_line": 113,
        "comment": " A light blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_BLUE",
        "snippet": "    public static final Color VERY_LIGHT_BLUE = new Color(0x80, 0x80, 0xFF);",
        "begin_line": 116,
        "end_line": 116,
        "comment": " A very light blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_MAGENTA",
        "snippet": "    public static final Color VERY_DARK_MAGENTA = new Color(0x80, 0x00, 0x80);",
        "begin_line": 119,
        "end_line": 119,
        "comment": " A very dark magenta/purple color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_MAGENTA",
        "snippet": "    public static final Color DARK_MAGENTA = new Color(0xC0, 0x00, 0xC0);",
        "begin_line": 122,
        "end_line": 122,
        "comment": " A dark magenta color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_MAGENTA",
        "snippet": "    public static final Color LIGHT_MAGENTA = new Color(0xFF, 0x40, 0xFF);",
        "begin_line": 125,
        "end_line": 125,
        "comment": " A light magenta color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA",
        "snippet": "    public static final Color VERY_LIGHT_MAGENTA = new Color(0xFF, 0x80, 0xFF);",
        "begin_line": 128,
        "end_line": 128,
        "comment": " A very light magenta color. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -7339847061039422538L;",
        "begin_line": 80,
        "end_line": 80,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_PAINT_SEQUENCE \n            = ChartColor.createDefaultPaintArray();",
        "begin_line": 83,
        "end_line": 84,
        "comment": " The default fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE = new Paint[] {\n            Color.lightGray};",
        "begin_line": 87,
        "end_line": 88,
        "comment": " The default outline paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE = new Paint[] {\n            Color.white};",
        "begin_line": 91,
        "end_line": 92,
        "comment": " The default fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE",
        "snippet": "    public static final Stroke[] DEFAULT_STROKE_SEQUENCE = new Stroke[] {\n            new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, \n                    BasicStroke.JOIN_BEVEL)};",
        "begin_line": 95,
        "end_line": 97,
        "comment": " The default stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE",
        "snippet": "    public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE \n            = new Stroke[] {new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, \n                    BasicStroke.JOIN_BEVEL)};",
        "begin_line": 100,
        "end_line": 102,
        "comment": " The default outline stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE",
        "snippet": "    public static final Shape[] DEFAULT_SHAPE_SEQUENCE \n            = createStandardSeriesShapes();",
        "begin_line": 105,
        "end_line": 106,
        "comment": " The default shape sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.paintSequence",
        "snippet": "    private transient Paint[] paintSequence;",
        "begin_line": 109,
        "end_line": 109,
        "comment": " The paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.paintIndex",
        "snippet": "    private int paintIndex;",
        "begin_line": 112,
        "end_line": 112,
        "comment": " The current paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlinePaintSequence",
        "snippet": "    private transient Paint[] outlinePaintSequence;",
        "begin_line": 115,
        "end_line": 115,
        "comment": " The outline paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlinePaintIndex",
        "snippet": "    private int outlinePaintIndex;",
        "begin_line": 118,
        "end_line": 118,
        "comment": " The current outline paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.fillPaintSequence",
        "snippet": "    private transient Paint[] fillPaintSequence;",
        "begin_line": 121,
        "end_line": 121,
        "comment": " The fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.fillPaintIndex",
        "snippet": "    private int fillPaintIndex;",
        "begin_line": 124,
        "end_line": 124,
        "comment": " The current fill paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.strokeSequence",
        "snippet": "    private transient Stroke[] strokeSequence;",
        "begin_line": 127,
        "end_line": 127,
        "comment": " The stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.strokeIndex",
        "snippet": "    private int strokeIndex;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " The current stroke index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlineStrokeSequence",
        "snippet": "    private transient Stroke[] outlineStrokeSequence;",
        "begin_line": 133,
        "end_line": 133,
        "comment": " The outline stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlineStrokeIndex",
        "snippet": "    private int outlineStrokeIndex;",
        "begin_line": 136,
        "end_line": 136,
        "comment": " The current outline stroke index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.shapeSequence",
        "snippet": "    private transient Shape[] shapeSequence;",
        "begin_line": 139,
        "end_line": 139,
        "comment": " The shape sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.shapeIndex",
        "snippet": "    private int shapeIndex;",
        "begin_line": 142,
        "end_line": 142,
        "comment": " The current shape index. "
    },
    {
        "class_name": "org.jfree.chart.ui.Licences",
        "src_path": "source/org/jfree/chart/ui/Licences.java",
        "signature": "org.jfree.chart.ui.Licences.GPL",
        "snippet": "    public static final String GPL = \"GNU GENERAL PUBLIC LICENSE\\n\"\n        + \"\\n\"\n        + \"Version 2, June 1991\\n\"\n        + \"\\n\"\n        + \"Copyright (C) 1989, 1991 Free Software Foundation, Inc. 675 Mass Ave, Cambridge, \"\n        + \"MA 02139, USA. Everyone is permitted to copy and distribute verbatim copies of this \"\n        + \"license document, but changing it is not allowed.\\n\"\n        + \"\\n\"\n        + \"Preamble\\n\"\n        + \"The licenses for most software are designed to take away your freedom to share and \"\n        + \"change it. By contrast, the GNU General Public License is intended to guarantee your \"\n        + \"freedom to share and change free software--to make sure the software is free for all \"\n        + \"its users. This General Public License applies to most of the Free Software \"\n        + \"Foundation's software and to any other program whose authors commit to using it. (Some \"\n        + \"other Free Software Foundation software is covered by the GNU Library General Public \"\n        + \"License instead.) You can apply it to your programs, too.\\n\"\n        + \"\\n\"\n        + \"When we speak of free software, we are referring to freedom, not price. Our General \"\n        + \"Public Licenses are designed to make sure that you have the freedom to distribute \"\n        + \"copies of free software (and charge for this service if you wish), that you receive \"\n        + \"source code or can get it if you want it, that you can change the software or use \"\n        + \"pieces of it in new free programs; and that you know you can do these things.\"\n        + \"\\n\"\n        + \"To protect your rights, we need to make restrictions that forbid anyone to deny you \"\n        + \"these rights or to ask you to surrender the rights. These restrictions translate to \"\n        + \"certain responsibilities for you if you distribute copies of the software, or if you \"\n        + \"modify it.\\n\"\n        + \"\\n\"\n        + \"For example, if you distribute copies of such a program, whether gratis or for a fee, \"\n        + \"you must give the recipients all the rights that you have. You must make sure that \"\n        + \"they, too, receive or can get the source code. And you must show them these terms so \"\n        + \"they know their rights.\\n\"\n        + \"\\n\"\n        + \"We protect your rights with two steps: (1) copyright the software, and (2) offer you \"\n        + \"this license which gives you legal permission to copy, distribute and/or modify the \"\n        + \"software.\\n\"\n        + \"\\n\"\n        + \"Also, for each author's protection and ours, we want to make certain that everyone \"\n        + \"understands that there is no warranty for this free software. If the software is \"\n        + \"modified by someone else and passed on, we want its recipients to know that what they \"\n        + \"have is not the original, so that any problems introduced by others will not reflect \"\n        + \"on the original authors' reputations.\\n\"\n        + \"\\n\"\n        + \"Finally, any free program is threatened constantly by software patents. We wish to \"\n        + \"avoid the danger that redistributors of a free program will individually obtain patent \"\n        + \"licenses, in effect making the program proprietary. To prevent this, we have made it \"\n        + \"clear that any patent must be licensed for everyone's free use or not licensed at \"\n        + \"all.\\n\"\n        + \"\\n\"\n        + \"The precise terms and conditions for copying, distribution and modification follow.\\n\"\n        + \"\\n\"\n        + \"GNU GENERAL PUBLIC LICENSE\\n\"\n        + \"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\\n\"\n        + \"\\n\"\n        + \"0. This License applies to any program or other work which contains a notice placed by \"\n        + \"the copyright holder saying it may be distributed under the terms of this General \"\n        + \"Public License. The \\\"Program\\\", below, refers to any such program or work, and a \"\n        + \"\\\"work based on the Program\\\" means either the Program or any derivative work under \"\n        + \"copyright law: that is to say, a work containing the Program or a portion of it, \"\n        + \"either verbatim or with modifications and/or translated into another language. \"\n        + \"(Hereinafter, translation is included without limitation in the term \"\n        + \"\\\"modification\\\".) Each licensee is addressed as \\\"you\\\".\\n\"\n        + \"\\n\"\n        + \"Activities other than copying, distribution and modification are not covered by this \"\n        + \"License; they are outside its scope. The act of running the Program is not restricted, \"\n        + \"and the output from the Program is covered only if its contents constitute a work \"\n        + \"based on the Program (independent of having been made by running the Program). Whether \"\n        + \"that is true depends on what the Program does.\\n\"\n        + \"\\n\"\n        + \"1. You may copy and distribute verbatim copies of the Program's source code as you \"\n        + \"receive it, in any medium, provided that you conspicuously and appropriately publish \"\n        + \"on each copy an appropriate copyright notice and disclaimer of warranty; keep intact \"\n        + \"all the notices that refer to this License and to the absence of any warranty; and \"\n        + \"give any other recipients of the Program a copy of this License along with the \"\n        + \"Program.\\n\"\n        + \"\\n\"\n        + \"You may charge a fee for the physical act of transferring a copy, and you may at your \"\n        + \"option offer warranty protection in exchange for a fee.\\n\"\n        + \"\\n\"\n        + \"2. You may modify your copy or copies of the Program or any portion of it, thus \"\n        + \"forming a work based on the Program, and copy and distribute such modifications or \"\n        + \"work under the terms of Section 1 above, provided that you also meet all of these \"\n        + \"conditions:\\n\"\n        + \"\\n\"\n        + \"a) You must cause the modified files to carry prominent notices stating that you \"\n        + \"changed the files and the date of any change.\\n\"\n        + \"\\n\"\n        + \"b) You must cause any work that you distribute or publish, that in whole or in part \"\n        + \"contains or is derived from the Program or any part thereof, to be licensed as a whole \"\n        + \"at no charge to all third parties under the terms of this License.\\n\"\n        + \"\\n\"\n        + \"c) If the modified program normally reads commands interactively when run, you must \"\n        + \"cause it, when started running for such interactive use in the most ordinary way, to \"\n        + \"print or display an announcement including an appropriate copyright notice and a \"\n        + \"notice that there is no warranty (or else, saying that you provide a warranty) and \"\n        + \"that users may redistribute the program under these conditions, and telling the user \"\n        + \"how to view a copy of this License. (Exception: if the Program itself is interactive \"\n        + \"but does not normally print such an announcement, your work based on the Program is \"\n        + \"not required to print an announcement.)\\n\"\n        + \"\\n\"\n        + \"These requirements apply to the modified work as a whole. If identifiable sections of \"\n        + \"that work are not derived from the Program, and can be reasonably considered \"\n        + \"independent and separate works in themselves, then this License, and its terms, do not \"\n        + \"apply to those sections when you distribute them as separate works. But when you \"\n        + \"distribute the same sections as part of a whole which is a work based on the Program, \"\n        + \"the distribution of the whole must be on the terms of this License, whose permissions \"\n        + \"for other licensees extend to the entire whole, and thus to each and every part \"\n        + \"regardless of who wrote it.\\n\"\n        + \"\\n\"\n        + \"Thus, it is not the intent of this section to claim rights or contest your rights to \"\n        + \"work written entirely by you; rather, the intent is to exercise the right to control \"\n        + \"the distribution of derivative or collective works based on the Program.\\n\"\n        + \"\\n\"\n        + \"In addition, mere aggregation of another work not based on the Program with the \"\n        + \"Program (or with a work based on the Program) on a volume of a storage or distribution \"\n        + \"medium does not bring the other work under the scope of this License.\\n\"\n        + \"\\n\"\n        + \"3. You may copy and distribute the Program (or a work based on it, under Section 2) in \"\n        + \"object code or executable form under the terms of Sections 1 and 2 above provided that \"\n        + \"you also do one of the following:\\n\"\n        + \"\\n\"\n        + \"a) Accompany it with the complete corresponding machine-readable source code, which \"\n        + \"must be distributed under the terms of Sections 1 and 2 above on a medium customarily \"\n        + \"used for software interchange; or,\\n\"\n        + \"b) Accompany it with a written offer, valid for at least three years, to give any \"\n        + \"third party, for a charge no more than your cost of physically performing source \"\n        + \"distribution, a complete machine-readable copy of the corresponding source code, to be \"\n        + \"distributed under the terms of Sections 1 and 2 above on a medium customarily used for \"\n        + \"software interchange; or,\\n\"\n        + \"c) Accompany it with the information you received as to the offer to distribute \"\n        + \"corresponding source code. (This alternative is allowed only for noncommercial \"\n        + \"distribution and only if you received the program in object code or executable form \"\n        + \"with such an offer, in accord with Subsection b above.)\\n\"\n        + \"\\n\"\n        + \"The source code for a work means the preferred form of the work for making \"\n        + \"modifications to it. For an executable work, complete source code means all the source \"\n        + \"code for all modules it contains, plus any associated interface definition files, plus \"\n        + \"the scripts used to control compilation and installation of the executable. However, \"\n        + \"as a special exception, the source code distributed need not include anything that is \"\n        + \"normally distributed (in either source or binary form) with the major components \"\n        + \"(compiler, kernel, and so on) of the operating system on which the executable runs, \"\n        + \"unless that component itself accompanies the executable.\\n\"\n        + \"\\n\"\n        + \"If distribution of executable or object code is made by offering access to copy from a \"\n        + \"designated place, then offering equivalent access to copy the source code from the \"\n        + \"same place counts as distribution of the source code, even though third parties are \"\n        + \"not compelled to copy the source along with the object code.\\n\"\n        + \"\\n\"\n        + \"4. You may not copy, modify, sublicense, or distribute the Program except as expressly \"\n        + \"provided under this License. Any attempt otherwise to copy, modify, sublicense or \"\n        + \"distribute the Program is void, and will automatically terminate your rights under \"\n        + \"this License. However, parties who have received copies, or rights, from you under \"\n        + \"this License will not have their licenses terminated so long as such parties remain in \"\n        + \"full compliance.\"\n        + \"\\n\"\n        + \"5. You are not required to accept this License, since you have not signed it. However, \"\n        + \"nothing else grants you permission to modify or distribute the Program or its \"\n        + \"derivative works. These actions are prohibited by law if you do not accept this \"\n        + \"License. Therefore, by modifying or distributing the Program (or any work based on the \"\n        + \"Program), you indicate your acceptance of this License to do so, and all its terms and \"\n        + \"conditions for copying, distributing or modifying the Program or works based on it.\\n\"\n        + \"\\n\"\n        + \"6. Each time you redistribute the Program (or any work based on the Program), the \"\n        + \"recipient automatically receives a license from the original licensor to copy, \"\n        + \"distribute or modify the Program subject to these terms and conditions. You may not \"\n        + \"impose any further restrictions on the recipients' exercise of the rights granted \"\n        + \"herein. You are not responsible for enforcing compliance by third parties to this \"\n        + \"License.\"\n        + \"\\n\"\n        + \"7. If, as a consequence of a court judgment or allegation of patent infringement or \"\n        + \"for any other reason (not limited to patent issues), conditions are imposed on you \"\n        + \"(whether by court order, agreement or otherwise) that contradict the conditions of \"\n        + \"this License, they do not excuse you from the conditions of this License. If you \"\n        + \"cannot distribute so as to satisfy simultaneously your obligations under this License \"\n        + \"and any other pertinent obligations, then as a consequence you may not distribute the \"\n        + \"Program at all. For example, if a patent license would not permit royalty-free \"\n        + \"redistribution of the Program by all those who receive copies directly or indirectly \"\n        + \"through you, then the only way you could satisfy both it and this License would be to \"\n        + \"refrain entirely from distribution of the Program.\\n\"\n        + \"\\n\"\n        + \"If any portion of this section is held invalid or unenforceable under any particular \"\n        + \"circumstance, the balance of the section is intended to apply and the section as a \"\n        + \"whole is intended to apply in other circumstances.\\n\"\n        + \"\\n\"\n        + \"It is not the purpose of this section to induce you to infringe any patents or other \"\n        + \"property right claims or to contest validity of any such claims; this section has the \"\n        + \"sole purpose of protecting the integrity of the free software distribution system, \"\n        + \"which is implemented by public license practices. Many people have made generous \"\n        + \"contributions to the wide range of software distributed through that system in \"\n        + \"reliance on consistent application of that system; it is up to the author/donor to \"\n        + \"decide if he or she is willing to distribute software through any other system and a \"\n        + \"licensee cannot impose that choice.\\n\"\n        + \"\\n\"\n        + \"This section is intended to make thoroughly clear what is believed to be a consequence \"\n        + \"of the rest of this License.\\n\"\n        + \"\\n\"\n        + \"8. If the distribution and/or use of the Program is restricted in certain countries \"\n        + \"either by patents or by copyrighted interfaces, the original copyright holder who \"\n        + \"places the Program under this License may add an explicit geographical distribution \"\n        + \"limitation excluding those countries, so that distribution is permitted only in or \"\n        + \"among countries not thus excluded. In such case, this License incorporates the \"\n        + \"limitation as if written in the body of this License.\\n\"\n        + \"\\n\"\n        + \"9. The Free Software Foundation may publish revised and/or new versions of the General \"\n        + \"Public License from time to time. Such new versions will be similar in spirit to the \"\n        + \"present version, but may differ in detail to address new problems or concerns.\\n\"\n        + \"\\n\"\n        + \"Each version is given a distinguishing version number. If the Program specifies a \"\n        + \"version number of this License which applies to it and \\\"any later version\\\", you have \"\n        + \"the option of following the terms and conditions either of that version or of any \"\n        + \"later version published by the Free Software Foundation. If the Program does not \"\n        + \"specify a version number of this License, you may choose any version ever published by \"\n        + \"the Free Software Foundation.\\n\"\n        + \"\\n\"\n        + \"10. If you wish to incorporate parts of the Program into other free programs whose \"\n        + \"distribution conditions are different, write to the author to ask for permission. For \"\n        + \"software which is copyrighted by the Free Software Foundation, write to the Free \"\n        + \"Software Foundation; we sometimes make exceptions for this. Our decision will be \"\n        + \"guided by the two goals of preserving the free status of all derivatives of our free \"\n        + \"software and of promoting the sharing and reuse of software generally.\\n\"\n        + \"\\n\"\n        + \"NO WARRANTY\\n\"\n        + \"\\n\"\n        + \"11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE \"\n        + \"PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN \"\n        + \"WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \\\"AS IS\\\" \"\n        + \"WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED \"\n        + \"TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. \"\n        + \"THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD \"\n        + \"THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR \"\n        + \"CORRECTION.\\n\"\n        + \"\\n\"\n        + \"12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY \"\n        + \"COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS \"\n        + \"PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, \"\n        + \"INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE \"\n        + \"PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE \"\n        + \"OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE \"\n        + \"WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE \"\n        + \"POSSIBILITY OF SUCH DAMAGES.\\n\"\n        + \"\\n\"\n        + \"END OF TERMS AND CONDITIONS\\n\"\n        + \"\\n\"\n        + \"\\n\"\n        + \"How to Apply These Terms to Your New Programs\\n\"\n        + \"\\n\"\n        + \"If you develop a new program, and you want it to be of the greatest possible use to \"\n        + \"the public, the best way to achieve this is to make it free software which everyone \"\n        + \"can redistribute and change under these terms.\\n\"\n        + \"\\n\"\n        + \"To do so, attach the following notices to the program.  It is safest to attach them to \"\n        + \"the start of each source file to most effectively convey the exclusion of warranty; \"\n        + \"and each file should have at least the \\\"copyright\\\" line and a pointer to where the \"\n        + \"full notice is found.\\n\"\n        + \"\\n\"\n        + \"<one line to give the program's name and a brief idea of what it does.>\\n\"\n        + \"Copyright (C) <year>  <name of author>\\n\"\n        + \"\\n\"\n        + \"This program is free software; you can redistribute it and/or modify it under the \"\n        + \"terms of the GNU General Public License as published by the Free Software Foundation; \"\n        + \"either version 2 of the License, or (at your option) any later version.\\n\"\n        + \"\\n\"\n        + \"This program is distributed in the hope that it will be useful, but WITHOUT ANY \"\n        + \"WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A \"\n        + \"PARTICULAR PURPOSE.  See the GNU General Public License for more details.\\n\"\n        + \"\\n\"\n        + \"You should have received a copy of the GNU General Public License along with this \"\n        + \"program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite \"\n        + \"330, Boston, MA  02111-1307  USA\\n\"\n        + \"\\n\"\n        + \"Also add information on how to contact you by electronic and paper mail.\\n\"\n        + \"\\n\"\n        + \"If the program is interactive, make it output a short notice like this when it starts \"\n        + \"in an interactive mode:\\n\"\n        + \"\\n\"\n        + \"Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with \"\n        + \"ABSOLUTELY NO WARRANTY; for details type `show w'.\\n\"\n        + \"This is free software, and you are welcome to redistribute it under certain \"\n        + \"conditions; type `show c' for details.\\n\"\n        + \"\\n\"\n        + \"The hypothetical commands `show w' and `show c' should show the appropriate parts of \"\n        + \"the General Public License.  Of course, the commands you use may be called something \"\n        + \"other than `show w' and `show c'; they could even be mouse-clicks or menu items\"\n        + \"--whatever suits your program.\\n\"\n        + \"\\n\"\n        + \"You should also get your employer (if you work as a programmer) or your school, if \"\n        + \"any, to sign a \\\"copyright disclaimer\\\" for the program, if necessary.  Here is a \"\n        + \"sample; alter the names:\\n\"\n        + \"\\n\"\n        + \"Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' \"\n        + \"(which makes passes at compilers) written by James Hacker.\\n\"\n        + \"\\n\"\n        + \"<signature of Ty Coon>, 1 April 1989\\n\"\n        + \"Ty Coon, President of Vice\\n\"\n        + \"\\n\"\n        + \"This General Public License does not permit incorporating your program into \"\n        + \"proprietary programs.  If your program is a subroutine library, you may consider it \"\n        + \"more useful to permit linking proprietary applications with the library.  If this is \"\n        + \"what you want to do, use the GNU Library General Public License instead of this \"\n        + \"License.\\n\";",
        "begin_line": 55,
        "end_line": 354,
        "comment": " The GNU General Public Licence. "
    },
    {
        "class_name": "org.jfree.chart.ui.Licences",
        "src_path": "source/org/jfree/chart/ui/Licences.java",
        "signature": "org.jfree.chart.ui.Licences.LGPL",
        "snippet": "    public static final String LGPL = \"GNU LESSER GENERAL PUBLIC LICENSE\\n\"\n        + \"\\n\"\n        + \"Version 2.1, February 1999\\n\"\n        + \"\\n\"\n        + \"Copyright (C) 1991, 1999 Free Software Foundation, Inc.\\n\"\n        + \"59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\\n\"\n        + \"Everyone is permitted to copy and distribute verbatim copies of this license document, \"\n        + \"but changing it is not allowed.\\n\"\n        + \"\\n\"\n        + \"[This is the first released version of the Lesser GPL.  It also counts as the \"\n        + \"successor of the GNU Library Public License, version 2, hence the version number \"\n        + \"2.1.]\\n\"\n        + \"\\n\"\n        + \"Preamble\\n\"\n        + \"\\n\"\n        + \"The licenses for most software are designed to take away your freedom to share and \"\n        + \"change it. By contrast, the GNU General Public Licenses are intended to guarantee your \"\n        + \"freedom to share and change free software--to make sure the software is free for all \"\n        + \"its users.\\n\"\n        + \"\\n\"\n        + \"This license, the Lesser General Public License, applies to some specially designated \"\n        + \"software packages--typically libraries--of the Free Software Foundation and other \"\n        + \"authors who decide to use it. You can use it too, but we suggest you first think \"\n        + \"carefully about whether this license or the ordinary General Public License is the \"\n        + \"better strategy to use in any particular case, based on the explanations below.\\n\"\n        + \"\\n\"\n        + \"When we speak of free software, we are referring to freedom of use, not price. Our \"\n        + \"General Public Licenses are designed to make sure that you have the freedom to \"\n        + \"distribute copies of free software (and charge for this service if you wish); that you \"\n        + \"receive source code or can get it if you want it; that you can change the software and \"\n        + \"use pieces of it in new free programs; and that you are informed that you can do these \"\n        + \"things.\\n\"\n        + \"\\n\"\n        + \"To protect your rights, we need to make restrictions that forbid distributors to deny \"\n        + \"you these rights or to ask you to surrender these rights. These restrictions translate \"\n        + \"to certain responsibilities for you if you distribute copies of the library or if you \"\n        + \"modify it.\\n\"\n        + \"\\n\"\n        + \"For example, if you distribute copies of the library, whether gratis or for a fee, you \"\n        + \"must give the recipients all the rights that we gave you. You must make sure that \"\n        + \"they, too, receive or can get the source code. If you link other code with the \"\n        + \"library, you must provide complete object files to the recipients, so that they can \"\n        + \"relink them with the library after making changes to the library and recompiling it. \"\n        + \"And you must show them these terms so they know their rights.\\n\"\n        + \"\\n\"\n        + \"We protect your rights with a two-step method: (1) we copyright the library, and (2) \"\n        + \"we offer you this license, which gives you legal permission to copy, distribute and/or \"\n        + \"modify the library.\\n\"\n        + \"\\n\"\n        + \"To protect each distributor, we want to make it very clear that there is no warranty \"\n        + \"for the free library. Also, if the library is modified by someone else and passed on, \"\n        + \"the recipients should know that what they have is not the original version, so that \"\n        + \"the original author's reputation will not be affected by problems that might be \"\n        + \"introduced by others.\\n\"\n        + \"\\n\"\n        + \"Finally, software patents pose a constant threat to the existence of any free program. \"\n        + \"We wish to make sure that a company cannot effectively restrict the users of a free \"\n        + \"program by obtaining a restrictive license from a patent holder. Therefore, we insist \"\n        + \"that any patent license obtained for a version of the library must be consistent with \"\n        + \"the full freedom of use specified in this license.\\n\"\n        + \"\\n\"\n        + \"Most GNU software, including some libraries, is covered by the ordinary GNU General \"\n        + \"Public License. This license, the GNU Lesser General Public License, applies to \"\n        + \"certain designated libraries, and is quite different from the ordinary General Public \"\n        + \"License. We use this license for certain libraries in order to permit linking those \"\n        + \"libraries into non-free programs.\\n\"\n        + \"\\n\"\n        + \"When a program is linked with a library, whether statically or using a shared library, \"\n        + \"the combination of the two is legally speaking a combined work, a derivative of the \"\n        + \"original library. The ordinary General Public License therefore permits such linking \"\n        + \"only if the entire combination fits its criteria of freedom. The Lesser General Public \"\n        + \"License permits more lax criteria for linking other code with the library.\\n\"\n        + \"\\n\"\n        + \"We call this license the \\\"Lesser\\\" General Public License because it does Less to \"\n        + \"protect the user's freedom than the ordinary General Public License. It also provides \"\n        + \"other free software developers Less of an advantage over competing non-free programs. \"\n        + \"These disadvantages are the reason we use the ordinary General Public License for many \"\n        + \"libraries. However, the Lesser license provides advantages in certain special \"\n        + \"circumstances.\\n\"\n        + \"\\n\"\n        + \"For example, on rare occasions, there may be a special need to encourage the widest \"\n        + \"possible use of a certain library, so that it becomes a de-facto standard. To achieve \"\n        + \"this, non-free programs must be allowed to use the library. A more frequent case is \"\n        + \"that a free library does the same job as widely used non-free libraries. In this case, \"\n        + \"there is little to gain by limiting the free library to free software only, so we use \"\n        + \"the Lesser General Public License.\\n\"\n        + \"\\n\"\n        + \"In other cases, permission to use a particular library in non-free programs enables a \"\n        + \"greater number of people to use a large body of free software. For example, permission \"\n        + \"to use the GNU C Library in non-free programs enables many more people to use the \"\n        + \"whole GNU operating system, as well as its variant, the GNU/Linux operating system.\\n\"\n        + \"\\n\"\n        + \"Although the Lesser General Public License is Less protective of the users' freedom, \"\n        + \"it does ensure that the user of a program that is linked with the Library has the \"\n        + \"freedom and the wherewithal to run that program using a modified version of the \"\n        + \"Library.\\n\"\n        + \"\\n\"\n        + \"The precise terms and conditions for copying, distribution and modification follow. \"\n        + \"Pay close attention to the difference between a \\\"work based on the library\\\" and a \"\n        + \"\\\"work that uses the library\\\". The former contains code derived from the library, \"\n        + \"whereas the latter must be combined with the library in order to run.\\n\"\n        + \"\\n\"\n        + \"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\\n\"\n        + \"\\n\"\n        + \"0. This License Agreement applies to any software library or other program which \"\n        + \"contains a notice placed by the copyright holder or other authorized party saying it \"\n        + \"may be distributed under the terms of this Lesser General Public License (also called \"\n        + \"\\\"this License\\\"). Each licensee is addressed as \\\"you\\\".\"\n        + \"\\n\"\n        + \"A \\\"library\\\" means a collection of software functions and/or data prepared so as to \"\n        + \"be conveniently linked with application programs (which use some of those functions \"\n        + \"and data) to form executables.\\n\"\n        + \"\\n\"\n        + \"The \\\"Library\\\", below, refers to any such software library or work which has been \"\n        + \"distributed under these terms. A \\\"work based on the Library\\\" means either the \"\n        + \"Library or any derivative work under copyright law: that is to say, a work containing \"\n        + \"the Library or a portion of it, either verbatim or with modifications and/or \"\n        + \"translated straightforwardly into another language. (Hereinafter, translation is \"\n        + \"included without limitation in the term \\\"modification\\\".)\\n\"\n        + \"\\n\"\n        + \"\\\"Source code\\\" for a work means the preferred form of the work for making \"\n        + \"modifications to it. For a library, complete source code means all the source code for \"\n        + \"all modules it contains, plus any associated interface definition files, plus the \"\n        + \"scripts used to control compilation and installation of the library.\\n\"\n        + \"\\n\"\n        + \"Activities other than copying, distribution and modification are not covered by this \"\n        + \"License; they are outside its scope. The act of running a program using the Library is \"\n        + \"not restricted, and output from such a program is covered only if its contents \"\n        + \"constitute a work based on the Library (independent of the use of the Library in a \"\n        + \"tool for writing it). Whether that is true depends on what the Library does and what \"\n        + \"the program that uses the Library does.\"\n        + \"\\n\"\n        + \"1. You may copy and distribute verbatim copies of the Library's complete source code \"\n        + \"as you receive it, in any medium, provided that you conspicuously and appropriately \"\n        + \"publish on each copy an appropriate copyright notice and disclaimer of warranty; keep \"\n        + \"intact all the notices that refer to this License and to the absence of any warranty; \"\n        + \"and distribute a copy of this License along with the Library.\\n\"\n        + \"\\n\"\n        + \"You may charge a fee for the physical act of transferring a copy, and you may at your \"\n        + \"option offer warranty protection in exchange for a fee.\\n\"\n        + \"\\n\"\n        + \"2. You may modify your copy or copies of the Library or any portion of it, thus \"\n        + \"forming a work based on the Library, and copy and distribute such modifications or \"\n        + \"work under the terms of Section 1 above, provided that you also meet all of these \"\n        + \"conditions:\\n\"\n        + \"\\n\"\n        + \"*    a) The modified work must itself be a software library.\\n\"\n        + \"*    b) You must cause the files modified to carry prominent notices stating that you \"\n        + \"changed the files and the date of any change.\\n\"\n        + \"*    c) You must cause the whole of the work to be licensed at no charge to all third \"\n        + \"parties under the terms of this License.\\n\"\n        + \"*    d) If a facility in the modified Library refers to a function or a table of data \"\n        + \"to be supplied by an application program that uses the facility, other than as an \"\n        + \"argument passed when the facility is invoked, then you must make a good faith effort \"\n        + \"to ensure that, in the event an application does not supply such function or table, \"\n        + \"the facility still operates, and performs whatever part of its purpose remains \"\n        + \"meaningful.\\n\"\n        + \"\\n\"\n        + \"(For example, a function in a library to compute square roots has a purpose that is \"\n        + \"entirely well-defined independent of the application. Therefore, Subsection 2d \"\n        + \"requires that any application-supplied function or table used by this function must be \"\n        + \"optional: if the application does not supply it, the square root function must still \"\n        + \"compute square roots.)\\n\"\n        + \"\\n\"\n        + \"These requirements apply to the modified work as a whole. If identifiable sections of \"\n        + \"that work are not derived from the Library, and can be reasonably considered \"\n        + \"independent and separate works in themselves, then this License, and its terms, do not \"\n        + \"apply to those sections when you distribute them as separate works. But when you \"\n        + \"distribute the same sections as part of a whole which is a work based on the Library, \"\n        + \"the distribution of the whole must be on the terms of this License, whose permissions \"\n        + \"for other licensees extend to the entire whole, and thus to each and every part \"\n        + \"regardless of who wrote it.\\n\"\n        + \"\\n\"\n        + \"Thus, it is not the intent of this section to claim rights or contest your rights to \"\n        + \"work written entirely by you; rather, the intent is to exercise the right to control \"\n        + \"the distribution of derivative or collective works based on the Library.\\n\"\n        + \"\\n\"\n        + \"In addition, mere aggregation of another work not based on the Library with the \"\n        + \"Library (or with a work based on the Library) on a volume of a storage or distribution \"\n        + \"medium does not bring the other work under the scope of this License.\\n\"\n        + \"\\n\"\n        + \"3. You may opt to apply the terms of the ordinary GNU General Public License instead \"\n        + \"of this License to a given copy of the Library. To do this, you must alter all the \"\n        + \"notices that refer to this License, so that they refer to the ordinary GNU General \"\n        + \"Public License, version 2, instead of to this License. (If a newer version than \"\n        + \"version 2 of the ordinary GNU General Public License has appeared, then you can \"\n        + \"specify that version instead if you wish.) Do not make any other change in these \"\n        + \"notices.\\n\"\n        + \"\\n\"\n        + \"Once this change is made in a given copy, it is irreversible for that copy, so the \"\n        + \"ordinary GNU General Public License applies to all subsequent copies and derivative \"\n        + \"works made from that copy.\\n\"\n        + \"\\n\"\n        + \"This option is useful when you wish to copy part of the code of the Library into a \"\n        + \"program that is not a library.\\n\"\n        + \"\\n\"\n        + \"4. You may copy and distribute the Library (or a portion or derivative of it, under \"\n        + \"Section 2) in object code or executable form under the terms of Sections 1 and 2 above \"\n        + \"provided that you accompany it with the complete corresponding machine-readable source \"\n        + \"code, which must be distributed under the terms of Sections 1 and 2 above on a medium \"\n        + \"customarily used for software interchange.\\n\"\n        + \"\\n\"\n        + \"If distribution of object code is made by offering access to copy from a designated \"\n        + \"place, then offering equivalent access to copy the source code from the same place \"\n        + \"satisfies the requirement to distribute the source code, even though third parties are \"\n        + \"not compelled to copy the source along with the object code.\\n\"\n        + \"\\n\"\n        + \"5. A program that contains no derivative of any portion of the Library, but is \"\n        + \"designed to work with the Library by being compiled or linked with it, is called a \"\n        + \"\\\"work that uses the Library\\\". Such a work, in isolation, is not a derivative work of \"\n        + \"the Library, and therefore falls outside the scope of this License.\\n\"\n        + \"\\n\"\n        + \"However, linking a \\\"work that uses the Library\\\" with the Library creates an \"\n        + \"executable that is a derivative of the Library (because it contains portions of the \"\n        + \"Library), rather than a \\\"work that uses the library\\\". The executable is therefore \"\n        + \"covered by this License. Section 6 states terms for distribution of such executables.\\n\"\n        + \"\\n\"\n        + \"When a \\\"work that uses the Library\\\" uses material from a header file that is part of \"\n        + \"the Library, the object code for the work may be a derivative work of the Library even \"\n        + \"though the source code is not. Whether this is true is especially significant if the \"\n        + \"work can be linked without the Library, or if the work is itself a library. The \"\n        + \"threshold for this to be true is not precisely defined by law.\\n\"\n        + \"\\n\"\n        + \"If such an object file uses only numerical parameters, data structure layouts and \"\n        + \"accessors, and small macros and small inline functions (ten lines or less in length), \"\n        + \"then the use of the object file is unrestricted, regardless of whether it is legally a \"\n        + \"derivative work. (Executables containing this object code plus portions of the Library \"\n        + \"will still fall under Section 6.)\\n\"\n        + \"\\n\"\n        + \"Otherwise, if the work is a derivative of the Library, you may distribute the object \"\n        + \"code for the work under the terms of Section 6. Any executables containing that work \"\n        + \"also fall under Section 6, whether or not they are linked directly with the Library \"\n        + \"itself.\\n\"\n        + \"\\n\"\n        + \"6. As an exception to the Sections above, you may also combine or link a \\\"work that \"\n        + \"uses the Library\\\" with the Library to produce a work containing portions of the \"\n        + \"Library, and distribute that work under terms of your choice, provided that the terms \"\n        + \"permit modification of the work for the customer's own use and reverse engineering for \"\n        + \"debugging such modifications.\\n\"\n        + \"\\n\"\n        + \"You must give prominent notice with each copy of the work that the Library is used in \"\n        + \"it and that the Library and its use are covered by this License. You must supply a \"\n        + \"copy of this License. If the work during execution displays copyright notices, you \"\n        + \"must include the copyright notice for the Library among them, as well as a reference \"\n        + \"directing the user to the copy of this License. Also, you must do one of these \"\n        + \"things:\\n\"\n        + \"\\n\"\n        + \"*    a) Accompany the work with the complete corresponding machine-readable source \"\n        + \"code for the Library including whatever changes were used in the work (which must be \"\n        + \"distributed under Sections 1 and 2 above); and, if the work is an executable linked \"\n        + \"with the Library, with the complete machine-readable \\\"work that uses the Library\\\", \"\n        + \"as object code and/or source code, so that the user can modify the Library and then \"\n        + \"relink to produce a modified executable containing the modified Library. (It is \"\n        + \"understood that the user who changes the contents of definitions files in the Library \"\n        + \"will not necessarily be able to recompile the application to use the modified \"\n        + \"definitions.)\\n\"\n        + \"*    b) Use a suitable shared library mechanism for linking with the Library. A \"\n        + \"suitable mechanism is one that (1) uses at run time a copy of the library already \"\n        + \"present on the user's computer system, rather than copying library functions into the \"\n        + \"executable, and (2) will operate properly with a modified version of the library, if \"\n        + \"the user installs one, as long as the modified version is interface-compatible with \"\n        + \"the version that the work was made with.\\n\"\n        + \"*    c) Accompany the work with a written offer, valid for at least three years, to \"\n        + \"give the same user the materials specified in Subsection 6a, above, for a charge no \"\n        + \"more than the cost of performing this distribution.\\n\"\n        + \"*    d) If distribution of the work is made by offering access to copy from a \"\n        + \"designated place, offer equivalent access to copy the above specified materials from \"\n        + \"the same place.\\n\"\n        + \"*    e) Verify that the user has already received a copy of these materials or that \"\n        + \"you have already sent this user a copy.\\n\"\n        + \"\\n\"\n        + \"For an executable, the required form of the \\\"work that uses the Library\\\" must \"\n        + \"include any data and utility programs needed for reproducing the executable from it. \"\n        + \"However, as a special exception, the materials to be distributed need not include \"\n        + \"anything that is normally distributed (in either source or binary form) with the major \"\n        + \"components (compiler, kernel, and so on) of the operating system on which the \"\n        + \"executable runs, unless that component itself accompanies the executable.\\n\"\n        + \"\\n\"\n        + \"It may happen that this requirement contradicts the license restrictions of other \"\n        + \"proprietary libraries that do not normally accompany the operating system. Such a \"\n        + \"contradiction means you cannot use both them and the Library together in an executable \"\n        + \"that you distribute.\\n\"\n        + \"\\n\"\n        + \"7. You may place library facilities that are a work based on the Library side-by-side \"\n        + \"in a single library together with other library facilities not covered by this \"\n        + \"License, and distribute such a combined library, provided that the separate \"\n        + \"distribution of the work based on the Library and of the other library facilities is \"\n        + \"otherwise permitted, and provided that you do these two things:\\n\"\n        + \"\\n\"\n        + \"*    a) Accompany the combined library with a copy of the same work based on the \"\n        + \"Library, uncombined with any other library facilities. This must be distributed under \"\n        + \"the terms of the Sections above.\\n\"\n        + \"*    b) Give prominent notice with the combined library of the fact that part of it is \"\n        + \"a work based on the Library, and explaining where to find the accompanying uncombined \"\n        + \"form of the same work.\\n\"\n        + \"\\n\"\n        + \"8. You may not copy, modify, sublicense, link with, or distribute the Library except \"\n        + \"as expressly provided under this License. Any attempt otherwise to copy, modify, \"\n        + \"sublicense, link with, or distribute the Library is void, and will automatically \"\n        + \"terminate your rights under this License. However, parties who have received copies, \"\n        + \"or rights, from you under this License will not have their licenses terminated so \"\n        + \"long as such parties remain in full compliance.\\n\"\n        + \"\\n\"\n        + \"9. You are not required to accept this License, since you have not signed it. However, \"\n        + \"nothing else grants you permission to modify or distribute the Library or its \"\n        + \"derivative works. These actions are prohibited by law if you do not accept this \"\n        + \"License. Therefore, by modifying or distributing the Library (or any work based on the \"\n        + \"Library), you indicate your acceptance of this License to do so, and all its terms and \"\n        + \"conditions for copying, distributing or modifying the Library or works based on it.\\n\"\n        + \"\\n\"\n        + \"10. Each time you redistribute the Library (or any work based on the Library), the \"\n        + \"recipient automatically receives a license from the original licensor to copy, \"\n        + \"distribute, link with or modify the Library subject to these terms and conditions. You \"\n        + \"may not impose any further restrictions on the recipients' exercise of the rights \"\n        + \"granted herein. You are not responsible for enforcing compliance by third parties with \"\n        + \"this License.\\n\"\n        + \"\\n\"\n        + \"11. If, as a consequence of a court judgment or allegation of patent infringement or \"\n        + \"for any other reason (not limited to patent issues), conditions are imposed on you \"\n        + \"(whether by court order, agreement or otherwise) that contradict the conditions of \"\n        + \"this License, they do not excuse you from the conditions of this License. If you \"\n        + \"cannot distribute so as to satisfy simultaneously your obligations under this License \"\n        + \"and any other pertinent obligations, then as a consequence you may not distribute the \"\n        + \"Library at all. For example, if a patent license would not permit royalty-free \"\n        + \"redistribution of the Library by all those who receive copies directly or indirectly \"\n        + \"through you, then the only way you could satisfy both it and this License would be to \"\n        + \"refrain entirely from distribution of the Library.\\n\"\n        + \"\\n\"\n        + \"If any portion of this section is held invalid or unenforceable under any particular \"\n        + \"circumstance, the balance of the section is intended to apply, and the section as a \"\n        + \"whole is intended to apply in other circumstances.\\n\"\n        + \"\\n\"\n        + \"It is not the purpose of this section to induce you to infringe any patents or other \"\n        + \"property right claims or to contest validity of any such claims; this section has the \"\n        + \"sole purpose of protecting the integrity of the free software distribution system \"\n        + \"which is implemented by public license practices. Many people have made generous \"\n        + \"contributions to the wide range of software distributed through that system in \"\n        + \"reliance on consistent application of that system; it is up to the author/donor to \"\n        + \"decide if he or she is willing to distribute software through any other system and a \"\n        + \"licensee cannot impose that choice.\\n\"\n        + \"\\n\"\n        + \"This section is intended to make thoroughly clear what is believed to be a consequence \"\n        + \"of the rest of this License.\\n\"\n        + \"\\n\"\n        + \"12. If the distribution and/or use of the Library is restricted in certain countries \"\n        + \"either by patents or by copyrighted interfaces, the original copyright holder who \"\n        + \"places the Library under this License may add an explicit geographical distribution \"\n        + \"limitation excluding those countries, so that distribution is permitted only in or \"\n        + \"among countries not thus excluded. In such case, this License incorporates the \"\n        + \"limitation as if written in the body of this License.\\n\"\n        + \"\\n\"\n        + \"13. The Free Software Foundation may publish revised and/or new versions of the Lesser \"\n        + \"General Public License from time to time. Such new versions will be similar in spirit \"\n        + \"to the present version, but may differ in detail to address new problems or concerns.\\n\"\n        + \"\\n\"\n        + \"Each version is given a distinguishing version number. If the Library specifies a \"\n        + \"version number of this License which applies to it and \\\"any later version\\\", you have \"\n        + \"the option of following the terms and conditions either of that version or of any \"\n        + \"later version published by the Free Software Foundation. If the Library does not \"\n        + \"specify a license version number, you may choose any version ever published by the \"\n        + \"Free Software Foundation.\\n\"\n        + \"\\n\"\n        + \"14. If you wish to incorporate parts of the Library into other free programs whose \"\n        + \"distribution conditions are incompatible with these, write to the author to ask for \"\n        + \"permission. For software which is copyrighted by the Free Software Foundation, write \"\n        + \"to the Free Software Foundation; we sometimes make exceptions for this. Our decision \"\n        + \"will be guided by the two goals of preserving the free status of all derivatives of \"\n        + \"our free software and of promoting the sharing and reuse of software generally.\\n\"\n        + \"\\n\"\n        + \"NO WARRANTY\\n\"\n        + \"\\n\"\n        + \"15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE \"\n        + \"LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN \"\n        + \"WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY \\\"AS IS\\\" \"\n        + \"WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED \"\n        + \"TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. \"\n        + \"THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD \"\n        + \"THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR \"\n        + \"CORRECTION.\\n\"\n        + \"\\n\"\n        + \"16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY \"\n        + \"COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS \"\n        + \"PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, \"\n        + \"INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE \"\n        + \"LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE \"\n        + \"OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE \"\n        + \"WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE \"\n        + \"POSSIBILITY OF SUCH DAMAGES.\\n\"\n        + \"\\n\"\n        + \"END OF TERMS AND CONDITIONS\\n\"\n        + \"\\n\"\n        + \"\\n\"\n        + \"How to Apply These Terms to Your New Libraries\\n\"\n        + \"\\n\"\n        + \"If you develop a new library, and you want it to be of the greatest possible use to \"\n        + \"the public, we recommend making it free software that everyone can redistribute and \"\n        + \"change. You can do so by permitting redistribution under these terms (or, \"\n        + \"alternatively, under the terms of the ordinary General Public License).\\n\"\n        + \"\\n\"\n        + \"To apply these terms, attach the following notices to the library.  It is safest to \"\n        + \"attach them to the start of each source file to most effectively convey the exclusion \"\n        + \"of warranty; and each file should have at least the \\\"copyright\\\" line and a pointer \"\n        + \"to where the full notice is found.\\n\"\n        + \"\\n\"\n        + \"<one line to give the library's name and a brief idea of what it does.>\\n\"\n        + \"Copyright (C) <year>  <name of author>\\n\"\n        + \"\\n\"\n        + \"This library is free software; you can redistribute it and/or modify it under the \"\n        + \"terms of the GNU Lesser General Public License as published by the Free Software \"\n        + \"Foundation; either version 2.1 of the License, or (at your option) any later version.\\n\"\n        + \"\\n\"\n        + \"This library is distributed in the hope that it will be useful, but WITHOUT ANY \"\n        + \"WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A \"\n        + \"PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\\n\"\n        + \"\\n\"\n        + \"You should have received a copy of the GNU Lesser General Public License along with \"\n        + \"this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, \"\n        + \"Suite 330, Boston, MA  02111-1307  USA\\n\"\n        + \"\\n\"\n        + \"Also add information on how to contact you by electronic and paper mail.\\n\"\n        + \"\\n\"\n        + \"You should also get your employer (if you work as a programmer) or your school, if \"\n        + \"any, to sign a \\\"copyright disclaimer\\\" for the library, if necessary.  Here is a \"\n        + \"sample; alter the names:\\n\"\n        + \"\\n\"\n        + \"Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a \"\n        + \"library for tweaking knobs) written by James Random Hacker.\\n\"\n        + \"\\n\"\n        + \"<signature of Ty Coon>, 1 April 1990\\n\"\n        + \"Ty Coon, President of Vice\\n\"\n        + \"\\n\"\n        + \"That's all there is to it!\\n\";",
        "begin_line": 357,
        "end_line": 788,
        "comment": " The GNU Lesser General Public Licence. "
    },
    {
        "class_name": "org.jfree.chart.ui.Licences",
        "src_path": "source/org/jfree/chart/ui/Licences.java",
        "signature": "org.jfree.chart.ui.Licences.singleton",
        "snippet": "    private static Licences singleton;",
        "begin_line": 791,
        "end_line": 791,
        "comment": " The singleton instance of this class. "
    },
    {
        "class_name": "org.jfree.chart.resources.JFreeChartResources",
        "src_path": "source/org/jfree/chart/resources/JFreeChartResources.java",
        "signature": "org.jfree.chart.resources.JFreeChartResources.CONTENTS",
        "snippet": "    private static final Object[][] CONTENTS = {\n        {\"project.name\",      \"JFreeChart\"},\n        {\"project.version\",   \"1.2.0-pre\"},\n        {\"project.info\",      \"http://www.jfree.org/jfreechart/index.html\"},\n        {\"project.copyright\", \n         \"(C)opyright 2000-2007, by Object Refinery Limited and Contributors\"}\n    };",
        "begin_line": 56,
        "end_line": 62,
        "comment": " The resources to be localised. "
    },
    {
        "class_name": "org.jfree.data.category.DefaultCategoryDataset",
        "src_path": "source/org/jfree/data/category/DefaultCategoryDataset.java",
        "signature": "org.jfree.data.category.DefaultCategoryDataset.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8168173757291644622L;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.category.DefaultCategoryDataset",
        "src_path": "source/org/jfree/data/category/DefaultCategoryDataset.java",
        "signature": "org.jfree.data.category.DefaultCategoryDataset.data",
        "snippet": "    private DefaultKeyedValues2D data;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " A storage structure for the data. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -6675162505277817221L;",
        "begin_line": 93,
        "end_line": 93,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.DEFAULT_POSITION",
        "snippet": "    public static final RectangleEdge DEFAULT_POSITION = RectangleEdge.TOP;",
        "begin_line": 96,
        "end_line": 96,
        "comment": " The default title position. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.DEFAULT_HORIZONTAL_ALIGNMENT",
        "snippet": "    public static final HorizontalAlignment \n            DEFAULT_HORIZONTAL_ALIGNMENT = HorizontalAlignment.CENTER;",
        "begin_line": 99,
        "end_line": 100,
        "comment": " The default horizontal alignment. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.DEFAULT_VERTICAL_ALIGNMENT",
        "snippet": "    public static final VerticalAlignment \n            DEFAULT_VERTICAL_ALIGNMENT = VerticalAlignment.CENTER;",
        "begin_line": 103,
        "end_line": 104,
        "comment": " The default vertical alignment. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.DEFAULT_PADDING",
        "snippet": "    public static final RectangleInsets DEFAULT_PADDING = new RectangleInsets(\n            1, 1, 1, 1);",
        "begin_line": 107,
        "end_line": 108,
        "comment": " Default title padding. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.position",
        "snippet": "    private RectangleEdge position;",
        "begin_line": 111,
        "end_line": 111,
        "comment": " The title position. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.horizontalAlignment",
        "snippet": "    private HorizontalAlignment horizontalAlignment;",
        "begin_line": 114,
        "end_line": 114,
        "comment": " The horizontal alignment of the title content. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.verticalAlignment",
        "snippet": "    private VerticalAlignment verticalAlignment;",
        "begin_line": 117,
        "end_line": 117,
        "comment": " The vertical alignment of the title content. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 120,
        "end_line": 120,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.title.Title",
        "src_path": "source/org/jfree/chart/title/Title.java",
        "signature": "org.jfree.chart.title.Title.notify",
        "snippet": "    private boolean notify;",
        "begin_line": 125,
        "end_line": 125,
        "comment": " \r\n     * A flag that can be used to temporarily disable the listener mechanism. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PieLabelLinkStyle",
        "src_path": "source/org/jfree/chart/plot/PieLabelLinkStyle.java",
        "signature": "org.jfree.chart.plot.PieLabelLinkStyle.STANDARD",
        "snippet": "    public static final PieLabelLinkStyle STANDARD\n            = new PieLabelLinkStyle(\"PieLabelLinkStyle.STANDARD\");",
        "begin_line": 55,
        "end_line": 56,
        "comment": " STANDARD. "
    },
    {
        "class_name": "org.jfree.chart.plot.PieLabelLinkStyle",
        "src_path": "source/org/jfree/chart/plot/PieLabelLinkStyle.java",
        "signature": "org.jfree.chart.plot.PieLabelLinkStyle.QUAD_CURVE",
        "snippet": "    public static final PieLabelLinkStyle QUAD_CURVE\n            = new PieLabelLinkStyle(\"PieLabelLinkStyle.QUAD_CURVE\");",
        "begin_line": 59,
        "end_line": 60,
        "comment": " QUAD_CURVE. "
    },
    {
        "class_name": "org.jfree.chart.plot.PieLabelLinkStyle",
        "src_path": "source/org/jfree/chart/plot/PieLabelLinkStyle.java",
        "signature": "org.jfree.chart.plot.PieLabelLinkStyle.CUBIC_CURVE",
        "snippet": "    public static final PieLabelLinkStyle CUBIC_CURVE\n            = new PieLabelLinkStyle(\"PieLabelLinkStyle.CUBIC_CURVE\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " CUBIC_CURVE. "
    },
    {
        "class_name": "org.jfree.chart.plot.PieLabelLinkStyle",
        "src_path": "source/org/jfree/chart/plot/PieLabelLinkStyle.java",
        "signature": "org.jfree.chart.plot.PieLabelLinkStyle.name",
        "snippet": "    private String name;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 2644010518533854633L;",
        "begin_line": 105,
        "end_line": 105,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_FONT",
        "snippet": "    public static final Font DEFAULT_ITEM_FONT \n        = new Font(\"SansSerif\", Font.PLAIN, 12);",
        "begin_line": 108,
        "end_line": 109,
        "comment": " The default item font. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.DEFAULT_ITEM_PAINT",
        "snippet": "    public static final Paint DEFAULT_ITEM_PAINT = Color.black;",
        "begin_line": 112,
        "end_line": 112,
        "comment": " The default item paint. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.sources",
        "snippet": "    private LegendItemSource[] sources;",
        "begin_line": 115,
        "end_line": 115,
        "comment": " The sources for legend items. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.backgroundPaint",
        "snippet": "    private transient Paint backgroundPaint;",
        "begin_line": 118,
        "end_line": 118,
        "comment": " The background paint (possibly <code>null</code>). "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.legendItemGraphicEdge",
        "snippet": "    private RectangleEdge legendItemGraphicEdge;",
        "begin_line": 121,
        "end_line": 121,
        "comment": " The edge for the legend item graphic relative to the text. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.legendItemGraphicAnchor",
        "snippet": "    private RectangleAnchor legendItemGraphicAnchor;",
        "begin_line": 124,
        "end_line": 124,
        "comment": " The anchor point for the legend item graphic. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.legendItemGraphicLocation",
        "snippet": "    private RectangleAnchor legendItemGraphicLocation;",
        "begin_line": 127,
        "end_line": 127,
        "comment": " The legend item graphic location. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.legendItemGraphicPadding",
        "snippet": "    private RectangleInsets legendItemGraphicPadding;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " The padding for the legend item graphic. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.itemFont",
        "snippet": "    private Font itemFont;",
        "begin_line": 133,
        "end_line": 133,
        "comment": " The item font. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.itemPaint",
        "snippet": "    private transient Paint itemPaint;",
        "begin_line": 136,
        "end_line": 136,
        "comment": " The item paint. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.itemLabelPadding",
        "snippet": "    private RectangleInsets itemLabelPadding;",
        "begin_line": 139,
        "end_line": 139,
        "comment": " The padding for the item labels. "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.items",
        "snippet": "    private BlockContainer items;",
        "begin_line": 144,
        "end_line": 144,
        "comment": "\r\n     * A container that holds and displays the legend items.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.hLayout",
        "snippet": "    private Arrangement hLayout;",
        "begin_line": 146,
        "end_line": 146,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.vLayout",
        "snippet": "    private Arrangement vLayout;",
        "begin_line": 148,
        "end_line": 148,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.title.LegendTitle",
        "src_path": "source/org/jfree/chart/title/LegendTitle.java",
        "signature": "org.jfree.chart.title.LegendTitle.wrapper",
        "snippet": "    private BlockContainer wrapper;",
        "begin_line": 154,
        "end_line": 154,
        "comment": " \r\n     * An optional container for wrapping the legend items (allows for adding\r\n     * a title or other text to the legend). \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.AbstractPieLabelDistributor",
        "src_path": "source/org/jfree/chart/plot/AbstractPieLabelDistributor.java",
        "signature": "org.jfree.chart.plot.AbstractPieLabelDistributor.labels",
        "snippet": "    protected List labels;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " The label records. "
    },
    {
        "class_name": "org.jfree.chart.labels.AbstractPieItemLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java",
        "signature": "org.jfree.chart.labels.AbstractPieItemLabelGenerator.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7347703325267846275L;",
        "begin_line": 59,
        "end_line": 59,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.labels.AbstractPieItemLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java",
        "signature": "org.jfree.chart.labels.AbstractPieItemLabelGenerator.labelFormat",
        "snippet": "    private String labelFormat;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The label format string. "
    },
    {
        "class_name": "org.jfree.chart.labels.AbstractPieItemLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java",
        "signature": "org.jfree.chart.labels.AbstractPieItemLabelGenerator.numberFormat",
        "snippet": "    private NumberFormat numberFormat;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " A number formatter for the value. "
    },
    {
        "class_name": "org.jfree.chart.labels.AbstractPieItemLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/AbstractPieItemLabelGenerator.java",
        "signature": "org.jfree.chart.labels.AbstractPieItemLabelGenerator.percentFormat",
        "snippet": "    private NumberFormat percentFormat;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " A number formatter for the percentage. "
    },
    {
        "class_name": "org.jfree.chart.plot.PieLabelDistributor",
        "src_path": "source/org/jfree/chart/plot/PieLabelDistributor.java",
        "signature": "org.jfree.chart.plot.PieLabelDistributor.minGap",
        "snippet": "    private double minGap = 4.0;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " The minimum gap. "
    },
    {
        "class_name": "org.jfree.chart.block.BlockBorder",
        "src_path": "source/org/jfree/chart/block/BlockBorder.java",
        "signature": "org.jfree.chart.block.BlockBorder.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4961579220410228283L;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.block.BlockBorder",
        "src_path": "source/org/jfree/chart/block/BlockBorder.java",
        "signature": "org.jfree.chart.block.BlockBorder.NONE",
        "snippet": "    public static final BlockBorder NONE = new BlockBorder(\n            RectangleInsets.ZERO_INSETS, Color.white);",
        "begin_line": 71,
        "end_line": 72,
        "comment": " An empty border. "
    },
    {
        "class_name": "org.jfree.chart.block.BlockBorder",
        "src_path": "source/org/jfree/chart/block/BlockBorder.java",
        "signature": "org.jfree.chart.block.BlockBorder.insets",
        "snippet": "    private RectangleInsets insets;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " The space reserved for the border. "
    },
    {
        "class_name": "org.jfree.chart.block.BlockBorder",
        "src_path": "source/org/jfree/chart/block/BlockBorder.java",
        "signature": "org.jfree.chart.block.BlockBorder.paint",
        "snippet": "    private transient Paint paint;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The border color. "
    },
    {
        "class_name": "org.jfree.chart.plot.MultiplePiePlot",
        "src_path": "source/org/jfree/chart/plot/MultiplePiePlot.java",
        "signature": "org.jfree.chart.plot.MultiplePiePlot.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -355377800470807389L;",
        "begin_line": 99,
        "end_line": 99,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.MultiplePiePlot",
        "src_path": "source/org/jfree/chart/plot/MultiplePiePlot.java",
        "signature": "org.jfree.chart.plot.MultiplePiePlot.pieChart",
        "snippet": "    private JFreeChart pieChart;",
        "begin_line": 102,
        "end_line": 102,
        "comment": " The chart object that draws the individual pie charts. "
    },
    {
        "class_name": "org.jfree.chart.plot.MultiplePiePlot",
        "src_path": "source/org/jfree/chart/plot/MultiplePiePlot.java",
        "signature": "org.jfree.chart.plot.MultiplePiePlot.dataset",
        "snippet": "    private CategoryDataset dataset;",
        "begin_line": 105,
        "end_line": 105,
        "comment": " The dataset. "
    },
    {
        "class_name": "org.jfree.chart.plot.MultiplePiePlot",
        "src_path": "source/org/jfree/chart/plot/MultiplePiePlot.java",
        "signature": "org.jfree.chart.plot.MultiplePiePlot.dataExtractOrder",
        "snippet": "    private TableOrder dataExtractOrder;",
        "begin_line": 108,
        "end_line": 108,
        "comment": " The data extract order (by row or by column). "
    },
    {
        "class_name": "org.jfree.chart.plot.MultiplePiePlot",
        "src_path": "source/org/jfree/chart/plot/MultiplePiePlot.java",
        "signature": "org.jfree.chart.plot.MultiplePiePlot.limit",
        "snippet": "    private double limit = 0.0;",
        "begin_line": 111,
        "end_line": 111,
        "comment": " The pie section limit percentage. "
    },
    {
        "class_name": "org.jfree.chart.plot.MultiplePiePlot",
        "src_path": "source/org/jfree/chart/plot/MultiplePiePlot.java",
        "signature": "org.jfree.chart.plot.MultiplePiePlot.aggregatedItemsKey",
        "snippet": "    private Comparable aggregatedItemsKey;",
        "begin_line": 117,
        "end_line": 117,
        "comment": "\r\n     * The key for the aggregated items.\r\n     * @since 1.0.2\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.MultiplePiePlot",
        "src_path": "source/org/jfree/chart/plot/MultiplePiePlot.java",
        "signature": "org.jfree.chart.plot.MultiplePiePlot.aggregatedItemsPaint",
        "snippet": "    private transient Paint aggregatedItemsPaint;",
        "begin_line": 123,
        "end_line": 123,
        "comment": "\r\n     * The paint for the aggregated items.\r\n     * @since 1.0.2\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.MultiplePiePlot",
        "src_path": "source/org/jfree/chart/plot/MultiplePiePlot.java",
        "signature": "org.jfree.chart.plot.MultiplePiePlot.sectionPaints",
        "snippet": "    private transient Map sectionPaints;",
        "begin_line": 129,
        "end_line": 129,
        "comment": "\r\n     * The colors to use for each section.\r\n     * @since 1.0.2\r\n     "
    },
    {
        "class_name": "org.jfree.data.general.DatasetGroup",
        "src_path": "source/org/jfree/data/general/DatasetGroup.java",
        "signature": "org.jfree.data.general.DatasetGroup.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3640642179674185688L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.general.DatasetGroup",
        "src_path": "source/org/jfree/data/general/DatasetGroup.java",
        "signature": "org.jfree.data.general.DatasetGroup.id",
        "snippet": "    private String id;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " The group id. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2457494205644416327L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.CENTER",
        "snippet": "    public static final RectangleAnchor CENTER \n        = new RectangleAnchor(\"RectangleAnchor.CENTER\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " Center. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.TOP",
        "snippet": "    public static final RectangleAnchor TOP \n        = new RectangleAnchor(\"RectangleAnchor.TOP\");",
        "begin_line": 67,
        "end_line": 68,
        "comment": " Top. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.TOP_LEFT",
        "snippet": "    public static final RectangleAnchor TOP_LEFT \n        = new RectangleAnchor(\"RectangleAnchor.TOP_LEFT\");",
        "begin_line": 71,
        "end_line": 72,
        "comment": " Top-Left. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.TOP_RIGHT",
        "snippet": "    public static final RectangleAnchor TOP_RIGHT \n        = new RectangleAnchor(\"RectangleAnchor.TOP_RIGHT\");",
        "begin_line": 75,
        "end_line": 76,
        "comment": " Top-Right. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM",
        "snippet": "    public static final RectangleAnchor BOTTOM \n        = new RectangleAnchor(\"RectangleAnchor.BOTTOM\");",
        "begin_line": 79,
        "end_line": 80,
        "comment": " Bottom. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT",
        "snippet": "    public static final RectangleAnchor BOTTOM_LEFT \n        = new RectangleAnchor(\"RectangleAnchor.BOTTOM_LEFT\");",
        "begin_line": 83,
        "end_line": 84,
        "comment": " Bottom-Left. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT",
        "snippet": "    public static final RectangleAnchor BOTTOM_RIGHT \n        = new RectangleAnchor(\"RectangleAnchor.BOTTOM_RIGHT\");",
        "begin_line": 87,
        "end_line": 88,
        "comment": " Bottom-Right. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.LEFT",
        "snippet": "    public static final RectangleAnchor LEFT \n        = new RectangleAnchor(\"RectangleAnchor.LEFT\");",
        "begin_line": 91,
        "end_line": 92,
        "comment": " Left. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.RIGHT",
        "snippet": "    public static final RectangleAnchor RIGHT \n        = new RectangleAnchor(\"RectangleAnchor.RIGHT\");",
        "begin_line": 95,
        "end_line": 96,
        "comment": " Right. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.name",
        "snippet": "    private String name;",
        "begin_line": 99,
        "end_line": 99,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7789833772597351595L;",
        "begin_line": 59,
        "end_line": 59,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.DEFAULT_INITIAL_CAPACITY",
        "snippet": "    public static final int DEFAULT_INITIAL_CAPACITY = 8;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The default initial capacity of the list. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.objects",
        "snippet": "    private transient Object[] objects;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " Storage for the objects. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.size",
        "snippet": "    private int size = 0;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " The current list size. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.increment",
        "snippet": "    private int increment = DEFAULT_INITIAL_CAPACITY;",
        "begin_line": 71,
        "end_line": 71,
        "comment": " The default increment. "
    },
    {
        "class_name": "org.jfree.data.general.AbstractDataset",
        "src_path": "source/org/jfree/data/general/AbstractDataset.java",
        "signature": "org.jfree.data.general.AbstractDataset.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1918768939869230744L;",
        "begin_line": 82,
        "end_line": 82,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.general.AbstractDataset",
        "src_path": "source/org/jfree/data/general/AbstractDataset.java",
        "signature": "org.jfree.data.general.AbstractDataset.group",
        "snippet": "    private DatasetGroup group;",
        "begin_line": 85,
        "end_line": 85,
        "comment": " The group that the dataset belongs to. "
    },
    {
        "class_name": "org.jfree.data.general.AbstractDataset",
        "src_path": "source/org/jfree/data/general/AbstractDataset.java",
        "signature": "org.jfree.data.general.AbstractDataset.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 88,
        "end_line": 88,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1902273207559319996L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.ZERO_INSETS",
        "snippet": "    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(\n            UnitType.ABSOLUTE, 0.0, 0.0, 0.0, 0.0);",
        "begin_line": 65,
        "end_line": 66,
        "comment": "\n     * A useful constant representing zero insets.\n     "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.unitType",
        "snippet": "    private UnitType unitType;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Absolute or relative units. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.top",
        "snippet": "    private double top;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The top insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.left",
        "snippet": "    private double left;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " The left insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.bottom",
        "snippet": "    private double bottom;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The bottom insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.right",
        "snippet": "    private double right;",
        "begin_line": 81,
        "end_line": 81,
        "comment": " The right insets. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 6531925392288519884L;    ",
        "begin_line": 53,
        "end_line": 53,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.ABSOLUTE",
        "snippet": "    public static final UnitType ABSOLUTE = new UnitType(\"UnitType.ABSOLUTE\");",
        "begin_line": 56,
        "end_line": 56,
        "comment": " Absolute. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.RELATIVE",
        "snippet": "    public static final UnitType RELATIVE = new UnitType(\"UnitType.RELATIVE\");",
        "begin_line": 59,
        "end_line": 59,
        "comment": " Relative. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.name",
        "snippet": "    private String name;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.block.ColumnArrangement",
        "src_path": "source/org/jfree/chart/block/ColumnArrangement.java",
        "signature": "org.jfree.chart.block.ColumnArrangement.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -5315388482898581555L;",
        "begin_line": 61,
        "end_line": 61,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.block.ColumnArrangement",
        "src_path": "source/org/jfree/chart/block/ColumnArrangement.java",
        "signature": "org.jfree.chart.block.ColumnArrangement.horizontalAlignment",
        "snippet": "    private HorizontalAlignment horizontalAlignment;",
        "begin_line": 64,
        "end_line": 64,
        "comment": " The horizontal alignment of blocks. "
    },
    {
        "class_name": "org.jfree.chart.block.ColumnArrangement",
        "src_path": "source/org/jfree/chart/block/ColumnArrangement.java",
        "signature": "org.jfree.chart.block.ColumnArrangement.verticalAlignment",
        "snippet": "    private VerticalAlignment verticalAlignment;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The vertical alignment of blocks within each row. "
    },
    {
        "class_name": "org.jfree.chart.block.ColumnArrangement",
        "src_path": "source/org/jfree/chart/block/ColumnArrangement.java",
        "signature": "org.jfree.chart.block.ColumnArrangement.horizontalGap",
        "snippet": "    private double horizontalGap;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " The horizontal gap between columns. "
    },
    {
        "class_name": "org.jfree.chart.block.ColumnArrangement",
        "src_path": "source/org/jfree/chart/block/ColumnArrangement.java",
        "signature": "org.jfree.chart.block.ColumnArrangement.verticalGap",
        "snippet": "    private double verticalGap;",
        "begin_line": 73,
        "end_line": 73,
        "comment": " The vertical gap between items in a column. "
    },
    {
        "class_name": "org.jfree.chart.ui.ProjectInfo",
        "src_path": "source/org/jfree/chart/ui/ProjectInfo.java",
        "signature": "org.jfree.chart.ui.ProjectInfo.logo",
        "snippet": "    private Image logo;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " An optional project logo. "
    },
    {
        "class_name": "org.jfree.chart.ui.ProjectInfo",
        "src_path": "source/org/jfree/chart/ui/ProjectInfo.java",
        "signature": "org.jfree.chart.ui.ProjectInfo.licenceText",
        "snippet": "    private String licenceText;",
        "begin_line": 59,
        "end_line": 59,
        "comment": " The licence text. "
    },
    {
        "class_name": "org.jfree.chart.ui.ProjectInfo",
        "src_path": "source/org/jfree/chart/ui/ProjectInfo.java",
        "signature": "org.jfree.chart.ui.ProjectInfo.contributors",
        "snippet": "    private List contributors;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " A list of contributors. "
    },
    {
        "class_name": "org.jfree.chart.ui.Library",
        "src_path": "source/org/jfree/chart/ui/Library.java",
        "signature": "org.jfree.chart.ui.Library.name",
        "snippet": "    private String name;",
        "begin_line": 52,
        "end_line": 52,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.ui.Library",
        "src_path": "source/org/jfree/chart/ui/Library.java",
        "signature": "org.jfree.chart.ui.Library.version",
        "snippet": "    private String version;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " The version. "
    },
    {
        "class_name": "org.jfree.chart.ui.Library",
        "src_path": "source/org/jfree/chart/ui/Library.java",
        "signature": "org.jfree.chart.ui.Library.licenceName",
        "snippet": "    private String licenceName;",
        "begin_line": 58,
        "end_line": 58,
        "comment": " The licenceName. "
    },
    {
        "class_name": "org.jfree.chart.ui.Library",
        "src_path": "source/org/jfree/chart/ui/Library.java",
        "signature": "org.jfree.chart.ui.Library.info",
        "snippet": "    private String info;",
        "begin_line": 61,
        "end_line": 61,
        "comment": " The version. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleEdge",
        "src_path": "source/org/jfree/chart/util/RectangleEdge.java",
        "signature": "org.jfree.chart.util.RectangleEdge.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -7400988293691093548L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleEdge",
        "src_path": "source/org/jfree/chart/util/RectangleEdge.java",
        "signature": "org.jfree.chart.util.RectangleEdge.TOP",
        "snippet": "    public static final RectangleEdge TOP = new RectangleEdge(\n            \"RectangleEdge.TOP\");",
        "begin_line": 57,
        "end_line": 58,
        "comment": " Top. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleEdge",
        "src_path": "source/org/jfree/chart/util/RectangleEdge.java",
        "signature": "org.jfree.chart.util.RectangleEdge.BOTTOM",
        "snippet": "    public static final RectangleEdge BOTTOM = new RectangleEdge(\n            \"RectangleEdge.BOTTOM\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " Bottom. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleEdge",
        "src_path": "source/org/jfree/chart/util/RectangleEdge.java",
        "signature": "org.jfree.chart.util.RectangleEdge.LEFT",
        "snippet": "    public static final RectangleEdge LEFT = new RectangleEdge(\n            \"RectangleEdge.LEFT\");",
        "begin_line": 65,
        "end_line": 66,
        "comment": " Left. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleEdge",
        "src_path": "source/org/jfree/chart/util/RectangleEdge.java",
        "signature": "org.jfree.chart.util.RectangleEdge.RIGHT",
        "snippet": "    public static final RectangleEdge RIGHT = new RectangleEdge(\n            \"RectangleEdge.RIGHT\");",
        "begin_line": 69,
        "end_line": 70,
        "comment": " Right. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleEdge",
        "src_path": "source/org/jfree/chart/util/RectangleEdge.java",
        "signature": "org.jfree.chart.util.RectangleEdge.name",
        "snippet": "    private String name;",
        "begin_line": 73,
        "end_line": 73,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.VerticalAlignment",
        "src_path": "source/org/jfree/chart/util/VerticalAlignment.java",
        "signature": "org.jfree.chart.util.VerticalAlignment.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7272397034325429853L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.VerticalAlignment",
        "src_path": "source/org/jfree/chart/util/VerticalAlignment.java",
        "signature": "org.jfree.chart.util.VerticalAlignment.TOP",
        "snippet": "    public static final VerticalAlignment TOP \n            = new VerticalAlignment(\"VerticalAlignment.TOP\");",
        "begin_line": 57,
        "end_line": 58,
        "comment": " Top alignment. "
    },
    {
        "class_name": "org.jfree.chart.util.VerticalAlignment",
        "src_path": "source/org/jfree/chart/util/VerticalAlignment.java",
        "signature": "org.jfree.chart.util.VerticalAlignment.BOTTOM",
        "snippet": "    public static final VerticalAlignment BOTTOM \n            = new VerticalAlignment(\"VerticalAlignment.BOTTOM\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " Bottom alignment. "
    },
    {
        "class_name": "org.jfree.chart.util.VerticalAlignment",
        "src_path": "source/org/jfree/chart/util/VerticalAlignment.java",
        "signature": "org.jfree.chart.util.VerticalAlignment.CENTER",
        "snippet": "    public static final VerticalAlignment CENTER \n            = new VerticalAlignment(\"VerticalAlignment.CENTER\");",
        "begin_line": 65,
        "end_line": 66,
        "comment": " Center alignment. "
    },
    {
        "class_name": "org.jfree.chart.util.VerticalAlignment",
        "src_path": "source/org/jfree/chart/util/VerticalAlignment.java",
        "signature": "org.jfree.chart.util.VerticalAlignment.name",
        "snippet": "    private String name;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3470703747817429120L;",
        "begin_line": 240,
        "end_line": 240,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.INFO",
        "snippet": "    public static final ProjectInfo INFO = new JFreeChartInfo();",
        "begin_line": 243,
        "end_line": 243,
        "comment": " Information about the project. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.DEFAULT_TITLE_FONT",
        "snippet": "    public static final Font DEFAULT_TITLE_FONT \n            = new Font(\"SansSerif\", Font.BOLD, 18);",
        "begin_line": 246,
        "end_line": 247,
        "comment": " The default font for titles. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.DEFAULT_BACKGROUND_PAINT",
        "snippet": "    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.WHITE;",
        "begin_line": 250,
        "end_line": 250,
        "comment": " The default background color. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.DEFAULT_BACKGROUND_IMAGE",
        "snippet": "    public static final Image DEFAULT_BACKGROUND_IMAGE = null;",
        "begin_line": 253,
        "end_line": 253,
        "comment": " The default background image. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALIGNMENT",
        "snippet": "    public static final int DEFAULT_BACKGROUND_IMAGE_ALIGNMENT = Align.FIT;",
        "begin_line": 256,
        "end_line": 256,
        "comment": " The default background image alignment. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.DEFAULT_BACKGROUND_IMAGE_ALPHA",
        "snippet": "    public static final float DEFAULT_BACKGROUND_IMAGE_ALPHA = 0.5f;",
        "begin_line": 259,
        "end_line": 259,
        "comment": " The default background image alpha. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.renderingHints",
        "snippet": "    private transient RenderingHints renderingHints;",
        "begin_line": 265,
        "end_line": 265,
        "comment": " \r\n     * Rendering hints that will be used for chart drawing.  This should never\r\n     * be <code>null</code>. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.borderVisible",
        "snippet": "    private boolean borderVisible;",
        "begin_line": 268,
        "end_line": 268,
        "comment": " A flag that controls whether or not the chart border is drawn. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.borderStroke",
        "snippet": "    private transient Stroke borderStroke;",
        "begin_line": 271,
        "end_line": 271,
        "comment": " The stroke used to draw the chart border (if visible). "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.borderPaint",
        "snippet": "    private transient Paint borderPaint;",
        "begin_line": 274,
        "end_line": 274,
        "comment": " The paint used to draw the chart border (if visible). "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.padding",
        "snippet": "    private RectangleInsets padding;",
        "begin_line": 277,
        "end_line": 277,
        "comment": " The padding between the chart border and the chart drawing area. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.title",
        "snippet": "    private TextTitle title;",
        "begin_line": 280,
        "end_line": 280,
        "comment": " The chart title (optional). "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.subtitles",
        "snippet": "    private List subtitles;",
        "begin_line": 286,
        "end_line": 286,
        "comment": " \r\n     * The chart subtitles (zero, one or many).  This field should never be\r\n     * <code>null</code>.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.plot",
        "snippet": "    private Plot plot;",
        "begin_line": 289,
        "end_line": 289,
        "comment": " Draws the visual representation of the data. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.backgroundPaint",
        "snippet": "    private transient Paint backgroundPaint;",
        "begin_line": 292,
        "end_line": 292,
        "comment": " Paint used to draw the background of the chart. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.backgroundImage",
        "snippet": "    private transient Image backgroundImage;  // todo: not serialized yet",
        "begin_line": 295,
        "end_line": 295,
        "comment": " todo: not serialized yet"
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.backgroundImageAlignment",
        "snippet": "    private int backgroundImageAlignment = Align.FIT;",
        "begin_line": 298,
        "end_line": 298,
        "comment": " The alignment for the background image. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.backgroundImageAlpha",
        "snippet": "    private float backgroundImageAlpha = 0.5f;",
        "begin_line": 301,
        "end_line": 301,
        "comment": " The alpha transparency for the background image. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.changeListeners",
        "snippet": "    private transient EventListenerList changeListeners;",
        "begin_line": 304,
        "end_line": 304,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.progressListeners",
        "snippet": "    private transient EventListenerList progressListeners;",
        "begin_line": 307,
        "end_line": 307,
        "comment": " Storage for registered progress listeners. "
    },
    {
        "class_name": "org.jfree.chart.JFreeChart",
        "src_path": "source/org/jfree/chart/JFreeChart.java",
        "signature": "org.jfree.chart.JFreeChart.notify",
        "snippet": "    private boolean notify;",
        "begin_line": 313,
        "end_line": 313,
        "comment": " \r\n     * A flag that can be used to enable/disable notification of chart change \r\n     * events. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.event.TitleChangeEvent",
        "src_path": "source/org/jfree/chart/event/TitleChangeEvent.java",
        "signature": "org.jfree.chart.event.TitleChangeEvent.title",
        "snippet": "    private Title title;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " The chart title that generated the event. "
    },
    {
        "class_name": "org.jfree.chart.ui.Contributor",
        "src_path": "source/org/jfree/chart/ui/Contributor.java",
        "signature": "org.jfree.chart.ui.Contributor.name",
        "snippet": "    private String name;",
        "begin_line": 52,
        "end_line": 52,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.ui.Contributor",
        "src_path": "source/org/jfree/chart/ui/Contributor.java",
        "signature": "org.jfree.chart.ui.Contributor.email",
        "snippet": "    private String email;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " The e-mail address. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8372008692127477443L;",
        "begin_line": 123,
        "end_line": 123,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.DEFAULT_FONT",
        "snippet": "    public static final Font DEFAULT_FONT = new Font(\"SansSerif\", Font.BOLD, \n            12);",
        "begin_line": 126,
        "end_line": 127,
        "comment": " The default font. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.DEFAULT_TEXT_PAINT",
        "snippet": "    public static final Paint DEFAULT_TEXT_PAINT = Color.black;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " The default text color. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.text",
        "snippet": "    private String text;",
        "begin_line": 133,
        "end_line": 133,
        "comment": " The title text. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.font",
        "snippet": "    private Font font;",
        "begin_line": 136,
        "end_line": 136,
        "comment": " The font used to display the title. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.textAlignment",
        "snippet": "    private HorizontalAlignment textAlignment;",
        "begin_line": 139,
        "end_line": 139,
        "comment": " The text alignment. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.paint",
        "snippet": "    private transient Paint paint;",
        "begin_line": 142,
        "end_line": 142,
        "comment": " The paint used to display the title text. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.backgroundPaint",
        "snippet": "    private transient Paint backgroundPaint;",
        "begin_line": 145,
        "end_line": 145,
        "comment": " The background paint. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.toolTipText",
        "snippet": "    private String toolTipText;",
        "begin_line": 148,
        "end_line": 148,
        "comment": " The tool tip text (can be <code>null</code>). "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.urlText",
        "snippet": "    private String urlText;",
        "begin_line": 151,
        "end_line": 151,
        "comment": " The URL text (can be <code>null</code>). "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.content",
        "snippet": "    private TextBlock content;",
        "begin_line": 154,
        "end_line": 154,
        "comment": " The content. "
    },
    {
        "class_name": "org.jfree.chart.title.TextTitle",
        "src_path": "source/org/jfree/chart/title/TextTitle.java",
        "signature": "org.jfree.chart.title.TextTitle.expandToFitSpace",
        "snippet": "    private boolean expandToFitSpace = false;",
        "begin_line": 160,
        "end_line": 160,
        "comment": " \r\n     * A flag that controls whether the title expands to fit the available\r\n     * space..\r\n     "
    },
    {
        "class_name": "org.jfree.chart.util.HorizontalAlignment",
        "src_path": "source/org/jfree/chart/util/HorizontalAlignment.java",
        "signature": "org.jfree.chart.util.HorizontalAlignment.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8249740987565309567L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.HorizontalAlignment",
        "src_path": "source/org/jfree/chart/util/HorizontalAlignment.java",
        "signature": "org.jfree.chart.util.HorizontalAlignment.LEFT",
        "snippet": "    public static final HorizontalAlignment LEFT \n            = new HorizontalAlignment(\"HorizontalAlignment.LEFT\");",
        "begin_line": 57,
        "end_line": 58,
        "comment": " Left alignment. "
    },
    {
        "class_name": "org.jfree.chart.util.HorizontalAlignment",
        "src_path": "source/org/jfree/chart/util/HorizontalAlignment.java",
        "signature": "org.jfree.chart.util.HorizontalAlignment.RIGHT",
        "snippet": "    public static final HorizontalAlignment RIGHT \n            = new HorizontalAlignment(\"HorizontalAlignment.RIGHT\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " Right alignment. "
    },
    {
        "class_name": "org.jfree.chart.util.HorizontalAlignment",
        "src_path": "source/org/jfree/chart/util/HorizontalAlignment.java",
        "signature": "org.jfree.chart.util.HorizontalAlignment.CENTER",
        "snippet": "    public static final HorizontalAlignment CENTER \n            = new HorizontalAlignment(\"HorizontalAlignment.CENTER\");",
        "begin_line": 65,
        "end_line": 66,
        "comment": " Center alignment. "
    },
    {
        "class_name": "org.jfree.chart.util.HorizontalAlignment",
        "src_path": "source/org/jfree/chart/util/HorizontalAlignment.java",
        "signature": "org.jfree.chart.util.HorizontalAlignment.name",
        "snippet": "    private String name;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.block.LineBorder",
        "src_path": "source/org/jfree/chart/block/LineBorder.java",
        "signature": "org.jfree.chart.block.LineBorder.paint",
        "snippet": "    private transient Paint paint;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " The line color. "
    },
    {
        "class_name": "org.jfree.chart.block.LineBorder",
        "src_path": "source/org/jfree/chart/block/LineBorder.java",
        "signature": "org.jfree.chart.block.LineBorder.stroke",
        "snippet": "    private transient Stroke stroke;",
        "begin_line": 73,
        "end_line": 73,
        "comment": " The line stroke. "
    },
    {
        "class_name": "org.jfree.chart.block.LineBorder",
        "src_path": "source/org/jfree/chart/block/LineBorder.java",
        "signature": "org.jfree.chart.block.LineBorder.insets",
        "snippet": "    private RectangleInsets insets;",
        "begin_line": 76,
        "end_line": 76,
        "comment": " The insets. "
    },
    {
        "class_name": "org.jfree.chart.block.AbstractBlock",
        "src_path": "source/org/jfree/chart/block/AbstractBlock.java",
        "signature": "org.jfree.chart.block.AbstractBlock.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7689852412141274563L;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.block.AbstractBlock",
        "src_path": "source/org/jfree/chart/block/AbstractBlock.java",
        "signature": "org.jfree.chart.block.AbstractBlock.id",
        "snippet": "    private String id;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The id for the block. "
    },
    {
        "class_name": "org.jfree.chart.block.AbstractBlock",
        "src_path": "source/org/jfree/chart/block/AbstractBlock.java",
        "signature": "org.jfree.chart.block.AbstractBlock.margin",
        "snippet": "    private RectangleInsets margin;",
        "begin_line": 81,
        "end_line": 81,
        "comment": " The margin around the outside of the block. "
    },
    {
        "class_name": "org.jfree.chart.block.AbstractBlock",
        "src_path": "source/org/jfree/chart/block/AbstractBlock.java",
        "signature": "org.jfree.chart.block.AbstractBlock.frame",
        "snippet": "    private BlockFrame frame;",
        "begin_line": 84,
        "end_line": 84,
        "comment": " The frame (or border) for the block. "
    },
    {
        "class_name": "org.jfree.chart.block.AbstractBlock",
        "src_path": "source/org/jfree/chart/block/AbstractBlock.java",
        "signature": "org.jfree.chart.block.AbstractBlock.padding",
        "snippet": "    private RectangleInsets padding;",
        "begin_line": 87,
        "end_line": 87,
        "comment": " The padding between the block content and the border. "
    },
    {
        "class_name": "org.jfree.chart.block.AbstractBlock",
        "src_path": "source/org/jfree/chart/block/AbstractBlock.java",
        "signature": "org.jfree.chart.block.AbstractBlock.width",
        "snippet": "    private double width;",
        "begin_line": 93,
        "end_line": 93,
        "comment": " \r\n     * The natural width of the block (may be overridden if there are \r\n     * constraints in sizing).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.block.AbstractBlock",
        "src_path": "source/org/jfree/chart/block/AbstractBlock.java",
        "signature": "org.jfree.chart.block.AbstractBlock.height",
        "snippet": "    private double height;",
        "begin_line": 99,
        "end_line": 99,
        "comment": " \r\n     * The natural height of the block (may be overridden if there are \r\n     * constraints in sizing).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.block.AbstractBlock",
        "src_path": "source/org/jfree/chart/block/AbstractBlock.java",
        "signature": "org.jfree.chart.block.AbstractBlock.bounds",
        "snippet": "    private transient Rectangle2D bounds;",
        "begin_line": 104,
        "end_line": 104,
        "comment": "\r\n     * The current bounds for the block (position of the block in Java2D space).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.util.Rotation",
        "src_path": "source/org/jfree/chart/util/Rotation.java",
        "signature": "org.jfree.chart.util.Rotation.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -4662815260201591676L;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.Rotation",
        "src_path": "source/org/jfree/chart/util/Rotation.java",
        "signature": "org.jfree.chart.util.Rotation.CLOCKWISE",
        "snippet": "    public static final Rotation CLOCKWISE \n        = new Rotation(\"Rotation.CLOCKWISE\", -1.0);",
        "begin_line": 59,
        "end_line": 60,
        "comment": " Clockwise. "
    },
    {
        "class_name": "org.jfree.chart.util.Rotation",
        "src_path": "source/org/jfree/chart/util/Rotation.java",
        "signature": "org.jfree.chart.util.Rotation.ANTICLOCKWISE",
        "snippet": "    public static final Rotation ANTICLOCKWISE \n        = new Rotation(\"Rotation.ANTICLOCKWISE\", 1.0);",
        "begin_line": 63,
        "end_line": 64,
        "comment": " The reverse order renders the primary dataset first. "
    },
    {
        "class_name": "org.jfree.chart.util.Rotation",
        "src_path": "source/org/jfree/chart/util/Rotation.java",
        "signature": "org.jfree.chart.util.Rotation.name",
        "snippet": "    private String name;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.Rotation",
        "src_path": "source/org/jfree/chart/util/Rotation.java",
        "signature": "org.jfree.chart.util.Rotation.factor",
        "snippet": "    private double factor;",
        "begin_line": 73,
        "end_line": 73,
        "comment": " \n     * The factor (-1.0 for <code>CLOCKWISE</code> and 1.0 for \n     * <code>ANTICLOCKWISE</code>). \n     "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEvent",
        "src_path": "source/org/jfree/chart/event/ChartChangeEvent.java",
        "signature": "org.jfree.chart.event.ChartChangeEvent.type",
        "snippet": "    private ChartChangeEventType type;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " The type of event. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEvent",
        "src_path": "source/org/jfree/chart/event/ChartChangeEvent.java",
        "signature": "org.jfree.chart.event.ChartChangeEvent.chart",
        "snippet": "    private JFreeChart chart;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " The chart that generated the event. "
    },
    {
        "class_name": "org.jfree.chart.PaintMap",
        "src_path": "source/org/jfree/chart/PaintMap.java",
        "signature": "org.jfree.chart.PaintMap.store",
        "snippet": "    private transient Map store;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " Storage for the keys and values. "
    },
    {
        "class_name": "org.jfree.data.DefaultKeyedValues2D",
        "src_path": "source/org/jfree/data/DefaultKeyedValues2D.java",
        "signature": "org.jfree.data.DefaultKeyedValues2D.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -5514169970951994748L;",
        "begin_line": 77,
        "end_line": 77,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.DefaultKeyedValues2D",
        "src_path": "source/org/jfree/data/DefaultKeyedValues2D.java",
        "signature": "org.jfree.data.DefaultKeyedValues2D.rowKeys",
        "snippet": "    private List rowKeys;",
        "begin_line": 80,
        "end_line": 80,
        "comment": " The row keys. "
    },
    {
        "class_name": "org.jfree.data.DefaultKeyedValues2D",
        "src_path": "source/org/jfree/data/DefaultKeyedValues2D.java",
        "signature": "org.jfree.data.DefaultKeyedValues2D.columnKeys",
        "snippet": "    private List columnKeys;",
        "begin_line": 83,
        "end_line": 83,
        "comment": " The column keys. "
    },
    {
        "class_name": "org.jfree.data.DefaultKeyedValues2D",
        "src_path": "source/org/jfree/data/DefaultKeyedValues2D.java",
        "signature": "org.jfree.data.DefaultKeyedValues2D.rows",
        "snippet": "    private List rows;",
        "begin_line": 86,
        "end_line": 86,
        "comment": " The row data. "
    },
    {
        "class_name": "org.jfree.data.DefaultKeyedValues2D",
        "src_path": "source/org/jfree/data/DefaultKeyedValues2D.java",
        "signature": "org.jfree.data.DefaultKeyedValues2D.sortRowKeys",
        "snippet": "    private boolean sortRowKeys;",
        "begin_line": 89,
        "end_line": 89,
        "comment": " If the row keys should be sorted by their comparable order. "
    },
    {
        "class_name": "org.jfree.chart.block.BlockContainer",
        "src_path": "source/org/jfree/chart/block/BlockContainer.java",
        "signature": "org.jfree.chart.block.BlockContainer.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8199508075695195293L;",
        "begin_line": 74,
        "end_line": 74,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.block.BlockContainer",
        "src_path": "source/org/jfree/chart/block/BlockContainer.java",
        "signature": "org.jfree.chart.block.BlockContainer.blocks",
        "snippet": "    private List blocks;",
        "begin_line": 77,
        "end_line": 77,
        "comment": " The blocks within the container. "
    },
    {
        "class_name": "org.jfree.chart.block.BlockContainer",
        "src_path": "source/org/jfree/chart/block/BlockContainer.java",
        "signature": "org.jfree.chart.block.BlockContainer.arrangement",
        "snippet": "    private Arrangement arrangement;",
        "begin_line": 80,
        "end_line": 80,
        "comment": " The object responsible for laying out the blocks. "
    },
    {
        "class_name": "org.jfree.chart.block.FlowArrangement",
        "src_path": "source/org/jfree/chart/block/FlowArrangement.java",
        "signature": "org.jfree.chart.block.FlowArrangement.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4543632485478613800L;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.block.FlowArrangement",
        "src_path": "source/org/jfree/chart/block/FlowArrangement.java",
        "signature": "org.jfree.chart.block.FlowArrangement.horizontalAlignment",
        "snippet": "    private HorizontalAlignment horizontalAlignment;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " The horizontal alignment of blocks. "
    },
    {
        "class_name": "org.jfree.chart.block.FlowArrangement",
        "src_path": "source/org/jfree/chart/block/FlowArrangement.java",
        "signature": "org.jfree.chart.block.FlowArrangement.verticalAlignment",
        "snippet": "    private VerticalAlignment verticalAlignment;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " The vertical alignment of blocks within each row. "
    },
    {
        "class_name": "org.jfree.chart.block.FlowArrangement",
        "src_path": "source/org/jfree/chart/block/FlowArrangement.java",
        "signature": "org.jfree.chart.block.FlowArrangement.horizontalGap",
        "snippet": "    private double horizontalGap;",
        "begin_line": 71,
        "end_line": 71,
        "comment": " The horizontal gap between items within rows. "
    },
    {
        "class_name": "org.jfree.chart.block.FlowArrangement",
        "src_path": "source/org/jfree/chart/block/FlowArrangement.java",
        "signature": "org.jfree.chart.block.FlowArrangement.verticalGap",
        "snippet": "    private double verticalGap;",
        "begin_line": 74,
        "end_line": 74,
        "comment": " The vertical gap between rows. "
    },
    {
        "class_name": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java",
        "signature": "org.jfree.chart.labels.StandardPieSectionLabelGenerator.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 3064190563760203668L;",
        "begin_line": 74,
        "end_line": 74,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java",
        "signature": "org.jfree.chart.labels.StandardPieSectionLabelGenerator.DEFAULT_SECTION_LABEL_FORMAT",
        "snippet": "    public static final String DEFAULT_SECTION_LABEL_FORMAT = \"{0}\";",
        "begin_line": 77,
        "end_line": 77,
        "comment": " The default section label format. "
    },
    {
        "class_name": "org.jfree.chart.labels.StandardPieSectionLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/StandardPieSectionLabelGenerator.java",
        "signature": "org.jfree.chart.labels.StandardPieSectionLabelGenerator.attributedLabels",
        "snippet": "    private ObjectList attributedLabels;",
        "begin_line": 82,
        "end_line": 82,
        "comment": " \r\n     * An optional list of attributed labels (instances of AttributedString). \r\n     "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5481917022435735602L;",
        "begin_line": 52,
        "end_line": 52,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.GENERAL",
        "snippet": "    public static final ChartChangeEventType GENERAL \n        = new ChartChangeEventType(\"ChartChangeEventType.GENERAL\");",
        "begin_line": 55,
        "end_line": 56,
        "comment": " GENERAL. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.NEW_DATASET",
        "snippet": "    public static final ChartChangeEventType NEW_DATASET \n        = new ChartChangeEventType(\"ChartChangeEventType.NEW_DATASET\");",
        "begin_line": 59,
        "end_line": 60,
        "comment": " NEW_DATASET. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED",
        "snippet": "    public static final ChartChangeEventType DATASET_UPDATED\n        = new ChartChangeEventType(\"ChartChangeEventType.DATASET_UPDATED\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " DATASET_UPDATED. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.name",
        "snippet": "    private String name;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.TableOrder",
        "src_path": "source/org/jfree/chart/util/TableOrder.java",
        "signature": "org.jfree.chart.util.TableOrder.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 525193294068177057L;",
        "begin_line": 52,
        "end_line": 52,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.TableOrder",
        "src_path": "source/org/jfree/chart/util/TableOrder.java",
        "signature": "org.jfree.chart.util.TableOrder.BY_ROW",
        "snippet": "    public static final TableOrder BY_ROW = new TableOrder(\"TableOrder.BY_ROW\");",
        "begin_line": 55,
        "end_line": 55,
        "comment": " By row. "
    },
    {
        "class_name": "org.jfree.chart.util.TableOrder",
        "src_path": "source/org/jfree/chart/util/TableOrder.java",
        "signature": "org.jfree.chart.util.TableOrder.BY_COLUMN",
        "snippet": "    public static final TableOrder BY_COLUMN \n            = new TableOrder(\"TableOrder.BY_COLUMN\");",
        "begin_line": 58,
        "end_line": 59,
        "comment": " By column. "
    },
    {
        "class_name": "org.jfree.chart.util.TableOrder",
        "src_path": "source/org/jfree/chart/util/TableOrder.java",
        "signature": "org.jfree.chart.util.TableOrder.name",
        "snippet": "    private String name;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -795612466005590431L;",
        "begin_line": 239,
        "end_line": 239,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_INTERIOR_GAP",
        "snippet": "    public static final double DEFAULT_INTERIOR_GAP = 0.08;",
        "begin_line": 242,
        "end_line": 242,
        "comment": " The default interior gap. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.MAX_INTERIOR_GAP",
        "snippet": "    public static final double MAX_INTERIOR_GAP = 0.40;",
        "begin_line": 245,
        "end_line": 245,
        "comment": " The maximum interior gap (currently 40%). "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_START_ANGLE",
        "snippet": "    public static final double DEFAULT_START_ANGLE = 90.0;",
        "begin_line": 248,
        "end_line": 248,
        "comment": " The default starting angle for the pie chart. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_LABEL_FONT",
        "snippet": "    public static final Font DEFAULT_LABEL_FONT = new Font(\"SansSerif\", \n            Font.PLAIN, 10);",
        "begin_line": 251,
        "end_line": 252,
        "comment": " The default section label font. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_LABEL_PAINT",
        "snippet": "    public static final Paint DEFAULT_LABEL_PAINT = Color.black;",
        "begin_line": 255,
        "end_line": 255,
        "comment": " The default section label paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_LABEL_BACKGROUND_PAINT",
        "snippet": "    public static final Paint DEFAULT_LABEL_BACKGROUND_PAINT = new Color(255, \n            255, 192);",
        "begin_line": 258,
        "end_line": 259,
        "comment": " The default section label background paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_LABEL_OUTLINE_PAINT",
        "snippet": "    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.black;",
        "begin_line": 262,
        "end_line": 262,
        "comment": " The default section label outline paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_LABEL_OUTLINE_STROKE",
        "snippet": "    public static final Stroke DEFAULT_LABEL_OUTLINE_STROKE = new BasicStroke(\n            0.5f);",
        "begin_line": 265,
        "end_line": 266,
        "comment": " The default section label outline stroke. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_LABEL_SHADOW_PAINT",
        "snippet": "    public static final Paint DEFAULT_LABEL_SHADOW_PAINT = new Color(151, 151, \n            151, 128);",
        "begin_line": 269,
        "end_line": 270,
        "comment": " The default section label shadow paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW",
        "snippet": "    public static final double DEFAULT_MINIMUM_ARC_ANGLE_TO_DRAW = 0.00001;",
        "begin_line": 273,
        "end_line": 273,
        "comment": " The default minimum arc angle to draw. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.dataset",
        "snippet": "    private PieDataset dataset;",
        "begin_line": 276,
        "end_line": 276,
        "comment": " The dataset for the pie chart. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.pieIndex",
        "snippet": "    private int pieIndex;",
        "begin_line": 279,
        "end_line": 279,
        "comment": " The pie index (used by the {@link MultiplePiePlot} class). "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.interiorGap",
        "snippet": "    private double interiorGap;",
        "begin_line": 285,
        "end_line": 285,
        "comment": " \r\n     * The amount of space left around the outside of the pie plot, expressed \r\n     * as a percentage of the plot area width and height. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.circular",
        "snippet": "    private boolean circular;",
        "begin_line": 288,
        "end_line": 288,
        "comment": " Flag determining whether to draw an ellipse or a perfect circle. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.startAngle",
        "snippet": "    private double startAngle;",
        "begin_line": 291,
        "end_line": 291,
        "comment": " The starting angle. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.direction",
        "snippet": "    private Rotation direction;",
        "begin_line": 294,
        "end_line": 294,
        "comment": " The direction for the pie segments. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.sectionPaintMap",
        "snippet": "    private PaintMap sectionPaintMap;",
        "begin_line": 297,
        "end_line": 297,
        "comment": " The section paint map. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.baseSectionPaint",
        "snippet": "    private transient Paint baseSectionPaint;",
        "begin_line": 300,
        "end_line": 300,
        "comment": " The base section paint (fallback). "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.sectionOutlinesVisible",
        "snippet": "    private boolean sectionOutlinesVisible;",
        "begin_line": 306,
        "end_line": 306,
        "comment": " \r\n     * A flag that controls whether or not an outline is drawn for each\r\n     * section in the plot.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.sectionOutlinePaintMap",
        "snippet": "    private PaintMap sectionOutlinePaintMap;",
        "begin_line": 309,
        "end_line": 309,
        "comment": " The section outline paint map. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.baseSectionOutlinePaint",
        "snippet": "    private transient Paint baseSectionOutlinePaint;",
        "begin_line": 312,
        "end_line": 312,
        "comment": " The base section outline paint (fallback). "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.sectionOutlineStrokeMap",
        "snippet": "    private StrokeMap sectionOutlineStrokeMap;",
        "begin_line": 315,
        "end_line": 315,
        "comment": " The section outline stroke map. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.baseSectionOutlineStroke",
        "snippet": "    private transient Stroke baseSectionOutlineStroke;",
        "begin_line": 318,
        "end_line": 318,
        "comment": " The base section outline stroke (fallback). "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.shadowPaint",
        "snippet": "    private transient Paint shadowPaint = Color.gray;",
        "begin_line": 321,
        "end_line": 321,
        "comment": " The shadow paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.shadowXOffset",
        "snippet": "    private double shadowXOffset = 4.0f;",
        "begin_line": 324,
        "end_line": 324,
        "comment": " The x-offset for the shadow effect. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.shadowYOffset",
        "snippet": "    private double shadowYOffset = 4.0f;",
        "begin_line": 327,
        "end_line": 327,
        "comment": " The y-offset for the shadow effect. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.explodePercentages",
        "snippet": "    private Map explodePercentages;",
        "begin_line": 330,
        "end_line": 330,
        "comment": " The percentage amount to explode each pie section. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelGenerator",
        "snippet": "    private PieSectionLabelGenerator labelGenerator;",
        "begin_line": 333,
        "end_line": 333,
        "comment": " The section label generator. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelFont",
        "snippet": "    private Font labelFont;",
        "begin_line": 336,
        "end_line": 336,
        "comment": " The font used to display the section labels. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelPaint",
        "snippet": "    private transient Paint labelPaint;",
        "begin_line": 339,
        "end_line": 339,
        "comment": " The color used to draw the section labels. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelBackgroundPaint",
        "snippet": "    private transient Paint labelBackgroundPaint;",
        "begin_line": 345,
        "end_line": 345,
        "comment": " \r\n     * The color used to draw the background of the section labels.  If this\r\n     * is <code>null</code>, the background is not filled.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelOutlinePaint",
        "snippet": "    private transient Paint labelOutlinePaint;",
        "begin_line": 351,
        "end_line": 351,
        "comment": " \r\n     * The paint used to draw the outline of the section labels \r\n     * (<code>null</code> permitted). \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelOutlineStroke",
        "snippet": "    private transient Stroke labelOutlineStroke;",
        "begin_line": 357,
        "end_line": 357,
        "comment": " \r\n     * The stroke used to draw the outline of the section labels \r\n     * (<code>null</code> permitted). \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelShadowPaint",
        "snippet": "    private transient Paint labelShadowPaint;",
        "begin_line": 363,
        "end_line": 363,
        "comment": " \r\n     * The paint used to draw the shadow for the section labels \r\n     * (<code>null</code> permitted). \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.simpleLabels",
        "snippet": "    private boolean simpleLabels = true;",
        "begin_line": 370,
        "end_line": 370,
        "comment": "\r\n     * A flag that controls whether simple or extended labels are used.\r\n     * \r\n     * @since 1.0.7\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelPadding",
        "snippet": "    private RectangleInsets labelPadding;",
        "begin_line": 378,
        "end_line": 378,
        "comment": "\r\n     * The padding between the labels and the label outlines.  This is not\r\n     * allowed to be <code>null</code>.\r\n     * \r\n     * @since 1.0.7\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.simpleLabelOffset",
        "snippet": "    private RectangleInsets simpleLabelOffset;",
        "begin_line": 385,
        "end_line": 385,
        "comment": "\r\n     * The simple label offset.\r\n     * \r\n     * @since 1.0.7\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.maximumLabelWidth",
        "snippet": "    private double maximumLabelWidth = 0.14;",
        "begin_line": 388,
        "end_line": 388,
        "comment": " The maximum label width as a percentage of the plot width. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelGap",
        "snippet": "    private double labelGap = 0.025;",
        "begin_line": 394,
        "end_line": 394,
        "comment": " \r\n     * The gap between the labels and the link corner, as a percentage of the \r\n     * plot width. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelLinksVisible",
        "snippet": "    private boolean labelLinksVisible;",
        "begin_line": 397,
        "end_line": 397,
        "comment": " A flag that controls whether or not the label links are drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelLinkStyle",
        "snippet": "    private PieLabelLinkStyle labelLinkStyle = PieLabelLinkStyle.STANDARD;",
        "begin_line": 404,
        "end_line": 404,
        "comment": " \r\n     * The label link style.\r\n     * \r\n     * @since 1.0.10\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelLinkMargin",
        "snippet": "    private double labelLinkMargin = 0.025;",
        "begin_line": 407,
        "end_line": 407,
        "comment": " The link margin. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelLinkPaint",
        "snippet": "    private transient Paint labelLinkPaint = Color.black;",
        "begin_line": 410,
        "end_line": 410,
        "comment": " The paint used for the label linking lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelLinkStroke",
        "snippet": "    private transient Stroke labelLinkStroke = new BasicStroke(0.5f);",
        "begin_line": 413,
        "end_line": 413,
        "comment": " The stroke used for the label linking lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.labelDistributor",
        "snippet": "    private AbstractPieLabelDistributor labelDistributor;",
        "begin_line": 420,
        "end_line": 420,
        "comment": " \r\n     * The pie section label distributor.\r\n     * \r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.toolTipGenerator",
        "snippet": "    private PieToolTipGenerator toolTipGenerator;",
        "begin_line": 423,
        "end_line": 423,
        "comment": " The tooltip generator. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.urlGenerator",
        "snippet": "    private PieURLGenerator urlGenerator;",
        "begin_line": 426,
        "end_line": 426,
        "comment": " The URL generator. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.legendLabelGenerator",
        "snippet": "    private PieSectionLabelGenerator legendLabelGenerator;",
        "begin_line": 429,
        "end_line": 429,
        "comment": " The legend label generator. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.legendLabelToolTipGenerator",
        "snippet": "    private PieSectionLabelGenerator legendLabelToolTipGenerator;",
        "begin_line": 432,
        "end_line": 432,
        "comment": " A tool tip generator for the legend. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.legendLabelURLGenerator",
        "snippet": "    private PieURLGenerator legendLabelURLGenerator;",
        "begin_line": 439,
        "end_line": 439,
        "comment": " \r\n     * A URL generator for the legend items (optional).  \r\n     *\r\n     * @since 1.0.4. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.ignoreNullValues",
        "snippet": "    private boolean ignoreNullValues;",
        "begin_line": 444,
        "end_line": 444,
        "comment": " \r\n     * A flag that controls whether <code>null</code> values are ignored.  \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.ignoreZeroValues",
        "snippet": "    private boolean ignoreZeroValues;",
        "begin_line": 449,
        "end_line": 449,
        "comment": "\r\n     * A flag that controls whether zero values are ignored.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.legendItemShape",
        "snippet": "    private transient Shape legendItemShape;",
        "begin_line": 452,
        "end_line": 452,
        "comment": " The legend item shape. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.minimumArcAngleToDraw",
        "snippet": "    private double minimumArcAngleToDraw;",
        "begin_line": 465,
        "end_line": 465,
        "comment": "\r\n     * The smallest arc angle that will get drawn (this is to avoid a bug in \r\n     * various Java implementations that causes the JVM to crash).  See this \r\n     * link for details:\r\n     *\r\n     * http://www.jfree.org/phpBB2/viewtopic.php?t=2707\r\n     *\r\n     * ...and this bug report in the Java Bug Parade:\r\n     *\r\n     * http://developer.java.sun.com/developer/bugParade/bugs/4836495.html\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.localizationResources",
        "snippet": "    protected static ResourceBundle localizationResources =\n            ResourceBundle.getBundle(\"org.jfree.chart.plot.LocalizationBundle\");",
        "begin_line": 468,
        "end_line": 469,
        "comment": " The resourceBundle for the localization. "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEBUG_DRAW_INTERIOR",
        "snippet": "    static final boolean DEBUG_DRAW_INTERIOR = false;",
        "begin_line": 476,
        "end_line": 476,
        "comment": " \r\n     * This debug flag controls whether or not an outline is drawn showing the \r\n     * interior of the plot region.  This is drawn as a lightGray rectangle \r\n     * showing the padding provided by the 'interiorGap' setting.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEBUG_DRAW_LINK_AREA",
        "snippet": "    static final boolean DEBUG_DRAW_LINK_AREA = false;",
        "begin_line": 483,
        "end_line": 483,
        "comment": " \r\n     * This debug flag controls whether or not an outline is drawn showing the \r\n     * link area (in blue) and link ellipse (in yellow).  This controls where \r\n     * the label links have 'elbow' points.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PiePlot",
        "src_path": "source/org/jfree/chart/plot/PiePlot.java",
        "signature": "org.jfree.chart.plot.PiePlot.DEBUG_DRAW_PIE_AREA",
        "snippet": "    static final boolean DEBUG_DRAW_PIE_AREA = false;",
        "begin_line": 489,
        "end_line": 489,
        "comment": "\r\n     * This debug flag controls whether or not an outline is drawn showing\r\n     * the pie area (in green).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.ui.OptionalLibraryHolder",
        "src_path": "source/org/jfree/chart/ui/BasicProjectInfo.java",
        "signature": "org.jfree.chart.ui.OptionalLibraryHolder.libraryClass",
        "snippet": "        private String libraryClass;",
        "begin_line": 59,
        "end_line": 59,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.ui.OptionalLibraryHolder",
        "src_path": "source/org/jfree/chart/ui/BasicProjectInfo.java",
        "signature": "org.jfree.chart.ui.OptionalLibraryHolder.library",
        "snippet": "        private transient Library library;",
        "begin_line": 60,
        "end_line": 60,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.ui.BasicProjectInfo",
        "src_path": "source/org/jfree/chart/ui/BasicProjectInfo.java",
        "signature": "org.jfree.chart.ui.BasicProjectInfo.copyright",
        "snippet": "    private String copyright;",
        "begin_line": 135,
        "end_line": 135,
        "comment": " The project copyright statement. "
    },
    {
        "class_name": "org.jfree.chart.ui.BasicProjectInfo",
        "src_path": "source/org/jfree/chart/ui/BasicProjectInfo.java",
        "signature": "org.jfree.chart.ui.BasicProjectInfo.libraries",
        "snippet": "    private List libraries;",
        "begin_line": 138,
        "end_line": 138,
        "comment": " A list of libraries used by the project. "
    },
    {
        "class_name": "org.jfree.chart.ui.BasicProjectInfo",
        "src_path": "source/org/jfree/chart/ui/BasicProjectInfo.java",
        "signature": "org.jfree.chart.ui.BasicProjectInfo.optionalLibraries",
        "snippet": "    private List optionalLibraries;",
        "begin_line": 140,
        "end_line": 140,
        "comment": ""
    }
]