[
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.makeDistribution()",
        "snippet": "    @Override\n    public IntegerDistribution makeDistribution() {\n        return new BinomialDistribution(10, 0.70);\n    }\n",
        "begin_line": 32,
        "end_line": 35,
        "comment": " Creates the default discrete distribution instance to use in tests. ",
        "child_ranges": [
            "(line 34,col 9)-(line 34,col 50)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.makeDensityTestPoints()",
        "snippet": "    @Override\n    public int[] makeDensityTestPoints() {\n        return new int[] { -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 };\n    }\n",
        "begin_line": 38,
        "end_line": 41,
        "comment": " Creates the default probability density test input values ",
        "child_ranges": [
            "(line 40,col 9)-(line 40,col 70)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.makeDensityTestValues()",
        "snippet": "    @Override\n    public double[] makeDensityTestValues() {\n        return new double[] { 0d, 0.0000059049d, 0.000137781d, 0.0014467d,\n                0.00900169d, 0.0367569d, 0.102919d, 0.200121d, 0.266828d,\n                0.233474d, 0.121061d, 0.0282475d, 0d };\n    }\n",
        "begin_line": 44,
        "end_line": 49,
        "comment": " Creates the default probability density test expected values ",
        "child_ranges": [
            "(line 46,col 9)-(line 48,col 55)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.makeCumulativeTestPoints()",
        "snippet": "    @Override\n    public int[] makeCumulativeTestPoints() {\n        return makeDensityTestPoints();\n    }\n",
        "begin_line": 52,
        "end_line": 55,
        "comment": " Creates the default cumulative probability density test input values ",
        "child_ranges": [
            "(line 54,col 9)-(line 54,col 39)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.makeCumulativeTestValues()",
        "snippet": "    @Override\n    public double[] makeCumulativeTestValues() {\n        return new double[] { 0d, 0.0000d, 0.0001d, 0.0016d, 0.0106d, 0.0473d,\n                0.1503d, 0.3504d, 0.6172d, 0.8507d, 0.9718d, 1d, 1d };\n    }\n",
        "begin_line": 58,
        "end_line": 62,
        "comment": " Creates the default cumulative probability density test expected values ",
        "child_ranges": [
            "(line 60,col 9)-(line 61,col 70)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.makeInverseCumulativeTestPoints()",
        "snippet": "    @Override\n    public double[] makeInverseCumulativeTestPoints() {\n        return new double[] { 0, 0.001d, 0.010d, 0.025d, 0.050d, 0.100d,\n                0.999d, 0.990d, 0.975d, 0.950d, 0.900d, 1 };\n    }\n",
        "begin_line": 65,
        "end_line": 69,
        "comment": " Creates the default inverse cumulative probability test input values ",
        "child_ranges": [
            "(line 67,col 9)-(line 68,col 60)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.makeInverseCumulativeTestValues()",
        "snippet": "    @Override\n    public int[] makeInverseCumulativeTestValues() {\n        return new int[] { 0, 2, 3, 4, 5, 5, 10, 10, 10, 9, 9, 10 };\n    }\n",
        "begin_line": 75,
        "end_line": 78,
        "comment": "\n     * Creates the default inverse cumulative probability density test expected\n     * values\n     ",
        "child_ranges": [
            "(line 77,col 9)-(line 77,col 68)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.testDegenerate0()",
        "snippet": "    @Test\n    public void testDegenerate0() throws Exception {\n        BinomialDistribution dist = new BinomialDistribution(5, 0.0d);\n        setDistribution(dist);\n        setCumulativeTestPoints(new int[] { -1, 0, 1, 5, 10 });\n        setCumulativeTestValues(new double[] { 0d, 1d, 1d, 1d, 1d });\n        setDensityTestPoints(new int[] { -1, 0, 1, 10, 11 });\n        setDensityTestValues(new double[] { 0d, 1d, 0d, 0d, 0d });\n        setInverseCumulativeTestPoints(new double[] { 0.1d, 0.5d });\n        setInverseCumulativeTestValues(new int[] { 0, 0 });\n        verifyDensities();\n        verifyCumulativeProbabilities();\n        verifyInverseCumulativeProbabilities();\n        Assert.assertEquals(dist.getSupportLowerBound(), 0);\n        Assert.assertEquals(dist.getSupportUpperBound(), 0);\n    }\n",
        "begin_line": 83,
        "end_line": 98,
        "comment": " Test degenerate case p = 0 ",
        "child_ranges": [
            "(line 85,col 9)-(line 85,col 70)",
            "(line 86,col 9)-(line 86,col 30)",
            "(line 87,col 9)-(line 87,col 63)",
            "(line 88,col 9)-(line 88,col 69)",
            "(line 89,col 9)-(line 89,col 61)",
            "(line 90,col 9)-(line 90,col 66)",
            "(line 91,col 9)-(line 91,col 68)",
            "(line 92,col 9)-(line 92,col 59)",
            "(line 93,col 9)-(line 93,col 26)",
            "(line 94,col 9)-(line 94,col 40)",
            "(line 95,col 9)-(line 95,col 47)",
            "(line 96,col 9)-(line 96,col 60)",
            "(line 97,col 9)-(line 97,col 60)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.testDegenerate1()",
        "snippet": "    @Test\n    public void testDegenerate1() throws Exception {\n        BinomialDistribution dist = new BinomialDistribution(5, 1.0d);\n        setDistribution(dist);\n        setCumulativeTestPoints(new int[] { -1, 0, 1, 2, 5, 10 });\n        setCumulativeTestValues(new double[] { 0d, 0d, 0d, 0d, 1d, 1d });\n        setDensityTestPoints(new int[] { -1, 0, 1, 2, 5, 10 });\n        setDensityTestValues(new double[] { 0d, 0d, 0d, 0d, 1d, 0d });\n        setInverseCumulativeTestPoints(new double[] { 0.1d, 0.5d });\n        setInverseCumulativeTestValues(new int[] { 5, 5 });\n        verifyDensities();\n        verifyCumulativeProbabilities();\n        verifyInverseCumulativeProbabilities();\n        Assert.assertEquals(dist.getSupportLowerBound(), 5);\n        Assert.assertEquals(dist.getSupportUpperBound(), 5);\n    }\n",
        "begin_line": 101,
        "end_line": 116,
        "comment": " Test degenerate case p = 1 ",
        "child_ranges": [
            "(line 103,col 9)-(line 103,col 70)",
            "(line 104,col 9)-(line 104,col 30)",
            "(line 105,col 9)-(line 105,col 66)",
            "(line 106,col 9)-(line 106,col 73)",
            "(line 107,col 9)-(line 107,col 63)",
            "(line 108,col 9)-(line 108,col 70)",
            "(line 109,col 9)-(line 109,col 68)",
            "(line 110,col 9)-(line 110,col 59)",
            "(line 111,col 9)-(line 111,col 26)",
            "(line 112,col 9)-(line 112,col 40)",
            "(line 113,col 9)-(line 113,col 47)",
            "(line 114,col 9)-(line 114,col 60)",
            "(line 115,col 9)-(line 115,col 60)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.testMoments()",
        "snippet": "    @Test\n    public void testMoments() {\n        final double tol = 1e-9;\n        BinomialDistribution dist;\n\n        dist = new BinomialDistribution(10, 0.5);\n        Assert.assertEquals(dist.getNumericalMean(), 10d * 0.5d, tol);\n        Assert.assertEquals(dist.getNumericalVariance(), 10d * 0.5d * 0.5d, tol);\n\n        dist = new BinomialDistribution(30, 0.3);\n        Assert.assertEquals(dist.getNumericalMean(), 30d * 0.3d, tol);\n        Assert.assertEquals(dist.getNumericalVariance(), 30d * 0.3d * (1d - 0.3d), tol);\n    }\n",
        "begin_line": 118,
        "end_line": 130,
        "comment": "",
        "child_ranges": [
            "(line 120,col 9)-(line 120,col 32)",
            "(line 121,col 9)-(line 121,col 34)",
            "(line 123,col 9)-(line 123,col 49)",
            "(line 124,col 9)-(line 124,col 70)",
            "(line 125,col 9)-(line 125,col 81)",
            "(line 127,col 9)-(line 127,col 49)",
            "(line 128,col 9)-(line 128,col 70)",
            "(line 129,col 9)-(line 129,col 88)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.BinomialDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/BinomialDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.BinomialDistributionTest.testMath718()",
        "snippet": "    @Test\n    public void testMath718() {\n        // for large trials the evaluation of ContinuedFraction was inaccurate\n        // do a sweep over several large trials to test if the current implementation is\n        // numerically stable.\n\n        for (int trials = 500000; trials < 20000000; trials += 100000) {\n            BinomialDistribution dist = new BinomialDistribution(trials, 0.5);\n            int p = dist.inverseCumulativeProbability(0.5);\n            Assert.assertEquals(trials / 2, p);\n        }\n\n    }\n",
        "begin_line": 132,
        "end_line": 144,
        "comment": "",
        "child_ranges": [
            "(line 138,col 9)-(line 142,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.makeDistribution()",
        "snippet": "    @Override\n    public FDistribution makeDistribution() {\n        return new FDistribution(5.0, 6.0);\n    }\n",
        "begin_line": 35,
        "end_line": 38,
        "comment": " Creates the default continuous distribution instance to use in tests. ",
        "child_ranges": [
            "(line 37,col 9)-(line 37,col 43)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.makeCumulativeTestPoints()",
        "snippet": "    @Override\n    public double[] makeCumulativeTestPoints() {\n        // quantiles computed using R version 2.9.2\n        return new double[] {0.0346808448626, 0.0937009113303, 0.143313661184, 0.202008445998, 0.293728320107,\n                20.8026639595, 8.74589525602, 5.98756512605, 4.38737418741, 3.10751166664};\n    }\n",
        "begin_line": 41,
        "end_line": 46,
        "comment": " Creates the default cumulative probability distribution test input values ",
        "child_ranges": [
            "(line 44,col 9)-(line 45,col 91)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.makeCumulativeTestValues()",
        "snippet": "    @Override\n    public double[] makeCumulativeTestValues() {\n        return new double[] {0.001, 0.01, 0.025, 0.05, 0.1, 0.999, 0.990, 0.975, 0.950, 0.900};\n    }\n",
        "begin_line": 49,
        "end_line": 52,
        "comment": " Creates the default cumulative probability density test expected values ",
        "child_ranges": [
            "(line 51,col 9)-(line 51,col 95)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.makeDensityTestValues()",
        "snippet": "    @Override\n    public double[] makeDensityTestValues() {\n        return new double[] {0.0689156576706, 0.236735653193, 0.364074131941, 0.481570789649, 0.595880479994,\n                0.000133443915657, 0.00286681303403, 0.00969192007502, 0.0242883861471, 0.0605491314658};\n    }\n",
        "begin_line": 55,
        "end_line": 59,
        "comment": " Creates the default probability density test expected values ",
        "child_ranges": [
            "(line 57,col 9)-(line 58,col 105)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.setUp()",
        "snippet": "    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        setTolerance(1e-9);\n    }\n",
        "begin_line": 62,
        "end_line": 66,
        "comment": " --------------------- Override tolerance  --------------",
        "child_ranges": [
            "(line 64,col 9)-(line 64,col 22)",
            "(line 65,col 9)-(line 65,col 27)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.testCumulativeProbabilityExtremes()",
        "snippet": "    @Test\n    public void testCumulativeProbabilityExtremes() throws Exception {\n        setCumulativeTestPoints(new double[] {-2, 0});\n        setCumulativeTestValues(new double[] {0, 0});\n        verifyCumulativeProbabilities();\n    }\n",
        "begin_line": 70,
        "end_line": 75,
        "comment": "",
        "child_ranges": [
            "(line 72,col 9)-(line 72,col 54)",
            "(line 73,col 9)-(line 73,col 53)",
            "(line 74,col 9)-(line 74,col 40)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes()",
        "snippet": "    @Test\n    public void testInverseCumulativeProbabilityExtremes() throws Exception {\n        setInverseCumulativeTestPoints(new double[] {0, 1});\n        setInverseCumulativeTestValues(new double[] {0, Double.POSITIVE_INFINITY});\n        verifyInverseCumulativeProbabilities();\n    }\n",
        "begin_line": 77,
        "end_line": 82,
        "comment": "",
        "child_ranges": [
            "(line 79,col 9)-(line 79,col 60)",
            "(line 80,col 9)-(line 80,col 83)",
            "(line 81,col 9)-(line 81,col 47)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.testDfAccessors()",
        "snippet": "    @Test\n    public void testDfAccessors() {\n        FDistribution dist = (FDistribution) getDistribution();\n        Assert.assertEquals(5d, dist.getNumeratorDegreesOfFreedom(), Double.MIN_VALUE);\n        Assert.assertEquals(6d, dist.getDenominatorDegreesOfFreedom(), Double.MIN_VALUE);\n    }\n",
        "begin_line": 84,
        "end_line": 89,
        "comment": "",
        "child_ranges": [
            "(line 86,col 9)-(line 86,col 63)",
            "(line 87,col 9)-(line 87,col 87)",
            "(line 88,col 9)-(line 88,col 89)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.testPreconditions()",
        "snippet": "    @Test\n    public void testPreconditions() {\n        try {\n            new FDistribution(0, 1);\n            Assert.fail(\"Expecting NotStrictlyPositiveException for df = 0\");\n        } catch (NotStrictlyPositiveException ex) {\n            // Expected.\n        }\n        try {\n            new FDistribution(1, 0);\n            Assert.fail(\"Expecting NotStrictlyPositiveException for df = 0\");\n        } catch (NotStrictlyPositiveException ex) {\n            // Expected.\n        }\n    }\n",
        "begin_line": 91,
        "end_line": 105,
        "comment": "",
        "child_ranges": [
            "(line 93,col 9)-(line 98,col 9)",
            "(line 99,col 9)-(line 104,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.testLargeDegreesOfFreedom()",
        "snippet": "    @Test\n    public void testLargeDegreesOfFreedom() throws Exception {\n        FDistribution fd = new FDistribution(100000, 100000);\n        double p = fd.cumulativeProbability(.999);\n        double x = fd.inverseCumulativeProbability(p);\n        Assert.assertEquals(.999, x, 1.0e-5);\n    }\n",
        "begin_line": 107,
        "end_line": 113,
        "comment": "",
        "child_ranges": [
            "(line 109,col 9)-(line 109,col 61)",
            "(line 110,col 9)-(line 110,col 50)",
            "(line 111,col 9)-(line 111,col 54)",
            "(line 112,col 9)-(line 112,col 45)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.testSmallDegreesOfFreedom()",
        "snippet": "    @Test\n    public void testSmallDegreesOfFreedom() throws Exception {\n        FDistribution fd = new FDistribution(1, 1);\n        double p = fd.cumulativeProbability(0.975);\n        double x = fd.inverseCumulativeProbability(p);\n        Assert.assertEquals(0.975, x, 1.0e-5);\n\n        fd = new FDistribution(1, 2);\n        p = fd.cumulativeProbability(0.975);\n        x = fd.inverseCumulativeProbability(p);\n        Assert.assertEquals(0.975, x, 1.0e-5);\n    }\n",
        "begin_line": 115,
        "end_line": 126,
        "comment": "",
        "child_ranges": [
            "(line 117,col 9)-(line 117,col 51)",
            "(line 118,col 9)-(line 118,col 51)",
            "(line 119,col 9)-(line 119,col 54)",
            "(line 120,col 9)-(line 120,col 46)",
            "(line 122,col 9)-(line 122,col 37)",
            "(line 123,col 9)-(line 123,col 44)",
            "(line 124,col 9)-(line 124,col 47)",
            "(line 125,col 9)-(line 125,col 46)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.testMoments()",
        "snippet": "    @Test\n    public void testMoments() {\n        final double tol = 1e-9;\n        FDistribution dist;\n\n        dist = new FDistribution(1, 2);\n        Assert.assertTrue(Double.isNaN(dist.getNumericalMean()));\n        Assert.assertTrue(Double.isNaN(dist.getNumericalVariance()));\n\n        dist = new FDistribution(1, 3);\n        Assert.assertEquals(dist.getNumericalMean(), 3d / (3d - 2d), tol);\n        Assert.assertTrue(Double.isNaN(dist.getNumericalVariance()));\n\n        dist = new FDistribution(1, 5);\n        Assert.assertEquals(dist.getNumericalMean(), 5d / (5d - 2d), tol);\n        Assert.assertEquals(dist.getNumericalVariance(), (2d * 5d * 5d * 4d) / 9d, tol);\n    }\n",
        "begin_line": 128,
        "end_line": 144,
        "comment": "",
        "child_ranges": [
            "(line 130,col 9)-(line 130,col 32)",
            "(line 131,col 9)-(line 131,col 27)",
            "(line 133,col 9)-(line 133,col 39)",
            "(line 134,col 9)-(line 134,col 65)",
            "(line 135,col 9)-(line 135,col 69)",
            "(line 137,col 9)-(line 137,col 39)",
            "(line 138,col 9)-(line 138,col 74)",
            "(line 139,col 9)-(line 139,col 69)",
            "(line 141,col 9)-(line 141,col 39)",
            "(line 142,col 9)-(line 142,col 74)",
            "(line 143,col 9)-(line 143,col 88)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.FDistributionTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/FDistributionTest.java",
        "signature": "org.apache.commons.math3.distribution.FDistributionTest.testMath785()",
        "snippet": "    @Test\n    public void testMath785() {\n        // this test was failing due to inaccurate results from ContinuedFraction.\n\n        try {\n            double prob = 0.01;\n            FDistribution f = new FDistribution(200000, 200000);\n            double result = f.inverseCumulativeProbability(prob);\n            Assert.assertTrue(result < 1.0);\n        } catch (Exception e) {\n            Assert.fail(\"Failing to calculate inverse cumulative probability\");\n        }\n    }\n",
        "begin_line": 146,
        "end_line": 158,
        "comment": "",
        "child_ranges": [
            "(line 150,col 9)-(line 157,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.makeDistribution()",
        "snippet": "    public abstract IntegerDistribution makeDistribution();\n",
        "begin_line": 78,
        "end_line": 78,
        "comment": " Creates the default discrete distribution instance to use in tests. ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.makeDensityTestPoints()",
        "snippet": "    public abstract int[] makeDensityTestPoints();\n",
        "begin_line": 81,
        "end_line": 81,
        "comment": " Creates the default probability density test input values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.makeDensityTestValues()",
        "snippet": "    public abstract double[] makeDensityTestValues();\n",
        "begin_line": 84,
        "end_line": 84,
        "comment": " Creates the default probability density test expected values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.makeCumulativeTestPoints()",
        "snippet": "    public abstract int[] makeCumulativeTestPoints();\n",
        "begin_line": 87,
        "end_line": 87,
        "comment": " Creates the default cumulative probability density test input values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.makeCumulativeTestValues()",
        "snippet": "    public abstract double[] makeCumulativeTestValues();\n",
        "begin_line": 90,
        "end_line": 90,
        "comment": " Creates the default cumulative probability density test expected values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestPoints()",
        "snippet": "    public abstract double[] makeInverseCumulativeTestPoints();\n",
        "begin_line": 93,
        "end_line": 93,
        "comment": " Creates the default inverse cumulative probability test input values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestValues()",
        "snippet": "    public abstract int[] makeInverseCumulativeTestValues();\n",
        "begin_line": 96,
        "end_line": 96,
        "comment": " Creates the default inverse cumulative probability density test expected values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setUp()",
        "snippet": "    @Before\n    public void setUp() {\n        distribution = makeDistribution();\n        densityTestPoints = makeDensityTestPoints();\n        densityTestValues = makeDensityTestValues();\n        cumulativeTestPoints = makeCumulativeTestPoints();\n        cumulativeTestValues = makeCumulativeTestValues();\n        inverseCumulativeTestPoints = makeInverseCumulativeTestPoints();\n        inverseCumulativeTestValues = makeInverseCumulativeTestValues();\n    }\n",
        "begin_line": 103,
        "end_line": 112,
        "comment": "\n     * Setup sets all test instance data to default values\n     ",
        "child_ranges": [
            "(line 105,col 9)-(line 105,col 42)",
            "(line 106,col 9)-(line 106,col 52)",
            "(line 107,col 9)-(line 107,col 52)",
            "(line 108,col 9)-(line 108,col 58)",
            "(line 109,col 9)-(line 109,col 58)",
            "(line 110,col 9)-(line 110,col 72)",
            "(line 111,col 9)-(line 111,col 72)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.tearDown()",
        "snippet": "    @After\n    public void tearDown() {\n        distribution = null;\n        densityTestPoints = null;\n        densityTestValues = null;\n        cumulativeTestPoints = null;\n        cumulativeTestValues = null;\n        inverseCumulativeTestPoints = null;\n        inverseCumulativeTestValues = null;\n    }\n",
        "begin_line": 117,
        "end_line": 126,
        "comment": "\n     * Cleans up test instance data\n     ",
        "child_ranges": [
            "(line 119,col 9)-(line 119,col 28)",
            "(line 120,col 9)-(line 120,col 33)",
            "(line 121,col 9)-(line 121,col 33)",
            "(line 122,col 9)-(line 122,col 36)",
            "(line 123,col 9)-(line 123,col 36)",
            "(line 124,col 9)-(line 124,col 43)",
            "(line 125,col 9)-(line 125,col 43)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.verifyDensities()",
        "snippet": "    protected void verifyDensities() throws Exception {\n        for (int i = 0; i < densityTestPoints.length; i++) {\n            Assert.assertEquals(\"Incorrect density value returned for \" + densityTestPoints[i],\n                    densityTestValues[i],\n                    distribution.probability(densityTestPoints[i]), tolerance);\n        }\n    }\n",
        "begin_line": 134,
        "end_line": 140,
        "comment": "\n     * Verifies that probability density calculations match expected values\n     * using current test instance data\n     ",
        "child_ranges": [
            "(line 135,col 9)-(line 139,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities()",
        "snippet": "    protected void verifyCumulativeProbabilities() throws Exception {\n        for (int i = 0; i < cumulativeTestPoints.length; i++) {\n            Assert.assertEquals(\"Incorrect cumulative probability value returned for \" + cumulativeTestPoints[i],\n                    cumulativeTestValues[i],\n                    distribution.cumulativeProbability(cumulativeTestPoints[i]), tolerance);\n        }\n    }\n",
        "begin_line": 146,
        "end_line": 152,
        "comment": "\n     * Verifies that cumulative probability density calculations match expected values\n     * using current test instance data\n     ",
        "child_ranges": [
            "(line 147,col 9)-(line 151,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities()",
        "snippet": "    protected void verifyInverseCumulativeProbabilities() throws Exception {\n        for (int i = 0; i < inverseCumulativeTestPoints.length; i++) {\n            Assert.assertEquals(\"Incorrect inverse cumulative probability value returned for \"\n                    + inverseCumulativeTestPoints[i], inverseCumulativeTestValues[i],\n                    distribution.inverseCumulativeProbability(inverseCumulativeTestPoints[i]));\n        }\n    }\n",
        "begin_line": 159,
        "end_line": 165,
        "comment": "\n     * Verifies that inverse cumulative probability density calculations match expected values\n     * using current test instance data\n     ",
        "child_ranges": [
            "(line 160,col 9)-(line 164,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testDensities()",
        "snippet": "    @Test\n    public void testDensities() throws Exception {\n        verifyDensities();\n    }\n",
        "begin_line": 173,
        "end_line": 176,
        "comment": "\n     * Verifies that probability density calculations match expected values\n     * using default test instance data\n     ",
        "child_ranges": [
            "(line 175,col 9)-(line 175,col 26)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testCumulativeProbabilities()",
        "snippet": "    @Test\n    public void testCumulativeProbabilities() throws Exception {\n        verifyCumulativeProbabilities();\n    }\n",
        "begin_line": 182,
        "end_line": 185,
        "comment": "\n     * Verifies that cumulative probability density calculations match expected values\n     * using default test instance data\n     ",
        "child_ranges": [
            "(line 184,col 9)-(line 184,col 40)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testInverseCumulativeProbabilities()",
        "snippet": "    @Test\n    public void testInverseCumulativeProbabilities() throws Exception {\n        verifyInverseCumulativeProbabilities();\n    }\n",
        "begin_line": 191,
        "end_line": 194,
        "comment": "\n     * Verifies that inverse cumulative probability density calculations match expected values\n     * using default test instance data\n     ",
        "child_ranges": [
            "(line 193,col 9)-(line 193,col 47)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testConsistencyAtSupportBounds()",
        "snippet": "    @Test\n    public void testConsistencyAtSupportBounds() {\n        final int lower = distribution.getSupportLowerBound();\n        Assert.assertEquals(\"Cumulative probability mmust be 0 below support lower bound.\",\n                0.0, distribution.cumulativeProbability(lower - 1), 0.0);\n        Assert.assertEquals(\"Cumulative probability of support lower bound must be equal to probability mass at this point.\",\n                distribution.probability(lower), distribution.cumulativeProbability(lower), tolerance);\n        Assert.assertEquals(\"Inverse cumulative probability of 0 must be equal to support lower bound.\",\n                lower, distribution.inverseCumulativeProbability(0.0));\n\n        final int upper = distribution.getSupportUpperBound();\n        if (upper != Integer.MAX_VALUE)\n            Assert.assertEquals(\"Cumulative probability of support upper bound must be equal to 1.\",\n                    1.0, distribution.cumulativeProbability(upper), 0.0);\n        Assert.assertEquals(\"Inverse cumulative probability of 1 must be equal to support upper bound.\",\n                upper, distribution.inverseCumulativeProbability(1.0));\n    }\n",
        "begin_line": 196,
        "end_line": 212,
        "comment": "",
        "child_ranges": [
            "(line 198,col 9)-(line 198,col 62)",
            "(line 199,col 9)-(line 200,col 73)",
            "(line 201,col 9)-(line 202,col 103)",
            "(line 203,col 9)-(line 204,col 71)",
            "(line 206,col 9)-(line 206,col 62)",
            "(line 207,col 9)-(line 209,col 73)",
            "(line 210,col 9)-(line 211,col 71)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testIllegalArguments()",
        "snippet": "    @Test\n    public void testIllegalArguments() throws Exception {\n        try {\n            distribution.cumulativeProbability(1, 0);\n            Assert.fail(\"Expecting MathIllegalArgumentException for bad cumulativeProbability interval\");\n        } catch (MathIllegalArgumentException ex) {\n            // expected\n        }\n        try {\n            distribution.inverseCumulativeProbability(-1);\n            Assert.fail(\"Expecting MathIllegalArgumentException for p = -1\");\n        } catch (MathIllegalArgumentException ex) {\n            // expected\n        }\n        try {\n            distribution.inverseCumulativeProbability(2);\n            Assert.fail(\"Expecting MathIllegalArgumentException for p = 2\");\n        } catch (MathIllegalArgumentException ex) {\n            // expected\n        }\n    }\n",
        "begin_line": 217,
        "end_line": 237,
        "comment": "\n     * Verifies that illegal arguments are correctly handled\n     ",
        "child_ranges": [
            "(line 219,col 9)-(line 224,col 9)",
            "(line 225,col 9)-(line 230,col 9)",
            "(line 231,col 9)-(line 236,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.testSampling()",
        "snippet": "    @Test\n    public void testSampling() throws Exception {\n        int[] densityPoints = makeDensityTestPoints();\n        double[] densityValues = makeDensityTestValues();\n        int sampleSize = 1000;\n        int length = TestUtils.eliminateZeroMassPoints(densityPoints, densityValues);\n        AbstractIntegerDistribution distribution = (AbstractIntegerDistribution) makeDistribution();\n        double[] expectedCounts = new double[length];\n        long[] observedCounts = new long[length];\n        for (int i = 0; i < length; i++) {\n            expectedCounts[i] = sampleSize * densityValues[i];\n        }\n        distribution.reseedRandomGenerator(1000); // Use fixed seed\n        int[] sample = distribution.sample(sampleSize);\n        for (int i = 0; i < sampleSize; i++) {\n          for (int j = 0; j < length; j++) {\n              if (sample[i] == densityPoints[j]) {\n                  observedCounts[j]++;\n              }\n          }\n        }\n        TestUtils.assertChiSquareAccept(densityPoints, expectedCounts, observedCounts, .001);\n    }\n",
        "begin_line": 242,
        "end_line": 264,
        "comment": "\n     * Test sampling\n     ",
        "child_ranges": [
            "(line 244,col 9)-(line 244,col 54)",
            "(line 245,col 9)-(line 245,col 57)",
            "(line 246,col 9)-(line 246,col 30)",
            "(line 247,col 9)-(line 247,col 85)",
            "(line 248,col 9)-(line 248,col 100)",
            "(line 249,col 9)-(line 249,col 53)",
            "(line 250,col 9)-(line 250,col 49)",
            "(line 251,col 9)-(line 253,col 9)",
            "(line 254,col 9)-(line 254,col 49)",
            "(line 255,col 9)-(line 255,col 55)",
            "(line 256,col 9)-(line 262,col 9)",
            "(line 263,col 9)-(line 263,col 93)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.getCumulativeTestPoints()",
        "snippet": "    protected int[] getCumulativeTestPoints() {\n        return cumulativeTestPoints;\n    }\n",
        "begin_line": 270,
        "end_line": 272,
        "comment": "\n     * @return Returns the cumulativeTestPoints.\n     ",
        "child_ranges": [
            "(line 271,col 9)-(line 271,col 36)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setCumulativeTestPoints(int[])",
        "snippet": "    protected void setCumulativeTestPoints(int[] cumulativeTestPoints) {\n        this.cumulativeTestPoints = cumulativeTestPoints;\n    }\n",
        "begin_line": 277,
        "end_line": 279,
        "comment": "\n     * @param cumulativeTestPoints The cumulativeTestPoints to set.\n     ",
        "child_ranges": [
            "(line 278,col 9)-(line 278,col 57)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.getCumulativeTestValues()",
        "snippet": "    protected double[] getCumulativeTestValues() {\n        return cumulativeTestValues;\n    }\n",
        "begin_line": 284,
        "end_line": 286,
        "comment": "\n     * @return Returns the cumulativeTestValues.\n     ",
        "child_ranges": [
            "(line 285,col 9)-(line 285,col 36)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setCumulativeTestValues(double[])",
        "snippet": "    protected void setCumulativeTestValues(double[] cumulativeTestValues) {\n        this.cumulativeTestValues = cumulativeTestValues;\n    }\n",
        "begin_line": 291,
        "end_line": 293,
        "comment": "\n     * @param cumulativeTestValues The cumulativeTestValues to set.\n     ",
        "child_ranges": [
            "(line 292,col 9)-(line 292,col 57)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.getDensityTestPoints()",
        "snippet": "    protected int[] getDensityTestPoints() {\n        return densityTestPoints;\n    }\n",
        "begin_line": 298,
        "end_line": 300,
        "comment": "\n     * @return Returns the densityTestPoints.\n     ",
        "child_ranges": [
            "(line 299,col 9)-(line 299,col 33)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setDensityTestPoints(int[])",
        "snippet": "    protected void setDensityTestPoints(int[] densityTestPoints) {\n        this.densityTestPoints = densityTestPoints;\n    }\n",
        "begin_line": 305,
        "end_line": 307,
        "comment": "\n     * @param densityTestPoints The densityTestPoints to set.\n     ",
        "child_ranges": [
            "(line 306,col 9)-(line 306,col 51)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.getDensityTestValues()",
        "snippet": "    protected double[] getDensityTestValues() {\n        return densityTestValues;\n    }\n",
        "begin_line": 312,
        "end_line": 314,
        "comment": "\n     * @return Returns the densityTestValues.\n     ",
        "child_ranges": [
            "(line 313,col 9)-(line 313,col 33)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setDensityTestValues(double[])",
        "snippet": "    protected void setDensityTestValues(double[] densityTestValues) {\n        this.densityTestValues = densityTestValues;\n    }\n",
        "begin_line": 319,
        "end_line": 321,
        "comment": "\n     * @param densityTestValues The densityTestValues to set.\n     ",
        "child_ranges": [
            "(line 320,col 9)-(line 320,col 51)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.getDistribution()",
        "snippet": "    protected IntegerDistribution getDistribution() {\n        return distribution;\n    }\n",
        "begin_line": 326,
        "end_line": 328,
        "comment": "\n     * @return Returns the distribution.\n     ",
        "child_ranges": [
            "(line 327,col 9)-(line 327,col 28)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setDistribution(org.apache.commons.math3.distribution.IntegerDistribution)",
        "snippet": "    protected void setDistribution(IntegerDistribution distribution) {\n        this.distribution = distribution;\n    }\n",
        "begin_line": 333,
        "end_line": 335,
        "comment": "\n     * @param distribution The distribution to set.\n     ",
        "child_ranges": [
            "(line 334,col 9)-(line 334,col 41)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestPoints()",
        "snippet": "    protected double[] getInverseCumulativeTestPoints() {\n        return inverseCumulativeTestPoints;\n    }\n",
        "begin_line": 340,
        "end_line": 342,
        "comment": "\n     * @return Returns the inverseCumulativeTestPoints.\n     ",
        "child_ranges": [
            "(line 341,col 9)-(line 341,col 43)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestPoints(double[])",
        "snippet": "    protected void setInverseCumulativeTestPoints(double[] inverseCumulativeTestPoints) {\n        this.inverseCumulativeTestPoints = inverseCumulativeTestPoints;\n    }\n",
        "begin_line": 347,
        "end_line": 349,
        "comment": "\n     * @param inverseCumulativeTestPoints The inverseCumulativeTestPoints to set.\n     ",
        "child_ranges": [
            "(line 348,col 9)-(line 348,col 71)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestValues()",
        "snippet": "    protected int[] getInverseCumulativeTestValues() {\n        return inverseCumulativeTestValues;\n    }\n",
        "begin_line": 354,
        "end_line": 356,
        "comment": "\n     * @return Returns the inverseCumulativeTestValues.\n     ",
        "child_ranges": [
            "(line 355,col 9)-(line 355,col 43)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestValues(int[])",
        "snippet": "    protected void setInverseCumulativeTestValues(int[] inverseCumulativeTestValues) {\n        this.inverseCumulativeTestValues = inverseCumulativeTestValues;\n    }\n",
        "begin_line": 361,
        "end_line": 363,
        "comment": "\n     * @param inverseCumulativeTestValues The inverseCumulativeTestValues to set.\n     ",
        "child_ranges": [
            "(line 362,col 9)-(line 362,col 71)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.getTolerance()",
        "snippet": "    protected double getTolerance() {\n        return tolerance;\n    }\n",
        "begin_line": 368,
        "end_line": 370,
        "comment": "\n     * @return Returns the tolerance.\n     ",
        "child_ranges": [
            "(line 369,col 9)-(line 369,col 25)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.BinomialDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/IntegerDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.IntegerDistributionAbstractTest.setTolerance(double)",
        "snippet": "    protected void setTolerance(double tolerance) {\n        this.tolerance = tolerance;\n    }\n",
        "begin_line": 375,
        "end_line": 377,
        "comment": "\n     * @param tolerance The tolerance to set.\n     ",
        "child_ranges": [
            "(line 376,col 9)-(line 376,col 35)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.makeDistribution()",
        "snippet": "    public abstract RealDistribution makeDistribution();\n",
        "begin_line": 90,
        "end_line": 90,
        "comment": " Creates the default continuous distribution instance to use in tests. ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.makeCumulativeTestPoints()",
        "snippet": "    public abstract double[] makeCumulativeTestPoints();\n",
        "begin_line": 93,
        "end_line": 93,
        "comment": " Creates the default cumulative probability test input values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.makeCumulativeTestValues()",
        "snippet": "    public abstract double[] makeCumulativeTestValues();\n",
        "begin_line": 96,
        "end_line": 96,
        "comment": " Creates the default cumulative probability test expected values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.makeDensityTestValues()",
        "snippet": "    public abstract double[] makeDensityTestValues();\n",
        "begin_line": 99,
        "end_line": 99,
        "comment": " Creates the default density test expected values ",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.makeInverseCumulativeTestPoints()",
        "snippet": "    public double[] makeInverseCumulativeTestPoints() {\n        return makeCumulativeTestValues();\n    }\n",
        "begin_line": 104,
        "end_line": 106,
        "comment": " Creates the default inverse cumulative probability test input values ",
        "child_ranges": [
            "(line 105,col 9)-(line 105,col 42)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.makeInverseCumulativeTestValues()",
        "snippet": "    public double[] makeInverseCumulativeTestValues() {\n        return makeCumulativeTestPoints();\n    }\n",
        "begin_line": 109,
        "end_line": 111,
        "comment": " Creates the default inverse cumulative probability density test expected values ",
        "child_ranges": [
            "(line 110,col 9)-(line 110,col 42)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.setUp()",
        "snippet": "    @Before\n    public void setUp() throws Exception {\n        distribution = makeDistribution();\n        cumulativeTestPoints = makeCumulativeTestPoints();\n        cumulativeTestValues = makeCumulativeTestValues();\n        inverseCumulativeTestPoints = makeInverseCumulativeTestPoints();\n        inverseCumulativeTestValues = makeInverseCumulativeTestValues();\n        densityTestValues = makeDensityTestValues();\n    }\n",
        "begin_line": 118,
        "end_line": 126,
        "comment": "\n     * Setup sets all test instance data to default values\n     ",
        "child_ranges": [
            "(line 120,col 9)-(line 120,col 42)",
            "(line 121,col 9)-(line 121,col 58)",
            "(line 122,col 9)-(line 122,col 58)",
            "(line 123,col 9)-(line 123,col 72)",
            "(line 124,col 9)-(line 124,col 72)",
            "(line 125,col 9)-(line 125,col 52)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.tearDown()",
        "snippet": "    @After\n    public void tearDown() throws Exception {\n        distribution = null;\n        cumulativeTestPoints = null;\n        cumulativeTestValues = null;\n        inverseCumulativeTestPoints = null;\n        inverseCumulativeTestValues = null;\n        densityTestValues = null;\n    }\n",
        "begin_line": 131,
        "end_line": 139,
        "comment": "\n     * Cleans up test instance data\n     ",
        "child_ranges": [
            "(line 133,col 9)-(line 133,col 28)",
            "(line 134,col 9)-(line 134,col 36)",
            "(line 135,col 9)-(line 135,col 36)",
            "(line 136,col 9)-(line 136,col 43)",
            "(line 137,col 9)-(line 137,col 43)",
            "(line 138,col 9)-(line 138,col 33)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.verifyCumulativeProbabilities()",
        "snippet": "    protected void verifyCumulativeProbabilities() throws Exception {\n        // verify cumulativeProbability(double)\n        for (int i = 0; i < cumulativeTestPoints.length; i++) {\n            TestUtils.assertEquals(\"Incorrect cumulative probability value returned for \"\n                + cumulativeTestPoints[i], cumulativeTestValues[i],\n                distribution.cumulativeProbability(cumulativeTestPoints[i]),\n                getTolerance());\n        }\n        // verify cumulativeProbability(double, double)\n        for (int i = 0; i < cumulativeTestPoints.length; i++) {\n            for (int j = 0; j < cumulativeTestPoints.length; j++) {\n                if (cumulativeTestPoints[i] <= cumulativeTestPoints[j]) {\n                    TestUtils.assertEquals(cumulativeTestValues[j] - cumulativeTestValues[i],\n                        distribution.cumulativeProbability(cumulativeTestPoints[i], cumulativeTestPoints[j]),\n                        getTolerance());\n                } else {\n                    try {\n                        distribution.cumulativeProbability(cumulativeTestPoints[i], cumulativeTestPoints[j]);\n                    } catch (NumberIsTooLargeException e) {\n                        continue;\n                    }\n                    Assert.fail(\"distribution.cumulativeProbability(double, double) should have thrown an exception that second argument is too large\");\n                }\n            }\n        }\n    }\n",
        "begin_line": 147,
        "end_line": 172,
        "comment": "\n     * Verifies that cumulative probability density calculations match expected values\n     * using current test instance data\n     ",
        "child_ranges": [
            "(line 149,col 9)-(line 154,col 9)",
            "(line 156,col 9)-(line 171,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.verifyInverseCumulativeProbabilities()",
        "snippet": "    protected void verifyInverseCumulativeProbabilities() throws Exception {\n        for (int i = 0; i < inverseCumulativeTestPoints.length; i++) {\n            TestUtils.assertEquals(\"Incorrect inverse cumulative probability value returned for \"\n                + inverseCumulativeTestPoints[i], inverseCumulativeTestValues[i],\n                 distribution.inverseCumulativeProbability(inverseCumulativeTestPoints[i]),\n                 getTolerance());\n        }\n    }\n",
        "begin_line": 178,
        "end_line": 185,
        "comment": "\n     * Verifies that inverse cumulative probability density calculations match expected values\n     * using current test instance data\n     ",
        "child_ranges": [
            "(line 179,col 9)-(line 184,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.verifyDensities()",
        "snippet": "    protected void verifyDensities() throws Exception {\n        for (int i = 0; i < cumulativeTestPoints.length; i++) {\n            TestUtils.assertEquals(\"Incorrect probability density value returned for \"\n                + cumulativeTestPoints[i], densityTestValues[i],\n                 distribution.density(cumulativeTestPoints[i]),\n                 getTolerance());\n        }\n    }\n",
        "begin_line": 190,
        "end_line": 197,
        "comment": "\n     * Verifies that density calculations match expected values\n     ",
        "child_ranges": [
            "(line 191,col 9)-(line 196,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testCumulativeProbabilities()",
        "snippet": "    @Test\n    public void testCumulativeProbabilities() throws Exception {\n        verifyCumulativeProbabilities();\n    }\n",
        "begin_line": 205,
        "end_line": 208,
        "comment": "\n     * Verifies that cumulative probability density calculations match expected values\n     * using default test instance data\n     ",
        "child_ranges": [
            "(line 207,col 9)-(line 207,col 40)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testInverseCumulativeProbabilities()",
        "snippet": "    @Test\n    public void testInverseCumulativeProbabilities() throws Exception {\n        verifyInverseCumulativeProbabilities();\n    }\n",
        "begin_line": 214,
        "end_line": 217,
        "comment": "\n     * Verifies that inverse cumulative probability density calculations match expected values\n     * using default test instance data\n     ",
        "child_ranges": [
            "(line 216,col 9)-(line 216,col 47)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testDensities()",
        "snippet": "    @Test\n    public void testDensities() throws Exception {\n        verifyDensities();\n    }\n",
        "begin_line": 223,
        "end_line": 226,
        "comment": "\n     * Verifies that density calculations return expected values\n     * for default test instance data\n     ",
        "child_ranges": [
            "(line 225,col 9)-(line 225,col 26)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testConsistency()",
        "snippet": "    @Test\n    public void testConsistency() throws Exception {\n        for (int i=1; i < cumulativeTestPoints.length; i++) {\n\n            // check that cdf(x, x) = 0\n            TestUtils.assertEquals(0d,\n               distribution.cumulativeProbability\n                 (cumulativeTestPoints[i], cumulativeTestPoints[i]), tolerance);\n\n            // check that P(a < X <= b) = P(X <= b) - P(X <= a)\n            double upper = FastMath.max(cumulativeTestPoints[i], cumulativeTestPoints[i -1]);\n            double lower = FastMath.min(cumulativeTestPoints[i], cumulativeTestPoints[i -1]);\n            double diff = distribution.cumulativeProbability(upper) -\n                distribution.cumulativeProbability(lower);\n            double direct = distribution.cumulativeProbability(lower, upper);\n            TestUtils.assertEquals(\"Inconsistent cumulative probabilities for (\"\n                    + lower + \",\" + upper + \")\", diff, direct, tolerance);\n        }\n    }\n",
        "begin_line": 231,
        "end_line": 249,
        "comment": "\n     * Verifies that probability computations are consistent\n     ",
        "child_ranges": [
            "(line 233,col 9)-(line 248,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testIllegalArguments()",
        "snippet": "    @Test\n    public void testIllegalArguments() throws Exception {\n        try {\n            distribution.cumulativeProbability(1, 0);\n            Assert.fail(\"Expecting MathIllegalArgumentException for bad cumulativeProbability interval\");\n        } catch (MathIllegalArgumentException ex) {\n            // expected\n        }\n        try {\n            distribution.inverseCumulativeProbability(-1);\n            Assert.fail(\"Expecting MathIllegalArgumentException for p = -1\");\n        } catch (MathIllegalArgumentException ex) {\n            // expected\n        }\n        try {\n            distribution.inverseCumulativeProbability(2);\n            Assert.fail(\"Expecting MathIllegalArgumentException for p = 2\");\n        } catch (MathIllegalArgumentException ex) {\n            // expected\n        }\n    }\n",
        "begin_line": 254,
        "end_line": 274,
        "comment": "\n     * Verifies that illegal arguments are correctly handled\n     ",
        "child_ranges": [
            "(line 256,col 9)-(line 261,col 9)",
            "(line 262,col 9)-(line 267,col 9)",
            "(line 268,col 9)-(line 273,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.testSampling()",
        "snippet": "    @Test\n    public void testSampling() throws Exception {\n        final int sampleSize = 1000;\n        distribution.reseedRandomGenerator(1000); // Use fixed seed\n        double[] sample = distribution.sample(sampleSize);\n        double[] quartiles = TestUtils.getDistributionQuartiles(distribution);\n        double[] expected = {250, 250, 250, 250};\n        long[] counts = new long[4];\n        for (int i = 0; i < sampleSize; i++) {\n            TestUtils.updateCounts(sample[i], counts, quartiles);\n        }\n        TestUtils.assertChiSquareAccept(expected, counts, 0.001);\n    }\n",
        "begin_line": 279,
        "end_line": 291,
        "comment": "\n     * Test sampling\n     ",
        "child_ranges": [
            "(line 281,col 9)-(line 281,col 36)",
            "(line 282,col 9)-(line 282,col 49)",
            "(line 283,col 9)-(line 283,col 58)",
            "(line 284,col 9)-(line 284,col 78)",
            "(line 285,col 9)-(line 285,col 49)",
            "(line 286,col 9)-(line 286,col 36)",
            "(line 287,col 9)-(line 289,col 9)",
            "(line 290,col 9)-(line 290,col 65)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.getCumulativeTestPoints()",
        "snippet": "    protected double[] getCumulativeTestPoints() {\n        return cumulativeTestPoints;\n    }\n",
        "begin_line": 297,
        "end_line": 299,
        "comment": "\n     * @return Returns the cumulativeTestPoints.\n     ",
        "child_ranges": [
            "(line 298,col 9)-(line 298,col 36)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.setCumulativeTestPoints(double[])",
        "snippet": "    protected void setCumulativeTestPoints(double[] cumulativeTestPoints) {\n        this.cumulativeTestPoints = cumulativeTestPoints;\n    }\n",
        "begin_line": 304,
        "end_line": 306,
        "comment": "\n     * @param cumulativeTestPoints The cumulativeTestPoints to set.\n     ",
        "child_ranges": [
            "(line 305,col 9)-(line 305,col 57)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.getCumulativeTestValues()",
        "snippet": "    protected double[] getCumulativeTestValues() {\n        return cumulativeTestValues;\n    }\n",
        "begin_line": 311,
        "end_line": 313,
        "comment": "\n     * @return Returns the cumulativeTestValues.\n     ",
        "child_ranges": [
            "(line 312,col 9)-(line 312,col 36)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.setCumulativeTestValues(double[])",
        "snippet": "    protected void setCumulativeTestValues(double[] cumulativeTestValues) {\n        this.cumulativeTestValues = cumulativeTestValues;\n    }\n",
        "begin_line": 318,
        "end_line": 320,
        "comment": "\n     * @param cumulativeTestValues The cumulativeTestValues to set.\n     ",
        "child_ranges": [
            "(line 319,col 9)-(line 319,col 57)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.getDensityTestValues()",
        "snippet": "    protected double[] getDensityTestValues() {\n        return densityTestValues;\n    }\n",
        "begin_line": 322,
        "end_line": 324,
        "comment": "",
        "child_ranges": [
            "(line 323,col 9)-(line 323,col 33)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.setDensityTestValues(double[])",
        "snippet": "    protected void setDensityTestValues(double[] densityTestValues) {\n        this.densityTestValues = densityTestValues;\n    }\n",
        "begin_line": 326,
        "end_line": 328,
        "comment": "",
        "child_ranges": [
            "(line 327,col 9)-(line 327,col 51)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.getDistribution()",
        "snippet": "    protected RealDistribution getDistribution() {\n        return distribution;\n    }\n",
        "begin_line": 333,
        "end_line": 335,
        "comment": "\n     * @return Returns the distribution.\n     ",
        "child_ranges": [
            "(line 334,col 9)-(line 334,col 28)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.setDistribution(org.apache.commons.math3.distribution.RealDistribution)",
        "snippet": "    protected void setDistribution(RealDistribution distribution) {\n        this.distribution = distribution;\n    }\n",
        "begin_line": 340,
        "end_line": 342,
        "comment": "\n     * @param distribution The distribution to set.\n     ",
        "child_ranges": [
            "(line 341,col 9)-(line 341,col 41)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.getInverseCumulativeTestPoints()",
        "snippet": "    protected double[] getInverseCumulativeTestPoints() {\n        return inverseCumulativeTestPoints;\n    }\n",
        "begin_line": 347,
        "end_line": 349,
        "comment": "\n     * @return Returns the inverseCumulativeTestPoints.\n     ",
        "child_ranges": [
            "(line 348,col 9)-(line 348,col 43)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.setInverseCumulativeTestPoints(double[])",
        "snippet": "    protected void setInverseCumulativeTestPoints(double[] inverseCumulativeTestPoints) {\n        this.inverseCumulativeTestPoints = inverseCumulativeTestPoints;\n    }\n",
        "begin_line": 354,
        "end_line": 356,
        "comment": "\n     * @param inverseCumulativeTestPoints The inverseCumulativeTestPoints to set.\n     ",
        "child_ranges": [
            "(line 355,col 9)-(line 355,col 71)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.getInverseCumulativeTestValues()",
        "snippet": "    protected double[] getInverseCumulativeTestValues() {\n        return inverseCumulativeTestValues;\n    }\n",
        "begin_line": 361,
        "end_line": 363,
        "comment": "\n     * @return Returns the inverseCumulativeTestValues.\n     ",
        "child_ranges": [
            "(line 362,col 9)-(line 362,col 43)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.setInverseCumulativeTestValues(double[])",
        "snippet": "    protected void setInverseCumulativeTestValues(double[] inverseCumulativeTestValues) {\n        this.inverseCumulativeTestValues = inverseCumulativeTestValues;\n    }\n",
        "begin_line": 368,
        "end_line": 370,
        "comment": "\n     * @param inverseCumulativeTestValues The inverseCumulativeTestValues to set.\n     ",
        "child_ranges": [
            "(line 369,col 9)-(line 369,col 71)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.getTolerance()",
        "snippet": "    protected double getTolerance() {\n        return tolerance;\n    }\n",
        "begin_line": 375,
        "end_line": 377,
        "comment": "\n     * @return Returns the tolerance.\n     ",
        "child_ranges": [
            "(line 376,col 9)-(line 376,col 25)"
        ]
    },
    {
        "class_name": "org.apache.commons.math3.distribution.RealDistributionAbstractTest",
        "child_classes": [
            "org.apache.commons.math3.distribution.FDistributionTest"
        ],
        "src_path": "src/test/java/org/apache/commons/math3/distribution/RealDistributionAbstractTest.java",
        "signature": "org.apache.commons.math3.distribution.RealDistributionAbstractTest.setTolerance(double)",
        "snippet": "    protected void setTolerance(double tolerance) {\n        this.tolerance = tolerance;\n    }\n",
        "begin_line": 382,
        "end_line": 384,
        "comment": "\n     * @param tolerance The tolerance to set.\n     ",
        "child_ranges": [
            "(line 383,col 9)-(line 383,col 35)"
        ]
    }
]