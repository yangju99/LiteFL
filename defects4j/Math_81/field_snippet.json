[
    {
        "class_name": "org.apache.commons.math.linear.FractionMatrixConverter",
        "src_path": "src/main/java/org/apache/commons/math/linear/MatrixUtils.java",
        "signature": "org.apache.commons.math.linear.FractionMatrixConverter.data",
        "snippet": "        private double[][] data;",
        "begin_line": 673,
        "end_line": 673,
        "comment": " Converted array. "
    },
    {
        "class_name": "org.apache.commons.math.linear.BigFractionMatrixConverter",
        "src_path": "src/main/java/org/apache/commons/math/linear/MatrixUtils.java",
        "signature": "org.apache.commons.math.linear.BigFractionMatrixConverter.data",
        "snippet": "        private double[][] data;",
        "begin_line": 717,
        "end_line": 717,
        "comment": " Converted array. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1097961340710804027L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.DEFAULT_FORMAT",
        "snippet": "    private static final RealVectorFormat DEFAULT_FORMAT =\n        RealVectorFormat.getInstance();",
        "begin_line": 36,
        "end_line": 37,
        "comment": " Default format. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.data",
        "snippet": "    protected double data[];",
        "begin_line": 40,
        "end_line": 40,
        "comment": " Entries of the vector. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE",
        "snippet": "    private static final double TOLERANCE = 100 * MathUtils.EPSILON;",
        "begin_line": 64,
        "end_line": 64,
        "comment": " Tolerance. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2",
        "snippet": "    private static final double TOLERANCE_2 = TOLERANCE * TOLERANCE;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " Squared tolerance. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.splitTolerance",
        "snippet": "    private double splitTolerance;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " Split tolerance. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.main",
        "snippet": "    private double[] main;",
        "begin_line": 73,
        "end_line": 73,
        "comment": " Main diagonal of the tridiagonal matrix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.secondary",
        "snippet": "    private double[] secondary;",
        "begin_line": 76,
        "end_line": 76,
        "comment": " Secondary diagonal of the tridiagonal matrix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary",
        "snippet": "    private double[] squaredSecondary;",
        "begin_line": 79,
        "end_line": 79,
        "comment": " Squared secondary diagonal of the tridiagonal matrix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.transformer",
        "snippet": "    private TriDiagonalTransformer transformer;",
        "begin_line": 82,
        "end_line": 82,
        "comment": " Transformer to tridiagonal (may be null if matrix is already tridiagonal). "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.lowerSpectra",
        "snippet": "    private double lowerSpectra;",
        "begin_line": 85,
        "end_line": 85,
        "comment": " Lower bound of spectra. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.upperSpectra",
        "snippet": "    private double upperSpectra;",
        "begin_line": 88,
        "end_line": 88,
        "comment": " Upper bound of spectra. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.minPivot",
        "snippet": "    private double minPivot;",
        "begin_line": 91,
        "end_line": 91,
        "comment": " Minimum pivot in the Sturm sequence. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.sigma",
        "snippet": "    private double sigma;",
        "begin_line": 94,
        "end_line": 94,
        "comment": " Current shift. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.sigmaLow",
        "snippet": "    private double sigmaLow;",
        "begin_line": 97,
        "end_line": 97,
        "comment": " Low part of the current shift. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.tau",
        "snippet": "    private double tau;",
        "begin_line": 100,
        "end_line": 100,
        "comment": " Shift increment to apply. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.work",
        "snippet": "    private double[] work;",
        "begin_line": 103,
        "end_line": 103,
        "comment": " Work array for all decomposition algorithms. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong",
        "snippet": "    private int pingPong;",
        "begin_line": 106,
        "end_line": 106,
        "comment": " Shift within qd array for ping-pong implementation. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.qMax",
        "snippet": "    private double qMax;",
        "begin_line": 109,
        "end_line": 109,
        "comment": " Max value of diagonal elements in current segment. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.eMin",
        "snippet": "    private double eMin;",
        "begin_line": 112,
        "end_line": 112,
        "comment": " Min value of off-diagonal elements in current segment. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.tType",
        "snippet": "    private int    tType;",
        "begin_line": 115,
        "end_line": 115,
        "comment": " Type of the last dqds shift. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.dMin",
        "snippet": "    private double dMin;",
        "begin_line": 118,
        "end_line": 118,
        "comment": " Minimal value on current state of the diagonal. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.dMin1",
        "snippet": "    private double dMin1;",
        "begin_line": 121,
        "end_line": 121,
        "comment": " Minimal value on current state of the diagonal, excluding last element. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.dMin2",
        "snippet": "    private double dMin2;",
        "begin_line": 124,
        "end_line": 124,
        "comment": " Minimal value on current state of the diagonal, excluding last two elements. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.dN",
        "snippet": "    private double dN;",
        "begin_line": 127,
        "end_line": 127,
        "comment": " Last value on current state of the diagonal. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.dN1",
        "snippet": "    private double dN1;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " Last but one value on current state of the diagonal. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.dN2",
        "snippet": "    private double dN2;",
        "begin_line": 133,
        "end_line": 133,
        "comment": " Last but two on current state of the diagonal. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.g",
        "snippet": "    private double g;",
        "begin_line": 136,
        "end_line": 136,
        "comment": " Shift ratio with respect to dMin used when tType == 6. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues",
        "snippet": "    private double[] realEigenvalues;",
        "begin_line": 139,
        "end_line": 139,
        "comment": " Real part of the realEigenvalues. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.imagEigenvalues",
        "snippet": "    private double[] imagEigenvalues;",
        "begin_line": 142,
        "end_line": 142,
        "comment": " Imaginary part of the realEigenvalues. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors",
        "snippet": "    private ArrayRealVector[] eigenvectors;",
        "begin_line": 145,
        "end_line": 145,
        "comment": " Eigenvectors. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.cachedV",
        "snippet": "    private RealMatrix cachedV;",
        "begin_line": 148,
        "end_line": 148,
        "comment": " Cached value of V. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.cachedD",
        "snippet": "    private RealMatrix cachedD;",
        "begin_line": 151,
        "end_line": 151,
        "comment": " Cached value of D. "
    },
    {
        "class_name": "org.apache.commons.math.linear.EigenDecompositionImpl",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.EigenDecompositionImpl.cachedVt",
        "snippet": "    private RealMatrix cachedVt;",
        "begin_line": 154,
        "end_line": 154,
        "comment": " Cached value of Vt. "
    },
    {
        "class_name": "org.apache.commons.math.linear.Solver",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.Solver.realEigenvalues",
        "snippet": "        private double[] realEigenvalues;",
        "begin_line": 366,
        "end_line": 366,
        "comment": " Real part of the realEigenvalues. "
    },
    {
        "class_name": "org.apache.commons.math.linear.Solver",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.Solver.imagEigenvalues",
        "snippet": "        private double[] imagEigenvalues;",
        "begin_line": 369,
        "end_line": 369,
        "comment": " Imaginary part of the realEigenvalues. "
    },
    {
        "class_name": "org.apache.commons.math.linear.Solver",
        "src_path": "src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "signature": "org.apache.commons.math.linear.Solver.eigenvectors",
        "snippet": "        private final ArrayRealVector[] eigenvectors;",
        "begin_line": 372,
        "end_line": 372,
        "comment": " Eigenvectors. "
    },
    {
        "class_name": "org.apache.commons.math.util.CompositeFormat",
        "src_path": "src/main/java/org/apache/commons/math/util/CompositeFormat.java",
        "signature": "org.apache.commons.math.util.CompositeFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5358685519349262494L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.lu",
        "snippet": "    @Deprecated\n    private DecompositionSolver lu;",
        "begin_line": 37,
        "end_line": 38,
        "comment": " Cached LU solver.\n     * @deprecated as of release 2.0, since all methods using this are deprecated\n     "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.endRow",
        "snippet": "            private double endRow;",
        "begin_line": 198,
        "end_line": 198,
        "comment": " Last row index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.columnSum",
        "snippet": "            private double columnSum;",
        "begin_line": 201,
        "end_line": 201,
        "comment": " Sum of absolute values on one column. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.maxColSum",
        "snippet": "            private double maxColSum;",
        "begin_line": 204,
        "end_line": 204,
        "comment": " Maximal sum across all columns. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.sum",
        "snippet": "            private double sum;",
        "begin_line": 237,
        "end_line": 237,
        "comment": " Sum of squared entries. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.startRow",
        "snippet": "            private int startRow;",
        "begin_line": 323,
        "end_line": 323,
        "comment": " Initial row index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.startColumn",
        "snippet": "            private int startColumn;",
        "begin_line": 326,
        "end_line": 326,
        "comment": " Initial column index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.Array2DRowRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java",
        "signature": "org.apache.commons.math.linear.Array2DRowRealMatrix.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1067294169172445528L;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.linear.Array2DRowRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/Array2DRowRealMatrix.java",
        "signature": "org.apache.commons.math.linear.Array2DRowRealMatrix.data",
        "snippet": "    protected double data[][];",
        "begin_line": 58,
        "end_line": 58,
        "comment": " Entries of the matrix "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -708767813036157690L;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_PREFIX",
        "snippet": "    private static final String DEFAULT_PREFIX = \"{\";",
        "begin_line": 51,
        "end_line": 51,
        "comment": " The default prefix: \"{\". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_SUFFIX",
        "snippet": "    private static final String DEFAULT_SUFFIX = \"}\";",
        "begin_line": 54,
        "end_line": 54,
        "comment": " The default suffix: \"}\". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_SEPARATOR",
        "snippet": "    private static final String DEFAULT_SEPARATOR = \"; \";",
        "begin_line": 57,
        "end_line": 57,
        "comment": " The default separator: \", \". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.prefix",
        "snippet": "    private final String prefix;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " Prefix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.suffix",
        "snippet": "    private final String suffix;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Suffix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.separator",
        "snippet": "    private final String separator;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " Separator. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedPrefix",
        "snippet": "    private final String trimmedPrefix;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Trimmed prefix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedSuffix",
        "snippet": "    private final String trimmedSuffix;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " Trimmed suffix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedSeparator",
        "snippet": "    private final String trimmedSeparator;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " Trimmed separator. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.format",
        "snippet": "    private NumberFormat format;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The format used for components. "
    }
]