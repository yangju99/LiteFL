[
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.allowNull",
        "snippet": "    private boolean allowNull;",
        "begin_line": 66,
        "end_line": 66,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.paintList",
        "snippet": "    private PaintList paintList;",
        "begin_line": 68,
        "end_line": 68,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultPaint",
        "snippet": "    private Paint defaultPaint;",
        "begin_line": 70,
        "end_line": 70,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.strokeList",
        "snippet": "    private StrokeList strokeList;",
        "begin_line": 72,
        "end_line": 72,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultStroke",
        "snippet": "    private Stroke defaultStroke;",
        "begin_line": 74,
        "end_line": 74,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.shapeList",
        "snippet": "    private ShapeList shapeList;",
        "begin_line": 76,
        "end_line": 76,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultShape",
        "snippet": "    private Shape defaultShape;",
        "begin_line": 78,
        "end_line": 78,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.fillPaintList",
        "snippet": "    private PaintList fillPaintList;",
        "begin_line": 80,
        "end_line": 80,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultFillPaint",
        "snippet": "    private Paint defaultFillPaint;",
        "begin_line": 82,
        "end_line": 82,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.outlinePaintList",
        "snippet": "    private PaintList outlinePaintList;",
        "begin_line": 84,
        "end_line": 84,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultOutlinePaint",
        "snippet": "    private Paint defaultOutlinePaint;",
        "begin_line": 86,
        "end_line": 86,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.outlineStrokeList",
        "snippet": "    private StrokeList outlineStrokeList;",
        "begin_line": 88,
        "end_line": 88,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultOutlineStroke",
        "snippet": "    private Stroke defaultOutlineStroke;",
        "begin_line": 90,
        "end_line": 90,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.labelsVisibleList",
        "snippet": "    private BooleanList labelsVisibleList;",
        "begin_line": 92,
        "end_line": 92,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultLabelVisible",
        "snippet": "    private Boolean defaultLabelVisible;",
        "begin_line": 94,
        "end_line": 94,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.labelFontList",
        "snippet": "    private ObjectList labelFontList;",
        "begin_line": 96,
        "end_line": 96,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultLabelFont",
        "snippet": "    private Font defaultLabelFont;",
        "begin_line": 98,
        "end_line": 98,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.labelPaintList",
        "snippet": "    private PaintList labelPaintList;",
        "begin_line": 100,
        "end_line": 100,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultLabelPaint",
        "snippet": "    private Paint defaultLabelPaint;",
        "begin_line": 102,
        "end_line": 102,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.positionItemLabelPositionList",
        "snippet": "    private ObjectList positionItemLabelPositionList;",
        "begin_line": 104,
        "end_line": 104,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultPositiveItemLabelPosition",
        "snippet": "    private ItemLabelPosition defaultPositiveItemLabelPosition;",
        "begin_line": 106,
        "end_line": 106,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.negativeItemLabelPositionList",
        "snippet": "    private ObjectList negativeItemLabelPositionList;",
        "begin_line": 108,
        "end_line": 108,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultNegativeItemLabelPosition",
        "snippet": "    private ItemLabelPosition defaultNegativeItemLabelPosition;",
        "begin_line": 110,
        "end_line": 110,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.createEntityList",
        "snippet": "    private BooleanList createEntityList;",
        "begin_line": 112,
        "end_line": 112,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.renderer.RenderAttributes",
        "src_path": "source/org/jfree/chart/renderer/RenderAttributes.java",
        "signature": "org.jfree.chart.renderer.RenderAttributes.defaultCreateEntity",
        "snippet": "    private Boolean defaultCreateEntity;",
        "begin_line": 114,
        "end_line": 114,
        "comment": ""
    },
    {
        "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
        "src_path": "source/org/jfree/chart/plot/DatasetRenderingOrder.java",
        "signature": "org.jfree.chart.plot.DatasetRenderingOrder.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -600593412366385072L;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
        "src_path": "source/org/jfree/chart/plot/DatasetRenderingOrder.java",
        "signature": "org.jfree.chart.plot.DatasetRenderingOrder.FORWARD",
        "snippet": "    public static final DatasetRenderingOrder FORWARD\n            = new DatasetRenderingOrder(\"DatasetRenderingOrder.FORWARD\");",
        "begin_line": 62,
        "end_line": 63,
        "comment": "\r\n     * Render datasets in the order 0, 1, 2, ..., N-1, where N is the number\r\n     * of datasets.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
        "src_path": "source/org/jfree/chart/plot/DatasetRenderingOrder.java",
        "signature": "org.jfree.chart.plot.DatasetRenderingOrder.REVERSE",
        "snippet": "    public static final DatasetRenderingOrder REVERSE\n            = new DatasetRenderingOrder(\"DatasetRenderingOrder.REVERSE\");",
        "begin_line": 69,
        "end_line": 70,
        "comment": "\r\n     * Render datasets in the order N-1, N-2, ..., 2, 1, 0, where N is the\r\n     * number of datasets.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
        "src_path": "source/org/jfree/chart/plot/DatasetRenderingOrder.java",
        "signature": "org.jfree.chart.plot.DatasetRenderingOrder.name",
        "snippet": "    private String name;",
        "begin_line": 73,
        "end_line": 73,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2604142742210173810L;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.START",
        "snippet": "    public static final CategoryAnchor START\n        = new CategoryAnchor(\"CategoryAnchor.START\");",
        "begin_line": 56,
        "end_line": 57,
        "comment": " Start of period. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.MIDDLE",
        "snippet": "    public static final CategoryAnchor MIDDLE\n        = new CategoryAnchor(\"CategoryAnchor.MIDDLE\");",
        "begin_line": 60,
        "end_line": 61,
        "comment": " Middle of period. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.END",
        "snippet": "    public static final CategoryAnchor END\n        = new CategoryAnchor(\"CategoryAnchor.END\");",
        "begin_line": 64,
        "end_line": 65,
        "comment": " End of period. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.name",
        "snippet": "    private String name;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelPosition",
        "src_path": "source/org/jfree/chart/labels/ItemLabelPosition.java",
        "signature": "org.jfree.chart.labels.ItemLabelPosition.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5845390630157034499L;",
        "begin_line": 59,
        "end_line": 59,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelPosition",
        "src_path": "source/org/jfree/chart/labels/ItemLabelPosition.java",
        "signature": "org.jfree.chart.labels.ItemLabelPosition.itemLabelAnchor",
        "snippet": "    private ItemLabelAnchor itemLabelAnchor;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The item label anchor point. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelPosition",
        "src_path": "source/org/jfree/chart/labels/ItemLabelPosition.java",
        "signature": "org.jfree.chart.labels.ItemLabelPosition.textAnchor",
        "snippet": "    private TextAnchor textAnchor;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " The text anchor. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelPosition",
        "src_path": "source/org/jfree/chart/labels/ItemLabelPosition.java",
        "signature": "org.jfree.chart.labels.ItemLabelPosition.rotationAnchor",
        "snippet": "    private TextAnchor rotationAnchor;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " The rotation anchor. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelPosition",
        "src_path": "source/org/jfree/chart/labels/ItemLabelPosition.java",
        "signature": "org.jfree.chart.labels.ItemLabelPosition.angle",
        "snippet": "    private double angle;",
        "begin_line": 71,
        "end_line": 71,
        "comment": " The rotation angle. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -197749519869226398L;",
        "begin_line": 134,
        "end_line": 134,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.seriesLinesVisible",
        "snippet": "    private BooleanList seriesLinesVisible;",
        "begin_line": 140,
        "end_line": 140,
        "comment": "\r\n     * A table of flags that control (per series) whether or not lines are\r\n     * visible.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.baseLinesVisible",
        "snippet": "    private boolean baseLinesVisible;",
        "begin_line": 146,
        "end_line": 146,
        "comment": "\r\n     * A flag indicating whether or not lines are drawn between non-null\r\n     * points.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.seriesShapesVisible",
        "snippet": "    private BooleanList seriesShapesVisible;",
        "begin_line": 152,
        "end_line": 152,
        "comment": "\r\n     * A table of flags that control (per series) whether or not shapes are\r\n     * visible.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.baseShapesVisible",
        "snippet": "    private boolean baseShapesVisible;",
        "begin_line": 155,
        "end_line": 155,
        "comment": " The default value returned by the getShapeVisible() method. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.seriesShapesFilled",
        "snippet": "    private BooleanList seriesShapesFilled;",
        "begin_line": 161,
        "end_line": 161,
        "comment": "\r\n     * A table of flags that control (per series) whether or not shapes are\r\n     * filled.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.baseShapesFilled",
        "snippet": "    private boolean baseShapesFilled;",
        "begin_line": 164,
        "end_line": 164,
        "comment": " The default value returned by the getShapeFilled() method. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.useFillPaint",
        "snippet": "    private boolean useFillPaint;",
        "begin_line": 170,
        "end_line": 170,
        "comment": "\r\n     * A flag that controls whether the fill paint is used for filling\r\n     * shapes.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.drawOutlines",
        "snippet": "    private boolean drawOutlines;",
        "begin_line": 173,
        "end_line": 173,
        "comment": " A flag that controls whether outlines are drawn for shapes. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.useOutlinePaint",
        "snippet": "    private boolean useOutlinePaint;",
        "begin_line": 179,
        "end_line": 179,
        "comment": "\r\n     * A flag that controls whether the outline paint is used for drawing shape\r\n     * outlines - if not, the regular series paint is used.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.useSeriesOffset",
        "snippet": "    private boolean useSeriesOffset;",
        "begin_line": 187,
        "end_line": 187,
        "comment": "\r\n     * A flag that controls whether or not the x-position for each item is\r\n     * offset within the category according to the series.\r\n     *\r\n     * @since 1.0.7\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.LineAndShapeRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/LineAndShapeRenderer.java",
        "signature": "org.jfree.chart.renderer.category.LineAndShapeRenderer.itemMargin",
        "snippet": "    private double itemMargin;",
        "begin_line": 195,
        "end_line": 195,
        "comment": "\r\n     * The item margin used for series offsetting - this allows the positioning\r\n     * to match the bar positions of the {@link BarRenderer} class.\r\n     *\r\n     * @since 1.0.7\r\n     "
    },
    {
        "class_name": "org.jfree.data.category.AbstractCategoryDataset",
        "src_path": "source/org/jfree/data/category/AbstractCategoryDataset.java",
        "signature": "org.jfree.data.category.AbstractCategoryDataset.selectionState",
        "snippet": "    private CategoryDatasetSelectionState selectionState;",
        "begin_line": 58,
        "end_line": 58,
        "comment": "\n     * The dataset selection state (possibly <code>null</code>).\n     *\n     * @since 1.2.0\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3276922179323563410L;",
        "begin_line": 58,
        "end_line": 58,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT",
        "snippet": "    public static final AxisLocation TOP_OR_LEFT = new AxisLocation(\n            \"AxisLocation.TOP_OR_LEFT\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " Axis at the top or left. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT",
        "snippet": "    public static final AxisLocation TOP_OR_RIGHT = new AxisLocation(\n            \"AxisLocation.TOP_OR_RIGHT\");",
        "begin_line": 65,
        "end_line": 66,
        "comment": " Axis at the top or right. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT",
        "snippet": "    public static final AxisLocation BOTTOM_OR_LEFT = new AxisLocation(\n            \"AxisLocation.BOTTOM_OR_LEFT\");",
        "begin_line": 69,
        "end_line": 70,
        "comment": " Axis at the bottom or left. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT",
        "snippet": "    public static final AxisLocation BOTTOM_OR_RIGHT = new AxisLocation(\n            \"AxisLocation.BOTTOM_OR_RIGHT\");",
        "begin_line": 73,
        "end_line": 74,
        "comment": " Axis at the bottom or right. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.name",
        "snippet": "    private String name;",
        "begin_line": 77,
        "end_line": 77,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8831571430103671324L;",
        "begin_line": 200,
        "end_line": 200,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.ZERO",
        "snippet": "    public static final Number ZERO = new Integer(0);",
        "begin_line": 203,
        "end_line": 203,
        "comment": " Useful constant representing zero. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_INSETS",
        "snippet": "    public static final RectangleInsets DEFAULT_INSETS\n            = new RectangleInsets(4.0, 8.0, 4.0, 8.0);",
        "begin_line": 206,
        "end_line": 207,
        "comment": " The default insets. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE",
        "snippet": "    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f,\n            BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND);",
        "begin_line": 210,
        "end_line": 211,
        "comment": " The default outline stroke. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT",
        "snippet": "    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;",
        "begin_line": 214,
        "end_line": 214,
        "comment": " The default outline color. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_FOREGROUND_ALPHA",
        "snippet": "    public static final float DEFAULT_FOREGROUND_ALPHA = 1.0f;",
        "begin_line": 217,
        "end_line": 217,
        "comment": " The default foreground alpha transparency. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_ALPHA",
        "snippet": "    public static final float DEFAULT_BACKGROUND_ALPHA = 1.0f;",
        "begin_line": 220,
        "end_line": 220,
        "comment": " The default background alpha transparency. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT",
        "snippet": "    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;",
        "begin_line": 223,
        "end_line": 223,
        "comment": " The default background color. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW",
        "snippet": "    public static final int MINIMUM_WIDTH_TO_DRAW = 10;",
        "begin_line": 226,
        "end_line": 226,
        "comment": " The minimum width at which the plot should be drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW",
        "snippet": "    public static final int MINIMUM_HEIGHT_TO_DRAW = 10;",
        "begin_line": 229,
        "end_line": 229,
        "comment": " The minimum height at which the plot should be drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX",
        "snippet": "    public static final Shape DEFAULT_LEGEND_ITEM_BOX\n            = new Rectangle2D.Double(-4.0, -4.0, 8.0, 8.0);",
        "begin_line": 232,
        "end_line": 233,
        "comment": " A default box shape for legend items. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE",
        "snippet": "    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE\n            = new Ellipse2D.Double(-4.0, -4.0, 8.0, 8.0);",
        "begin_line": 236,
        "end_line": 237,
        "comment": " A default circle shape for legend items. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.parent",
        "snippet": "    private Plot parent;",
        "begin_line": 240,
        "end_line": 240,
        "comment": " The parent plot (<code>null</code> if this is the root plot). "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.datasetGroup",
        "snippet": "    private DatasetGroup datasetGroup;",
        "begin_line": 243,
        "end_line": 243,
        "comment": " The dataset group (to be used for thread synchronisation). "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessage",
        "snippet": "    private String noDataMessage;",
        "begin_line": 246,
        "end_line": 246,
        "comment": " The message to display if no data is available. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessageFont",
        "snippet": "    private Font noDataMessageFont;",
        "begin_line": 249,
        "end_line": 249,
        "comment": " The font used to display the 'no data' message. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessagePaint",
        "snippet": "    private transient Paint noDataMessagePaint;",
        "begin_line": 252,
        "end_line": 252,
        "comment": " The paint used to draw the 'no data' message. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.insets",
        "snippet": "    private RectangleInsets insets;",
        "begin_line": 255,
        "end_line": 255,
        "comment": " Amount of blank space around the plot area. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlineVisible",
        "snippet": "    private boolean outlineVisible;",
        "begin_line": 262,
        "end_line": 262,
        "comment": "\r\n     * A flag that controls whether or not the plot outline is drawn.\r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlineStroke",
        "snippet": "    private transient Stroke outlineStroke;",
        "begin_line": 265,
        "end_line": 265,
        "comment": " The Stroke used to draw an outline around the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlinePaint",
        "snippet": "    private transient Paint outlinePaint;",
        "begin_line": 268,
        "end_line": 268,
        "comment": " The Paint used to draw an outline around the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundPaint",
        "snippet": "    private transient Paint backgroundPaint;",
        "begin_line": 271,
        "end_line": 271,
        "comment": " An optional color used to fill the plot background. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImage",
        "snippet": "    private transient Image backgroundImage;  // not currently serialized",
        "begin_line": 274,
        "end_line": 274,
        "comment": " not currently serialized"
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImageAlignment",
        "snippet": "    private int backgroundImageAlignment = Align.FIT;",
        "begin_line": 277,
        "end_line": 277,
        "comment": " The alignment for the background image. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImageAlpha",
        "snippet": "    private float backgroundImageAlpha = 0.5f;",
        "begin_line": 280,
        "end_line": 280,
        "comment": " The alpha value used to draw the background image. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.foregroundAlpha",
        "snippet": "    private float foregroundAlpha;",
        "begin_line": 283,
        "end_line": 283,
        "comment": " The alpha-transparency for the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundAlpha",
        "snippet": "    private float backgroundAlpha;",
        "begin_line": 286,
        "end_line": 286,
        "comment": " The alpha transparency for the background paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.drawingSupplier",
        "snippet": "    private DrawingSupplier drawingSupplier;",
        "begin_line": 289,
        "end_line": 289,
        "comment": " The drawing supplier. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 292,
        "end_line": 292,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.notify",
        "snippet": "    private boolean notify;",
        "begin_line": 301,
        "end_line": 301,
        "comment": "\r\n     * A flag that controls whether or not the plot will notify listeners\r\n     * of changes (defaults to true, but sometimes it is useful to disable\r\n     * this).\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_RED",
        "snippet": "    public static final Color VERY_DARK_RED = new Color(0x80, 0x00, 0x00);",
        "begin_line": 59,
        "end_line": 59,
        "comment": " A very dark red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_RED",
        "snippet": "    public static final Color DARK_RED = new Color(0xc0, 0x00, 0x00);",
        "begin_line": 62,
        "end_line": 62,
        "comment": " A dark red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_RED",
        "snippet": "    public static final Color LIGHT_RED = new Color(0xFF, 0x40, 0x40);",
        "begin_line": 65,
        "end_line": 65,
        "comment": " A light red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_RED",
        "snippet": "    public static final Color VERY_LIGHT_RED = new Color(0xFF, 0x80, 0x80);",
        "begin_line": 68,
        "end_line": 68,
        "comment": " A very light red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_YELLOW",
        "snippet": "    public static final Color VERY_DARK_YELLOW = new Color(0x80, 0x80, 0x00);",
        "begin_line": 71,
        "end_line": 71,
        "comment": " A very dark yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_YELLOW",
        "snippet": "    public static final Color DARK_YELLOW = new Color(0xC0, 0xC0, 0x00);",
        "begin_line": 74,
        "end_line": 74,
        "comment": " A dark yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_YELLOW",
        "snippet": "    public static final Color LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x40);",
        "begin_line": 77,
        "end_line": 77,
        "comment": " A light yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW",
        "snippet": "    public static final Color VERY_LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x80);",
        "begin_line": 80,
        "end_line": 80,
        "comment": " A very light yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_GREEN",
        "snippet": "    public static final Color VERY_DARK_GREEN = new Color(0x00, 0x80, 0x00);",
        "begin_line": 83,
        "end_line": 83,
        "comment": " A very dark green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_GREEN",
        "snippet": "    public static final Color DARK_GREEN = new Color(0x00, 0xC0, 0x00);",
        "begin_line": 86,
        "end_line": 86,
        "comment": " A dark green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_GREEN",
        "snippet": "    public static final Color LIGHT_GREEN = new Color(0x40, 0xFF, 0x40);",
        "begin_line": 89,
        "end_line": 89,
        "comment": " A light green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_GREEN",
        "snippet": "    public static final Color VERY_LIGHT_GREEN = new Color(0x80, 0xFF, 0x80);",
        "begin_line": 92,
        "end_line": 92,
        "comment": " A very light green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_CYAN",
        "snippet": "    public static final Color VERY_DARK_CYAN = new Color(0x00, 0x80, 0x80);",
        "begin_line": 95,
        "end_line": 95,
        "comment": " A very dark cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_CYAN",
        "snippet": "    public static final Color DARK_CYAN = new Color(0x00, 0xC0, 0xC0);",
        "begin_line": 98,
        "end_line": 98,
        "comment": " A dark cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_CYAN",
        "snippet": "    public static final Color LIGHT_CYAN = new Color(0x40, 0xFF, 0xFF);",
        "begin_line": 101,
        "end_line": 101,
        "comment": " A light cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_CYAN",
        "snippet": "    public static final Color VERY_LIGHT_CYAN = new Color(0x80, 0xFF, 0xFF);",
        "begin_line": 104,
        "end_line": 104,
        "comment": " Aa very light cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_BLUE",
        "snippet": "    public static final Color VERY_DARK_BLUE = new Color(0x00, 0x00, 0x80);",
        "begin_line": 107,
        "end_line": 107,
        "comment": " A very dark blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_BLUE",
        "snippet": "    public static final Color DARK_BLUE = new Color(0x00, 0x00, 0xC0);",
        "begin_line": 110,
        "end_line": 110,
        "comment": " A dark blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_BLUE",
        "snippet": "    public static final Color LIGHT_BLUE = new Color(0x40, 0x40, 0xFF);",
        "begin_line": 113,
        "end_line": 113,
        "comment": " A light blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_BLUE",
        "snippet": "    public static final Color VERY_LIGHT_BLUE = new Color(0x80, 0x80, 0xFF);",
        "begin_line": 116,
        "end_line": 116,
        "comment": " A very light blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_MAGENTA",
        "snippet": "    public static final Color VERY_DARK_MAGENTA = new Color(0x80, 0x00, 0x80);",
        "begin_line": 119,
        "end_line": 119,
        "comment": " A very dark magenta/purple color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_MAGENTA",
        "snippet": "    public static final Color DARK_MAGENTA = new Color(0xC0, 0x00, 0xC0);",
        "begin_line": 122,
        "end_line": 122,
        "comment": " A dark magenta color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_MAGENTA",
        "snippet": "    public static final Color LIGHT_MAGENTA = new Color(0xFF, 0x40, 0xFF);",
        "begin_line": 125,
        "end_line": 125,
        "comment": " A light magenta color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA",
        "snippet": "    public static final Color VERY_LIGHT_MAGENTA = new Color(0xFF, 0x80, 0xFF);",
        "begin_line": 128,
        "end_line": 128,
        "comment": " A very light magenta color. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -7339847061039422538L;",
        "begin_line": 80,
        "end_line": 80,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_PAINT_SEQUENCE\n            = ChartColor.createDefaultPaintArray();",
        "begin_line": 83,
        "end_line": 84,
        "comment": " The default fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE = new Paint[] {\n            Color.lightGray};",
        "begin_line": 87,
        "end_line": 88,
        "comment": " The default outline paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE = new Paint[] {\n            Color.white};",
        "begin_line": 91,
        "end_line": 92,
        "comment": " The default fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE",
        "snippet": "    public static final Stroke[] DEFAULT_STROKE_SEQUENCE = new Stroke[] {\n            new BasicStroke(1.0f, BasicStroke.CAP_SQUARE,\n                    BasicStroke.JOIN_BEVEL)};",
        "begin_line": 95,
        "end_line": 97,
        "comment": " The default stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE",
        "snippet": "    public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE\n            = new Stroke[] {new BasicStroke(1.0f, BasicStroke.CAP_SQUARE,\n                    BasicStroke.JOIN_BEVEL)};",
        "begin_line": 100,
        "end_line": 102,
        "comment": " The default outline stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE",
        "snippet": "    public static final Shape[] DEFAULT_SHAPE_SEQUENCE\n            = createStandardSeriesShapes();",
        "begin_line": 105,
        "end_line": 106,
        "comment": " The default shape sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.paintSequence",
        "snippet": "    private transient Paint[] paintSequence;",
        "begin_line": 109,
        "end_line": 109,
        "comment": " The paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.paintIndex",
        "snippet": "    private int paintIndex;",
        "begin_line": 112,
        "end_line": 112,
        "comment": " The current paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlinePaintSequence",
        "snippet": "    private transient Paint[] outlinePaintSequence;",
        "begin_line": 115,
        "end_line": 115,
        "comment": " The outline paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlinePaintIndex",
        "snippet": "    private int outlinePaintIndex;",
        "begin_line": 118,
        "end_line": 118,
        "comment": " The current outline paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.fillPaintSequence",
        "snippet": "    private transient Paint[] fillPaintSequence;",
        "begin_line": 121,
        "end_line": 121,
        "comment": " The fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.fillPaintIndex",
        "snippet": "    private int fillPaintIndex;",
        "begin_line": 124,
        "end_line": 124,
        "comment": " The current fill paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.strokeSequence",
        "snippet": "    private transient Stroke[] strokeSequence;",
        "begin_line": 127,
        "end_line": 127,
        "comment": " The stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.strokeIndex",
        "snippet": "    private int strokeIndex;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " The current stroke index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlineStrokeSequence",
        "snippet": "    private transient Stroke[] outlineStrokeSequence;",
        "begin_line": 133,
        "end_line": 133,
        "comment": " The outline stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlineStrokeIndex",
        "snippet": "    private int outlineStrokeIndex;",
        "begin_line": 136,
        "end_line": 136,
        "comment": " The current outline stroke index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.shapeSequence",
        "snippet": "    private transient Shape[] shapeSequence;",
        "begin_line": 139,
        "end_line": 139,
        "comment": " The shape sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.shapeIndex",
        "snippet": "    private int shapeIndex;",
        "begin_line": 142,
        "end_line": 142,
        "comment": " The current shape index. "
    },
    {
        "class_name": "org.jfree.data.KeyedObject",
        "src_path": "source/org/jfree/data/KeyedObject.java",
        "signature": "org.jfree.data.KeyedObject.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 2677930479256885863L;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.KeyedObject",
        "src_path": "source/org/jfree/data/KeyedObject.java",
        "signature": "org.jfree.data.KeyedObject.key",
        "snippet": "    private Comparable key;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " The key. "
    },
    {
        "class_name": "org.jfree.data.KeyedObject",
        "src_path": "source/org/jfree/data/KeyedObject.java",
        "signature": "org.jfree.data.KeyedObject.object",
        "snippet": "    private Object object;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " The object. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8219158940496719660L;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.TOP_LEFT",
        "snippet": "    public static final TextAnchor TOP_LEFT = new TextAnchor(\n            \"TextAnchor.TOP_LEFT\");",
        "begin_line": 58,
        "end_line": 59,
        "comment": " Top/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.TOP_CENTER",
        "snippet": "    public static final TextAnchor TOP_CENTER = new TextAnchor(\n            \"TextAnchor.TOP_CENTER\");",
        "begin_line": 62,
        "end_line": 63,
        "comment": " Top/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.TOP_RIGHT",
        "snippet": "    public static final TextAnchor TOP_RIGHT = new TextAnchor(\n            \"TextAnchor.TOP_RIGHT\");",
        "begin_line": 66,
        "end_line": 67,
        "comment": " Top/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT",
        "snippet": "    public static final TextAnchor HALF_ASCENT_LEFT = new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_LEFT\");",
        "begin_line": 70,
        "end_line": 71,
        "comment": " Half-ascent/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER",
        "snippet": "    public static final TextAnchor HALF_ASCENT_CENTER = new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_CENTER\");",
        "begin_line": 74,
        "end_line": 75,
        "comment": " Half-ascent/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT",
        "snippet": "    public static final TextAnchor HALF_ASCENT_RIGHT = new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_RIGHT\");",
        "begin_line": 78,
        "end_line": 79,
        "comment": " Half-ascent/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.CENTER_LEFT",
        "snippet": "    public static final TextAnchor CENTER_LEFT = new TextAnchor(\n            \"TextAnchor.CENTER_LEFT\");",
        "begin_line": 82,
        "end_line": 83,
        "comment": " Middle/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.CENTER",
        "snippet": "    public static final TextAnchor CENTER = new TextAnchor(\"TextAnchor.CENTER\");",
        "begin_line": 86,
        "end_line": 86,
        "comment": " Middle/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.CENTER_RIGHT",
        "snippet": "    public static final TextAnchor CENTER_RIGHT = new TextAnchor(\n            \"TextAnchor.CENTER_RIGHT\");",
        "begin_line": 89,
        "end_line": 90,
        "comment": " Middle/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BASELINE_LEFT",
        "snippet": "    public static final TextAnchor BASELINE_LEFT = new TextAnchor(\n            \"TextAnchor.BASELINE_LEFT\");",
        "begin_line": 93,
        "end_line": 94,
        "comment": " Baseline/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BASELINE_CENTER",
        "snippet": "    public static final TextAnchor BASELINE_CENTER = new TextAnchor(\n            \"TextAnchor.BASELINE_CENTER\");",
        "begin_line": 97,
        "end_line": 98,
        "comment": " Baseline/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BASELINE_RIGHT",
        "snippet": "    public static final TextAnchor BASELINE_RIGHT = new TextAnchor(\n            \"TextAnchor.BASELINE_RIGHT\");",
        "begin_line": 101,
        "end_line": 102,
        "comment": " Baseline/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_LEFT",
        "snippet": "    public static final TextAnchor BOTTOM_LEFT = new TextAnchor(\n            \"TextAnchor.BOTTOM_LEFT\");",
        "begin_line": 105,
        "end_line": 106,
        "comment": " Bottom/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_CENTER",
        "snippet": "    public static final TextAnchor BOTTOM_CENTER = new TextAnchor(\n            \"TextAnchor.BOTTOM_CENTER\");",
        "begin_line": 109,
        "end_line": 110,
        "comment": " Bottom/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT",
        "snippet": "    public static final TextAnchor BOTTOM_RIGHT = new TextAnchor(\n            \"TextAnchor.BOTTOM_RIGHT\");",
        "begin_line": 113,
        "end_line": 114,
        "comment": " Bottom/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.name",
        "snippet": "    private String name;",
        "begin_line": 117,
        "end_line": 117,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.data.category.DefaultCategoryDataset",
        "src_path": "source/org/jfree/data/category/DefaultCategoryDataset.java",
        "signature": "org.jfree.data.category.DefaultCategoryDataset.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8168173757291644622L;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.category.DefaultCategoryDataset",
        "src_path": "source/org/jfree/data/category/DefaultCategoryDataset.java",
        "signature": "org.jfree.data.category.DefaultCategoryDataset.data",
        "snippet": "    private KeyedObjects2D data;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " \r\n     * A storage structure for the data.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -828267569428206075L;",
        "begin_line": 147,
        "end_line": 147,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.ZERO",
        "snippet": "    public static final Double ZERO = new Double(0.0);",
        "begin_line": 150,
        "end_line": 150,
        "comment": " Zero represented as a <code>Double</code>. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT",
        "snippet": "    public static final Paint DEFAULT_PAINT = Color.blue;",
        "begin_line": 153,
        "end_line": 153,
        "comment": " The default paint. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT",
        "snippet": "    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;",
        "begin_line": 156,
        "end_line": 156,
        "comment": " The default outline paint. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.DEFAULT_STROKE",
        "snippet": "    public static final Stroke DEFAULT_STROKE = new BasicStroke(1.0f);",
        "begin_line": 159,
        "end_line": 159,
        "comment": " The default stroke. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_STROKE",
        "snippet": "    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(1.0f);",
        "begin_line": 162,
        "end_line": 162,
        "comment": " The default outline stroke. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.DEFAULT_SHAPE",
        "snippet": "    public static final Shape DEFAULT_SHAPE\n            = new Rectangle2D.Double(-3.0, -3.0, 6.0, 6.0);",
        "begin_line": 165,
        "end_line": 166,
        "comment": " The default shape. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_FONT",
        "snippet": "    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"Tahoma\",\n            Font.PLAIN, 10);",
        "begin_line": 169,
        "end_line": 170,
        "comment": " The default value label font. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.DEFAULT_VALUE_LABEL_PAINT",
        "snippet": "    public static final Paint DEFAULT_VALUE_LABEL_PAINT = Color.black;",
        "begin_line": 173,
        "end_line": 173,
        "comment": " The default value label paint. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.seriesVisibleList",
        "snippet": "    private BooleanList seriesVisibleList;",
        "begin_line": 176,
        "end_line": 176,
        "comment": " A list of flags that controls whether or not each series is visible. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseSeriesVisible",
        "snippet": "    private boolean baseSeriesVisible;",
        "begin_line": 179,
        "end_line": 179,
        "comment": " The default visibility for each series. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.seriesVisibleInLegendList",
        "snippet": "    private BooleanList seriesVisibleInLegendList;",
        "begin_line": 185,
        "end_line": 185,
        "comment": "\r\n     * A list of flags that controls whether or not each series is visible in\r\n     * the legend.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseSeriesVisibleInLegend",
        "snippet": "    private boolean baseSeriesVisibleInLegend;",
        "begin_line": 188,
        "end_line": 188,
        "comment": " The default visibility for each series in the legend. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.paintList",
        "snippet": "    private PaintList paintList;",
        "begin_line": 191,
        "end_line": 191,
        "comment": " The paint list. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesPaint",
        "snippet": "    private boolean autoPopulateSeriesPaint;",
        "begin_line": 199,
        "end_line": 199,
        "comment": "\r\n     * A flag that controls whether or not the paintList is auto-populated\r\n     * in the {@link #lookupSeriesPaint(int)} method.\r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.basePaint",
        "snippet": "    private transient Paint basePaint;",
        "begin_line": 202,
        "end_line": 202,
        "comment": " The base paint. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.fillPaintList",
        "snippet": "    private PaintList fillPaintList;",
        "begin_line": 205,
        "end_line": 205,
        "comment": " The fill paint list. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesFillPaint",
        "snippet": "    private boolean autoPopulateSeriesFillPaint;",
        "begin_line": 213,
        "end_line": 213,
        "comment": "\r\n     * A flag that controls whether or not the fillPaintList is auto-populated\r\n     * in the {@link #lookupSeriesFillPaint(int)} method.\r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseFillPaint",
        "snippet": "    private transient Paint baseFillPaint;",
        "begin_line": 216,
        "end_line": 216,
        "comment": " The base fill paint. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.outlinePaintList",
        "snippet": "    private PaintList outlinePaintList;",
        "begin_line": 219,
        "end_line": 219,
        "comment": " The outline paint list. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesOutlinePaint",
        "snippet": "    private boolean autoPopulateSeriesOutlinePaint;",
        "begin_line": 227,
        "end_line": 227,
        "comment": "\r\n     * A flag that controls whether or not the outlinePaintList is\r\n     * auto-populated in the {@link #lookupSeriesOutlinePaint(int)} method.\r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseOutlinePaint",
        "snippet": "    private transient Paint baseOutlinePaint;",
        "begin_line": 230,
        "end_line": 230,
        "comment": " The base outline paint. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.strokeList",
        "snippet": "    private StrokeList strokeList;",
        "begin_line": 233,
        "end_line": 233,
        "comment": " The stroke list. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesStroke",
        "snippet": "    private boolean autoPopulateSeriesStroke;",
        "begin_line": 241,
        "end_line": 241,
        "comment": "\r\n     * A flag that controls whether or not the strokeList is auto-populated\r\n     * in the {@link #lookupSeriesStroke(int)} method.\r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseStroke",
        "snippet": "    private transient Stroke baseStroke;",
        "begin_line": 244,
        "end_line": 244,
        "comment": " The base stroke. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.outlineStrokeList",
        "snippet": "    private StrokeList outlineStrokeList;",
        "begin_line": 247,
        "end_line": 247,
        "comment": " The outline stroke list. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseOutlineStroke",
        "snippet": "    private transient Stroke baseOutlineStroke;",
        "begin_line": 250,
        "end_line": 250,
        "comment": " The base outline stroke. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesOutlineStroke",
        "snippet": "    private boolean autoPopulateSeriesOutlineStroke;",
        "begin_line": 258,
        "end_line": 258,
        "comment": "\r\n     * A flag that controls whether or not the outlineStrokeList is\r\n     * auto-populated in the {@link #lookupSeriesOutlineStroke(int)} method.\r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.shapeList",
        "snippet": "    private ShapeList shapeList;",
        "begin_line": 261,
        "end_line": 261,
        "comment": " A shape list. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.autoPopulateSeriesShape",
        "snippet": "    private boolean autoPopulateSeriesShape;",
        "begin_line": 269,
        "end_line": 269,
        "comment": "\r\n     * A flag that controls whether or not the shapeList is auto-populated\r\n     * in the {@link #lookupSeriesShape(int)} method.\r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseShape",
        "snippet": "    private transient Shape baseShape;",
        "begin_line": 272,
        "end_line": 272,
        "comment": " The base shape. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.itemLabelsVisibleList",
        "snippet": "    private BooleanList itemLabelsVisibleList;",
        "begin_line": 275,
        "end_line": 275,
        "comment": " Visibility of the item labels PER series. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseItemLabelsVisible",
        "snippet": "    private boolean baseItemLabelsVisible;",
        "begin_line": 278,
        "end_line": 278,
        "comment": " The base item labels visible. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.itemLabelFontList",
        "snippet": "    private ObjectList itemLabelFontList;",
        "begin_line": 281,
        "end_line": 281,
        "comment": " The item label font list (one font per series). "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseItemLabelFont",
        "snippet": "    private Font baseItemLabelFont;",
        "begin_line": 284,
        "end_line": 284,
        "comment": " The base item label font. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.itemLabelPaintList",
        "snippet": "    private PaintList itemLabelPaintList;",
        "begin_line": 287,
        "end_line": 287,
        "comment": " The item label paint list (one paint per series). "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseItemLabelPaint",
        "snippet": "    private transient Paint baseItemLabelPaint;",
        "begin_line": 290,
        "end_line": 290,
        "comment": " The base item label paint. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.positiveItemLabelPositionList",
        "snippet": "    private ObjectList positiveItemLabelPositionList;",
        "begin_line": 293,
        "end_line": 293,
        "comment": " The positive item label position (per series). "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.basePositiveItemLabelPosition",
        "snippet": "    private ItemLabelPosition basePositiveItemLabelPosition;",
        "begin_line": 296,
        "end_line": 296,
        "comment": " The fallback positive item label position. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.negativeItemLabelPositionList",
        "snippet": "    private ObjectList negativeItemLabelPositionList;",
        "begin_line": 299,
        "end_line": 299,
        "comment": " The negative item label position (per series). "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseNegativeItemLabelPosition",
        "snippet": "    private ItemLabelPosition baseNegativeItemLabelPosition;",
        "begin_line": 302,
        "end_line": 302,
        "comment": " The fallback negative item label position. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.itemLabelAnchorOffset",
        "snippet": "    private double itemLabelAnchorOffset = 2.0;",
        "begin_line": 305,
        "end_line": 305,
        "comment": " The item label anchor offset. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.createEntitiesList",
        "snippet": "    private BooleanList createEntitiesList;",
        "begin_line": 311,
        "end_line": 311,
        "comment": "\r\n     * Flags that control whether or not entities are generated for each\r\n     * series.  This will be overridden by 'createEntities'.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseCreateEntities",
        "snippet": "    private boolean baseCreateEntities;",
        "begin_line": 317,
        "end_line": 317,
        "comment": "\r\n     * The default flag that controls whether or not entities are generated.\r\n     * This flag is used when both the above flags return null.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.legendShapeList",
        "snippet": "    private ShapeList legendShapeList;",
        "begin_line": 324,
        "end_line": 324,
        "comment": "\r\n     * The per-series legend shape settings.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseLegendShape",
        "snippet": "    private transient Shape baseLegendShape;",
        "begin_line": 332,
        "end_line": 332,
        "comment": "\r\n     * The base shape for legend items.  If this is <code>null</code>, the\r\n     * series shape will be used.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.treatLegendShapeAsLine",
        "snippet": "    private boolean treatLegendShapeAsLine;",
        "begin_line": 340,
        "end_line": 340,
        "comment": "\r\n     * A special flag that, if true, will cause the getLegendItem() method\r\n     * to configure the legend shape as if it were a line.\r\n     *\r\n     * @since 1.0.14\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.legendTextFont",
        "snippet": "    private ObjectList legendTextFont;",
        "begin_line": 347,
        "end_line": 347,
        "comment": "\r\n     * The per-series legend text font.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseLegendTextFont",
        "snippet": "    private Font baseLegendTextFont;",
        "begin_line": 354,
        "end_line": 354,
        "comment": "\r\n     * The base legend font.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.legendTextPaint",
        "snippet": "    private PaintList legendTextPaint;",
        "begin_line": 361,
        "end_line": 361,
        "comment": "\r\n     * The per series legend text paint settings.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.baseLegendTextPaint",
        "snippet": "    private transient Paint baseLegendTextPaint;",
        "begin_line": 370,
        "end_line": 370,
        "comment": "\r\n     * The default paint for the legend text items (if this is\r\n     * <code>null</code>, the {@link LegendTitle} class will determine the\r\n     * text paint to use.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.dataBoundsIncludesVisibleSeriesOnly",
        "snippet": "    private boolean dataBoundsIncludesVisibleSeriesOnly = true;",
        "begin_line": 378,
        "end_line": 378,
        "comment": "\r\n     * A flag that controls whether or not the renderer will include the\r\n     * non-visible series when calculating the data bounds.\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.defaultEntityRadius",
        "snippet": "    private int defaultEntityRadius;",
        "begin_line": 381,
        "end_line": 381,
        "comment": " The default radius for the entity 'hotspot' "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 384,
        "end_line": 384,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.selectedItemAttributes",
        "snippet": "    private RenderAttributes selectedItemAttributes;",
        "begin_line": 391,
        "end_line": 391,
        "comment": "\r\n     * Attributes for selected items.\r\n     *\r\n     * @since 1.2.0\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.ADJ",
        "snippet": "    private static final double ADJ = Math.cos(Math.PI / 6.0);",
        "begin_line": 2760,
        "end_line": 2760,
        "comment": " The adjacent offset. "
    },
    {
        "class_name": "org.jfree.chart.renderer.AbstractRenderer",
        "src_path": "source/org/jfree/chart/renderer/AbstractRenderer.java",
        "signature": "org.jfree.chart.renderer.AbstractRenderer.OPP",
        "snippet": "    private static final double OPP = Math.sin(Math.PI / 6.0);",
        "begin_line": 2763,
        "end_line": 2763,
        "comment": " The opposite offset. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3537691700434728188L;",
        "begin_line": 271,
        "end_line": 271,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;",
        "begin_line": 277,
        "end_line": 277,
        "comment": "\r\n     * The default visibility of the grid lines plotted against the domain\r\n     * axis.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;",
        "begin_line": 283,
        "end_line": 283,
        "comment": "\r\n     * The default visibility of the grid lines plotted against the range\r\n     * axis.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE",
        "snippet": "    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[]\n            {2.0f, 2.0f}, 0.0f);",
        "begin_line": 286,
        "end_line": 288,
        "comment": " The default grid line stroke. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT",
        "snippet": "    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;",
        "begin_line": 291,
        "end_line": 291,
        "comment": " The default grid line paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT",
        "snippet": "    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"Tahoma\",\n            Font.PLAIN, 10);",
        "begin_line": 294,
        "end_line": 295,
        "comment": " The default value label font. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;",
        "begin_line": 302,
        "end_line": 302,
        "comment": "\r\n     * The default crosshair visibility.\r\n     *\r\n     * @since 1.0.5\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE",
        "snippet": "    public static final Stroke DEFAULT_CROSSHAIR_STROKE\n            = DEFAULT_GRIDLINE_STROKE;",
        "begin_line": 309,
        "end_line": 310,
        "comment": "\r\n     * The default crosshair stroke.\r\n     *\r\n     * @since 1.0.5\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT",
        "snippet": "    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;",
        "begin_line": 317,
        "end_line": 317,
        "comment": "\r\n     * The default crosshair paint.\r\n     *\r\n     * @since 1.0.5\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.localizationResources",
        "snippet": "    protected static ResourceBundle localizationResources\n            = ResourceBundleWrapper.getBundle(\n                \"org.jfree.chart.plot.LocalizationBundle\");",
        "begin_line": 320,
        "end_line": 322,
        "comment": " The resourceBundle for the localization. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.orientation",
        "snippet": "    private PlotOrientation orientation;",
        "begin_line": 325,
        "end_line": 325,
        "comment": " The plot orientation. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.axisOffset",
        "snippet": "    private RectangleInsets axisOffset;",
        "begin_line": 328,
        "end_line": 328,
        "comment": " The offset between the data area and the axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainAxes",
        "snippet": "    private ObjectList domainAxes;",
        "begin_line": 331,
        "end_line": 331,
        "comment": " Storage for the domain axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainAxisLocations",
        "snippet": "    private ObjectList domainAxisLocations;",
        "begin_line": 334,
        "end_line": 334,
        "comment": " Storage for the domain axis locations. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.drawSharedDomainAxis",
        "snippet": "    private boolean drawSharedDomainAxis;",
        "begin_line": 340,
        "end_line": 340,
        "comment": "\r\n     * A flag that controls whether or not the shared domain axis is drawn\r\n     * (only relevant when the plot is being used as a subplot).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeAxes",
        "snippet": "    private ObjectList rangeAxes;",
        "begin_line": 343,
        "end_line": 343,
        "comment": " Storage for the range axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeAxisLocations",
        "snippet": "    private ObjectList rangeAxisLocations;",
        "begin_line": 346,
        "end_line": 346,
        "comment": " Storage for the range axis locations. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.datasets",
        "snippet": "    private ObjectList datasets;",
        "begin_line": 349,
        "end_line": 349,
        "comment": " Storage for the datasets. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.datasetToDomainAxesMap",
        "snippet": "    private TreeMap datasetToDomainAxesMap;",
        "begin_line": 352,
        "end_line": 352,
        "comment": " Storage for keys that map datasets to domain axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.datasetToRangeAxesMap",
        "snippet": "    private TreeMap datasetToRangeAxesMap;",
        "begin_line": 355,
        "end_line": 355,
        "comment": " Storage for keys that map datasets to range axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.renderers",
        "snippet": "    private ObjectList renderers;",
        "begin_line": 358,
        "end_line": 358,
        "comment": " Storage for the renderers. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.renderingOrder",
        "snippet": "    private DatasetRenderingOrder renderingOrder\n            = DatasetRenderingOrder.REVERSE;",
        "begin_line": 361,
        "end_line": 362,
        "comment": " The dataset rendering order. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.columnRenderingOrder",
        "snippet": "    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;",
        "begin_line": 368,
        "end_line": 368,
        "comment": "\r\n     * Controls the order in which the columns are traversed when rendering the\r\n     * data items.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rowRenderingOrder",
        "snippet": "    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;",
        "begin_line": 374,
        "end_line": 374,
        "comment": "\r\n     * Controls the order in which the rows are traversed when rendering the\r\n     * data items.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinesVisible",
        "snippet": "    private boolean domainGridlinesVisible;",
        "begin_line": 380,
        "end_line": 380,
        "comment": "\r\n     * A flag that controls whether the grid-lines for the domain axis are\r\n     * visible.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinePosition",
        "snippet": "    private CategoryAnchor domainGridlinePosition;",
        "begin_line": 383,
        "end_line": 383,
        "comment": " The position of the domain gridlines relative to the category. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlineStroke",
        "snippet": "    private transient Stroke domainGridlineStroke;",
        "begin_line": 386,
        "end_line": 386,
        "comment": " The stroke used to draw the domain grid-lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinePaint",
        "snippet": "    private transient Paint domainGridlinePaint;",
        "begin_line": 389,
        "end_line": 389,
        "comment": " The paint used to draw the domain  grid-lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeZeroBaselineVisible",
        "snippet": "    private boolean rangeZeroBaselineVisible;",
        "begin_line": 397,
        "end_line": 397,
        "comment": "\r\n     * A flag that controls whether or not the zero baseline against the range\r\n     * axis is visible.\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeZeroBaselineStroke",
        "snippet": "    private transient Stroke rangeZeroBaselineStroke;",
        "begin_line": 404,
        "end_line": 404,
        "comment": "\r\n     * The stroke used for the zero baseline against the range axis.\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeZeroBaselinePaint",
        "snippet": "    private transient Paint rangeZeroBaselinePaint;",
        "begin_line": 411,
        "end_line": 411,
        "comment": "\r\n     * The paint used for the zero baseline against the range axis.\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlinesVisible",
        "snippet": "    private boolean rangeGridlinesVisible;",
        "begin_line": 417,
        "end_line": 417,
        "comment": "\r\n     * A flag that controls whether the grid-lines for the range axis are\r\n     * visible.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlineStroke",
        "snippet": "    private transient Stroke rangeGridlineStroke;",
        "begin_line": 420,
        "end_line": 420,
        "comment": " The stroke used to draw the range axis grid-lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlinePaint",
        "snippet": "    private transient Paint rangeGridlinePaint;",
        "begin_line": 423,
        "end_line": 423,
        "comment": " The paint used to draw the range axis grid-lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeMinorGridlinesVisible",
        "snippet": "    private boolean rangeMinorGridlinesVisible;",
        "begin_line": 431,
        "end_line": 431,
        "comment": "\r\n     * A flag that controls whether or not gridlines are shown for the minor\r\n     * tick values on the primary range axis.\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeMinorGridlineStroke",
        "snippet": "    private transient Stroke rangeMinorGridlineStroke;",
        "begin_line": 438,
        "end_line": 438,
        "comment": "\r\n     * The stroke used to draw the range minor grid-lines.\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeMinorGridlinePaint",
        "snippet": "    private transient Paint rangeMinorGridlinePaint;",
        "begin_line": 445,
        "end_line": 445,
        "comment": "\r\n     * The paint used to draw the range minor grid-lines.\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.anchorValue",
        "snippet": "    private double anchorValue;",
        "begin_line": 448,
        "end_line": 448,
        "comment": " The anchor value. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.crosshairDatasetIndex",
        "snippet": "    private int crosshairDatasetIndex;",
        "begin_line": 456,
        "end_line": 456,
        "comment": "\r\n     * The index for the dataset that the crosshairs are linked to (this\r\n     * determines which axes the crosshairs are plotted against).\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainCrosshairVisible",
        "snippet": "    private boolean domainCrosshairVisible;",
        "begin_line": 463,
        "end_line": 463,
        "comment": "\r\n     * A flag that controls the visibility of the domain crosshair.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainCrosshairRowKey",
        "snippet": "    private Comparable domainCrosshairRowKey;",
        "begin_line": 470,
        "end_line": 470,
        "comment": "\r\n     * The row key for the crosshair point.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainCrosshairColumnKey",
        "snippet": "    private Comparable domainCrosshairColumnKey;",
        "begin_line": 477,
        "end_line": 477,
        "comment": "\r\n     * The column key for the crosshair point.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainCrosshairStroke",
        "snippet": "    private transient Stroke domainCrosshairStroke;",
        "begin_line": 484,
        "end_line": 484,
        "comment": "\r\n     * The stroke used to draw the domain crosshair if it is visible.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainCrosshairPaint",
        "snippet": "    private transient Paint domainCrosshairPaint;",
        "begin_line": 491,
        "end_line": 491,
        "comment": "\r\n     * The paint used to draw the domain crosshair if it is visible.\r\n     *\r\n     * @since 1.0.11\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairVisible",
        "snippet": "    private boolean rangeCrosshairVisible;",
        "begin_line": 494,
        "end_line": 494,
        "comment": " A flag that controls whether or not a range crosshair is drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairValue",
        "snippet": "    private double rangeCrosshairValue;",
        "begin_line": 497,
        "end_line": 497,
        "comment": " The range crosshair value. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairStroke",
        "snippet": "    private transient Stroke rangeCrosshairStroke;",
        "begin_line": 500,
        "end_line": 500,
        "comment": " The pen/brush used to draw the crosshair (if any). "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairPaint",
        "snippet": "    private transient Paint rangeCrosshairPaint;",
        "begin_line": 503,
        "end_line": 503,
        "comment": " The color used to draw the crosshair (if any). "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairLockedOnData",
        "snippet": "    private boolean rangeCrosshairLockedOnData = true;",
        "begin_line": 509,
        "end_line": 509,
        "comment": "\r\n     * A flag that controls whether or not the crosshair locks onto actual\r\n     * data points.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.foregroundDomainMarkers",
        "snippet": "    private Map foregroundDomainMarkers;",
        "begin_line": 512,
        "end_line": 512,
        "comment": " A map containing lists of markers for the domain axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.backgroundDomainMarkers",
        "snippet": "    private Map backgroundDomainMarkers;",
        "begin_line": 515,
        "end_line": 515,
        "comment": " A map containing lists of markers for the domain axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.foregroundRangeMarkers",
        "snippet": "    private Map foregroundRangeMarkers;",
        "begin_line": 518,
        "end_line": 518,
        "comment": " A map containing lists of markers for the range axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.backgroundRangeMarkers",
        "snippet": "    private Map backgroundRangeMarkers;",
        "begin_line": 521,
        "end_line": 521,
        "comment": " A map containing lists of markers for the range axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.annotations",
        "snippet": "    private List annotations;",
        "begin_line": 528,
        "end_line": 528,
        "comment": "\r\n     * A (possibly empty) list of annotations for the plot.  The list should\r\n     * be initialised in the constructor and never allowed to be\r\n     * <code>null</code>.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.weight",
        "snippet": "    private int weight;",
        "begin_line": 534,
        "end_line": 534,
        "comment": "\r\n     * The weight for the plot (only relevant when the plot is used as a subplot\r\n     * within a combined plot).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.fixedDomainAxisSpace",
        "snippet": "    private AxisSpace fixedDomainAxisSpace;",
        "begin_line": 537,
        "end_line": 537,
        "comment": " The fixed space for the domain axis. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.fixedRangeAxisSpace",
        "snippet": "    private AxisSpace fixedRangeAxisSpace;",
        "begin_line": 540,
        "end_line": 540,
        "comment": " The fixed space for the range axis. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.fixedLegendItems",
        "snippet": "    private LegendItemCollection fixedLegendItems;",
        "begin_line": 546,
        "end_line": 546,
        "comment": "\r\n     * An optional collection of legend items that can be returned by the\r\n     * getLegendItems() method.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangePannable",
        "snippet": "    private boolean rangePannable;",
        "begin_line": 554,
        "end_line": 554,
        "comment": "\r\n     * A flag that controls whether or not panning is enabled for the\r\n     * range axis/axes.\r\n     *\r\n     * @since 1.0.13\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.shadowGenerator",
        "snippet": "    private ShadowGenerator shadowGenerator;",
        "begin_line": 561,
        "end_line": 561,
        "comment": "\r\n     * The shadow generator for the plot (<code>null</code> permitted).\r\n     *\r\n     * @since 1.0.14\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PlotOrientation",
        "src_path": "source/org/jfree/chart/plot/PlotOrientation.java",
        "signature": "org.jfree.chart.plot.PlotOrientation.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2508771828190337782L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.PlotOrientation",
        "src_path": "source/org/jfree/chart/plot/PlotOrientation.java",
        "signature": "org.jfree.chart.plot.PlotOrientation.HORIZONTAL",
        "snippet": "    public static final PlotOrientation HORIZONTAL\n            = new PlotOrientation(\"PlotOrientation.HORIZONTAL\");",
        "begin_line": 57,
        "end_line": 58,
        "comment": " For a plot where the range axis is horizontal. "
    },
    {
        "class_name": "org.jfree.chart.plot.PlotOrientation",
        "src_path": "source/org/jfree/chart/plot/PlotOrientation.java",
        "signature": "org.jfree.chart.plot.PlotOrientation.VERTICAL",
        "snippet": "    public static final PlotOrientation VERTICAL\n            = new PlotOrientation(\"PlotOrientation.VERTICAL\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " For a plot where the range axis is vertical. "
    },
    {
        "class_name": "org.jfree.chart.plot.PlotOrientation",
        "src_path": "source/org/jfree/chart/plot/PlotOrientation.java",
        "signature": "org.jfree.chart.plot.PlotOrientation.name",
        "snippet": "    private String name;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.event.PlotChangeEvent",
        "src_path": "source/org/jfree/chart/event/PlotChangeEvent.java",
        "signature": "org.jfree.chart.event.PlotChangeEvent.plot",
        "snippet": "    private Plot plot;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " The plot that generated the event. "
    },
    {
        "class_name": "org.jfree.data.general.DatasetGroup",
        "src_path": "source/org/jfree/data/general/DatasetGroup.java",
        "signature": "org.jfree.data.general.DatasetGroup.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3640642179674185688L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.general.DatasetGroup",
        "src_path": "source/org/jfree/data/general/DatasetGroup.java",
        "signature": "org.jfree.data.general.DatasetGroup.id",
        "snippet": "    private String id;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " The group id. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7789833772597351595L;",
        "begin_line": 59,
        "end_line": 59,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.DEFAULT_INITIAL_CAPACITY",
        "snippet": "    public static final int DEFAULT_INITIAL_CAPACITY = 8;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The default initial capacity of the list. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.objects",
        "snippet": "    private transient Object[] objects;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " Storage for the objects. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.size",
        "snippet": "    private int size = 0;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " The current list size. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.increment",
        "snippet": "    private int increment = DEFAULT_INITIAL_CAPACITY;",
        "begin_line": 71,
        "end_line": 71,
        "comment": " The default increment. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1233101616128695658L;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.CENTER",
        "snippet": "    public static final ItemLabelAnchor CENTER\n        = new ItemLabelAnchor(\"ItemLabelAnchor.CENTER\");",
        "begin_line": 60,
        "end_line": 61,
        "comment": " CENTER. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE1",
        "snippet": "    public static final ItemLabelAnchor INSIDE1\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE1\");",
        "begin_line": 64,
        "end_line": 65,
        "comment": " INSIDE1. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE2",
        "snippet": "    public static final ItemLabelAnchor INSIDE2\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE2\");",
        "begin_line": 68,
        "end_line": 69,
        "comment": " INSIDE2. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE3",
        "snippet": "    public static final ItemLabelAnchor INSIDE3\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE3\");",
        "begin_line": 72,
        "end_line": 73,
        "comment": " INSIDE3. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE4",
        "snippet": "    public static final ItemLabelAnchor INSIDE4\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE4\");",
        "begin_line": 76,
        "end_line": 77,
        "comment": " INSIDE4. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE5",
        "snippet": "    public static final ItemLabelAnchor INSIDE5\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE5\");",
        "begin_line": 80,
        "end_line": 81,
        "comment": " INSIDE5. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE6",
        "snippet": "    public static final ItemLabelAnchor INSIDE6\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE6\");",
        "begin_line": 84,
        "end_line": 85,
        "comment": " INSIDE6. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE7",
        "snippet": "    public static final ItemLabelAnchor INSIDE7\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE7\");",
        "begin_line": 88,
        "end_line": 89,
        "comment": " INSIDE7. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE8",
        "snippet": "    public static final ItemLabelAnchor INSIDE8\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE8\");",
        "begin_line": 92,
        "end_line": 93,
        "comment": " INSIDE8. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE9",
        "snippet": "    public static final ItemLabelAnchor INSIDE9\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE9\");",
        "begin_line": 96,
        "end_line": 97,
        "comment": " INSIDE9. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE10",
        "snippet": "    public static final ItemLabelAnchor INSIDE10\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE10\");",
        "begin_line": 100,
        "end_line": 101,
        "comment": " INSIDE10. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE11",
        "snippet": "    public static final ItemLabelAnchor INSIDE11\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE11\");",
        "begin_line": 104,
        "end_line": 105,
        "comment": " INSIDE11. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.INSIDE12",
        "snippet": "    public static final ItemLabelAnchor INSIDE12\n        = new ItemLabelAnchor(\"ItemLabelAnchor.INSIDE12\");",
        "begin_line": 108,
        "end_line": 109,
        "comment": " INSIDE12. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE1",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE1\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE1\");",
        "begin_line": 112,
        "end_line": 113,
        "comment": " OUTSIDE1. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE2",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE2\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE2\");",
        "begin_line": 116,
        "end_line": 117,
        "comment": " OUTSIDE2. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE3",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE3\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE3\");",
        "begin_line": 120,
        "end_line": 121,
        "comment": " OUTSIDE3. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE4",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE4\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE4\");",
        "begin_line": 124,
        "end_line": 125,
        "comment": " OUTSIDE4. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE5",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE5\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE5\");",
        "begin_line": 128,
        "end_line": 129,
        "comment": " OUTSIDE5. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE6\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE6\");",
        "begin_line": 132,
        "end_line": 133,
        "comment": " OUTSIDE6. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE7",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE7\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE7\");",
        "begin_line": 136,
        "end_line": 137,
        "comment": " OUTSIDE7. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE8",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE8\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE8\");",
        "begin_line": 140,
        "end_line": 141,
        "comment": " OUTSIDE8. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE9",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE9\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE9\");",
        "begin_line": 144,
        "end_line": 145,
        "comment": " OUTSIDE9. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE10",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE10\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE10\");",
        "begin_line": 148,
        "end_line": 149,
        "comment": " OUTSIDE10. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE11",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE11\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE11\");",
        "begin_line": 152,
        "end_line": 153,
        "comment": " OUTSIDE11. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12",
        "snippet": "    public static final ItemLabelAnchor OUTSIDE12\n        = new ItemLabelAnchor(\"ItemLabelAnchor.OUTSIDE12\");",
        "begin_line": 156,
        "end_line": 157,
        "comment": " OUTSIDE12. "
    },
    {
        "class_name": "org.jfree.chart.labels.ItemLabelAnchor",
        "src_path": "source/org/jfree/chart/labels/ItemLabelAnchor.java",
        "signature": "org.jfree.chart.labels.ItemLabelAnchor.name",
        "snippet": "    private String name;",
        "begin_line": 160,
        "end_line": 160,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.DefaultShadowGenerator",
        "src_path": "source/org/jfree/chart/util/DefaultShadowGenerator.java",
        "signature": "org.jfree.chart.util.DefaultShadowGenerator.shadowSize",
        "snippet": "    private int shadowSize;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " The shadow size. "
    },
    {
        "class_name": "org.jfree.chart.util.DefaultShadowGenerator",
        "src_path": "source/org/jfree/chart/util/DefaultShadowGenerator.java",
        "signature": "org.jfree.chart.util.DefaultShadowGenerator.shadowColor",
        "snippet": "    private Color shadowColor;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " The shadow color. "
    },
    {
        "class_name": "org.jfree.chart.util.DefaultShadowGenerator",
        "src_path": "source/org/jfree/chart/util/DefaultShadowGenerator.java",
        "signature": "org.jfree.chart.util.DefaultShadowGenerator.shadowOpacity",
        "snippet": "    private float shadowOpacity;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " The shadow opacity. "
    },
    {
        "class_name": "org.jfree.chart.util.DefaultShadowGenerator",
        "src_path": "source/org/jfree/chart/util/DefaultShadowGenerator.java",
        "signature": "org.jfree.chart.util.DefaultShadowGenerator.angle",
        "snippet": "    private double angle;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " The shadow offset angle (in radians). "
    },
    {
        "class_name": "org.jfree.chart.util.DefaultShadowGenerator",
        "src_path": "source/org/jfree/chart/util/DefaultShadowGenerator.java",
        "signature": "org.jfree.chart.util.DefaultShadowGenerator.distance",
        "snippet": "    private int distance;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The shadow offset distance (in Java2D units). "
    },
    {
        "class_name": "org.jfree.data.general.AbstractDataset",
        "src_path": "source/org/jfree/data/general/AbstractDataset.java",
        "signature": "org.jfree.data.general.AbstractDataset.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1918768939869230744L;",
        "begin_line": 83,
        "end_line": 83,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.general.AbstractDataset",
        "src_path": "source/org/jfree/data/general/AbstractDataset.java",
        "signature": "org.jfree.data.general.AbstractDataset.group",
        "snippet": "    private DatasetGroup group;",
        "begin_line": 86,
        "end_line": 86,
        "comment": " The group that the dataset belongs to. "
    },
    {
        "class_name": "org.jfree.data.general.AbstractDataset",
        "src_path": "source/org/jfree/data/general/AbstractDataset.java",
        "signature": "org.jfree.data.general.AbstractDataset.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 89,
        "end_line": 89,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.LegendItemCollection",
        "src_path": "source/org/jfree/chart/LegendItemCollection.java",
        "signature": "org.jfree.chart.LegendItemCollection.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1365215565589815953L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.LegendItemCollection",
        "src_path": "source/org/jfree/chart/LegendItemCollection.java",
        "signature": "org.jfree.chart.LegendItemCollection.items",
        "snippet": "    private List items;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Storage for the legend items. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1902273207559319996L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.ZERO_INSETS",
        "snippet": "    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(\n            UnitType.ABSOLUTE, 0.0, 0.0, 0.0, 0.0);",
        "begin_line": 65,
        "end_line": 66,
        "comment": "\n     * A useful constant representing zero insets.\n     "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.unitType",
        "snippet": "    private UnitType unitType;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Absolute or relative units. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.top",
        "snippet": "    private double top;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The top insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.left",
        "snippet": "    private double left;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " The left insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.bottom",
        "snippet": "    private double bottom;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The bottom insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.right",
        "snippet": "    private double right;",
        "begin_line": 81,
        "end_line": 81,
        "comment": " The right insets. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 6531925392288519884L;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.ABSOLUTE",
        "snippet": "    public static final UnitType ABSOLUTE = new UnitType(\"UnitType.ABSOLUTE\");",
        "begin_line": 56,
        "end_line": 56,
        "comment": " Absolute. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.RELATIVE",
        "snippet": "    public static final UnitType RELATIVE = new UnitType(\"UnitType.RELATIVE\");",
        "begin_line": 59,
        "end_line": 59,
        "comment": " Relative. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.name",
        "snippet": "    private String name;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.ResourceBundleWrapper",
        "src_path": "source/org/jfree/chart/util/ResourceBundleWrapper.java",
        "signature": "org.jfree.chart.util.ResourceBundleWrapper.noCodeBaseClassLoader",
        "snippet": "    private static URLClassLoader noCodeBaseClassLoader;",
        "begin_line": 77,
        "end_line": 77,
        "comment": "\r\n     * A special class loader with no code base lookup.  This field may be\r\n     * <code>null</code> (the field is only initialised if removeCodeBase() is\r\n     * called from an applet.\r\n     "
    },
    {
        "class_name": "org.jfree.data.KeyedObjects2D",
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "signature": "org.jfree.data.KeyedObjects2D.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1015873563138522374L;",
        "begin_line": 59,
        "end_line": 59,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.KeyedObjects2D",
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "signature": "org.jfree.data.KeyedObjects2D.rowKeys",
        "snippet": "    private List rowKeys;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The row keys. "
    },
    {
        "class_name": "org.jfree.data.KeyedObjects2D",
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "signature": "org.jfree.data.KeyedObjects2D.columnKeys",
        "snippet": "    private List columnKeys;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " The column keys. "
    },
    {
        "class_name": "org.jfree.data.KeyedObjects2D",
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "signature": "org.jfree.data.KeyedObjects2D.rows",
        "snippet": "    private List rows;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " The row data. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1247553218442497391L;",
        "begin_line": 188,
        "end_line": 188,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.plot",
        "snippet": "    private CategoryPlot plot;",
        "begin_line": 191,
        "end_line": 191,
        "comment": " The plot that the renderer is assigned to. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.itemLabelGeneratorList",
        "snippet": "    private ObjectList itemLabelGeneratorList;",
        "begin_line": 194,
        "end_line": 194,
        "comment": " A list of item label generators (one per series). "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.baseItemLabelGenerator",
        "snippet": "    private CategoryItemLabelGenerator baseItemLabelGenerator;",
        "begin_line": 197,
        "end_line": 197,
        "comment": " The base item label generator. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.toolTipGeneratorList",
        "snippet": "    private ObjectList toolTipGeneratorList;",
        "begin_line": 200,
        "end_line": 200,
        "comment": " A list of tool tip generators (one per series). "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.baseToolTipGenerator",
        "snippet": "    private CategoryToolTipGenerator baseToolTipGenerator;",
        "begin_line": 203,
        "end_line": 203,
        "comment": " The base tool tip generator. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.urlGeneratorList",
        "snippet": "    private ObjectList urlGeneratorList;",
        "begin_line": 206,
        "end_line": 206,
        "comment": " A list of label generators (one per series). "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.baseURLGenerator",
        "snippet": "    private CategoryURLGenerator baseURLGenerator;",
        "begin_line": 209,
        "end_line": 209,
        "comment": " The base label generator. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.legendItemLabelGenerator",
        "snippet": "    private CategorySeriesLabelGenerator legendItemLabelGenerator;",
        "begin_line": 212,
        "end_line": 212,
        "comment": " The legend item label generator. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.legendItemToolTipGenerator",
        "snippet": "    private CategorySeriesLabelGenerator legendItemToolTipGenerator;",
        "begin_line": 215,
        "end_line": 215,
        "comment": " The legend item tool tip generator. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.legendItemURLGenerator",
        "snippet": "    private CategorySeriesLabelGenerator legendItemURLGenerator;",
        "begin_line": 218,
        "end_line": 218,
        "comment": " The legend item URL generator. "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.backgroundAnnotations",
        "snippet": "    private List backgroundAnnotations;",
        "begin_line": 226,
        "end_line": 226,
        "comment": "\r\n     * Annotations to be drawn in the background layer ('underneath' the data\r\n     * items).\r\n     *\r\n     * @since 1.2.0\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.foregroundAnnotations",
        "snippet": "    private List foregroundAnnotations;",
        "begin_line": 234,
        "end_line": 234,
        "comment": "\r\n     * Annotations to be drawn in the foreground layer ('on top' of the data\r\n     * items).\r\n     *\r\n     * @since 1.2.0\r\n     "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.rowCount",
        "snippet": "    private transient int rowCount;",
        "begin_line": 237,
        "end_line": 237,
        "comment": " The number of rows in the dataset (temporary record). "
    },
    {
        "class_name": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer",
        "src_path": "source/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java",
        "signature": "org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.columnCount",
        "snippet": "    private transient int columnCount;",
        "begin_line": 240,
        "end_line": 240,
        "comment": " The number of columns in the dataset (temporary record). "
    },
    {
        "class_name": "org.jfree.data.KeyedObjects",
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "signature": "org.jfree.data.KeyedObjects.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1321582394193530984L;",
        "begin_line": 64,
        "end_line": 64,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.KeyedObjects",
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "signature": "org.jfree.data.KeyedObjects.data",
        "snippet": "    private List data;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " Storage for the data. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEvent",
        "src_path": "source/org/jfree/chart/event/ChartChangeEvent.java",
        "signature": "org.jfree.chart.event.ChartChangeEvent.type",
        "snippet": "    private ChartChangeEventType type;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " The type of event. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEvent",
        "src_path": "source/org/jfree/chart/event/ChartChangeEvent.java",
        "signature": "org.jfree.chart.event.ChartChangeEvent.chart",
        "snippet": "    private JFreeChart chart;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " The chart that generated the event. "
    },
    {
        "class_name": "org.jfree.chart.util.SortOrder",
        "src_path": "source/org/jfree/chart/util/SortOrder.java",
        "signature": "org.jfree.chart.util.SortOrder.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2124469847758108312L;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.SortOrder",
        "src_path": "source/org/jfree/chart/util/SortOrder.java",
        "signature": "org.jfree.chart.util.SortOrder.ASCENDING",
        "snippet": "    public static final SortOrder ASCENDING = new SortOrder(\n            \"SortOrder.ASCENDING\");",
        "begin_line": 59,
        "end_line": 60,
        "comment": " Ascending order. "
    },
    {
        "class_name": "org.jfree.chart.util.SortOrder",
        "src_path": "source/org/jfree/chart/util/SortOrder.java",
        "signature": "org.jfree.chart.util.SortOrder.DESCENDING",
        "snippet": "    public static final SortOrder DESCENDING = new SortOrder(\n            \"SortOrder.DESCENDING\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " Descending order. "
    },
    {
        "class_name": "org.jfree.chart.util.SortOrder",
        "src_path": "source/org/jfree/chart/util/SortOrder.java",
        "signature": "org.jfree.chart.util.SortOrder.name",
        "snippet": "    private String name;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.data.SelectableValue",
        "src_path": "source/org/jfree/data/SelectableValue.java",
        "signature": "org.jfree.data.SelectableValue.value",
        "snippet": "    private Number value;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " The value (<code>null</code> is permitted). "
    },
    {
        "class_name": "org.jfree.data.SelectableValue",
        "src_path": "source/org/jfree/data/SelectableValue.java",
        "signature": "org.jfree.data.SelectableValue.selected",
        "snippet": "    private boolean selected;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " Is the item selected? "
    },
    {
        "class_name": "org.jfree.chart.labels.StandardCategorySeriesLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/StandardCategorySeriesLabelGenerator.java",
        "signature": "org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 4630760091523940820L;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.labels.StandardCategorySeriesLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/StandardCategorySeriesLabelGenerator.java",
        "signature": "org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.DEFAULT_LABEL_FORMAT",
        "snippet": "    public static final String DEFAULT_LABEL_FORMAT = \"{0}\";",
        "begin_line": 65,
        "end_line": 65,
        "comment": " The default item label format. "
    },
    {
        "class_name": "org.jfree.chart.labels.StandardCategorySeriesLabelGenerator",
        "src_path": "source/org/jfree/chart/labels/StandardCategorySeriesLabelGenerator.java",
        "signature": "org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.formatPattern",
        "snippet": "    private String formatPattern;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " The format pattern. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5481917022435735602L;",
        "begin_line": 52,
        "end_line": 52,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.GENERAL",
        "snippet": "    public static final ChartChangeEventType GENERAL\n            = new ChartChangeEventType(\"ChartChangeEventType.GENERAL\");",
        "begin_line": 55,
        "end_line": 56,
        "comment": " GENERAL. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.NEW_DATASET",
        "snippet": "    public static final ChartChangeEventType NEW_DATASET\n            = new ChartChangeEventType(\"ChartChangeEventType.NEW_DATASET\");",
        "begin_line": 59,
        "end_line": 60,
        "comment": " NEW_DATASET. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED",
        "snippet": "    public static final ChartChangeEventType DATASET_UPDATED\n            = new ChartChangeEventType(\"ChartChangeEventType.DATASET_UPDATED\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " DATASET_UPDATED. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.name",
        "snippet": "    private String name;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.BooleanList",
        "src_path": "source/org/jfree/chart/util/BooleanList.java",
        "signature": "org.jfree.chart.util.BooleanList.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8543170333219422042L;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.event.DatasetChangeEvent",
        "src_path": "source/org/jfree/data/event/DatasetChangeEvent.java",
        "signature": "org.jfree.data.event.DatasetChangeEvent.dataset",
        "snippet": "    private Dataset dataset;",
        "begin_line": 63,
        "end_line": 63,
        "comment": "\r\n     * The dataset that generated the change event.\r\n     "
    },
    {
        "class_name": "org.jfree.data.event.DatasetChangeEvent",
        "src_path": "source/org/jfree/data/event/DatasetChangeEvent.java",
        "signature": "org.jfree.data.event.DatasetChangeEvent.info",
        "snippet": "    private DatasetChangeInfo info;",
        "begin_line": 70,
        "end_line": 70,
        "comment": "\r\n     * Some details of the change.\r\n     * \r\n     * @since 1.2.0\r\n     "
    }
]