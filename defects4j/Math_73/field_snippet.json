[
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.functionValueAccuracy",
        "snippet": "    protected double functionValueAccuracy;",
        "begin_line": 35,
        "end_line": 35,
        "comment": " Maximum error of function. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.defaultFunctionValueAccuracy",
        "snippet": "    protected double defaultFunctionValueAccuracy;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Default maximum error of function. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.resultComputed",
        "snippet": "    protected boolean resultComputed = false;",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Indicates where a root has been computed. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.result",
        "snippet": "    protected double result;",
        "begin_line": 44,
        "end_line": 44,
        "comment": " The last computed root. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.functionValue",
        "snippet": "    protected double functionValue;",
        "begin_line": 47,
        "end_line": 47,
        "comment": " Value of the function at the last computed result. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverImpl.java",
        "signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl.f",
        "snippet": "    @Deprecated\n    protected UnivariateRealFunction f;",
        "begin_line": 54,
        "end_line": 55,
        "comment": " The function to solve.\n     * @deprecated as of 2.0 the function to solve is passed as an argument\n     * to the {@link #solve(UnivariateRealFunction, double, double)} or\n     * {@link UnivariateRealSolverImpl#solve(UnivariateRealFunction, double, double, double)}\n     * method. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BrentSolver",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "signature": "org.apache.commons.math.analysis.solvers.BrentSolver.NON_BRACKETING_MESSAGE",
        "snippet": "    private static final String NON_BRACKETING_MESSAGE =\n        \"function values at endpoints do not have different signs.  \" +\n        \"Endpoints: [{0}, {1}], Values: [{2}, {3}]\";",
        "begin_line": 36,
        "end_line": 38,
        "comment": " Error message for non-bracketing interval. "
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BrentSolver",
        "src_path": "src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "signature": "org.apache.commons.math.analysis.solvers.BrentSolver.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7694577816772532779L;",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -5128983364075381060L;",
        "begin_line": 40,
        "end_line": 40,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.pattern",
        "snippet": "    private final String pattern;",
        "begin_line": 45,
        "end_line": 45,
        "comment": "\n     * Pattern used to build the message.\n     "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.arguments",
        "snippet": "    private final Object[] arguments;",
        "begin_line": 50,
        "end_line": 50,
        "comment": "\n     * Arguments used to build the message.\n     "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = 7705628723242533939L;",
        "begin_line": 204,
        "end_line": 204,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = -3394748305449283486L;",
        "begin_line": 233,
        "end_line": 233,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = 279461544586092584L;",
        "begin_line": 262,
        "end_line": 262,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = -6555453980658317913L;",
        "begin_line": 308,
        "end_line": 308,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = -95247648156277208L;",
        "begin_line": 350,
        "end_line": 350,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = 6134247282754009421L;",
        "begin_line": 379,
        "end_line": 379,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = 7304273322489425799L;",
        "begin_line": 408,
        "end_line": 408,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = -3075660477939965216L;",
        "begin_line": 437,
        "end_line": 437,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = -1103502177342465975L;",
        "begin_line": 469,
        "end_line": 469,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.MathRuntimeException",
        "src_path": "src/main/java/org/apache/commons/math/MathRuntimeException.java",
        "signature": "org.apache.commons.math.MathRuntimeException.serialVersionUID",
        "snippet": "            private static final long serialVersionUID = -201865440834027016L;",
        "begin_line": 498,
        "end_line": 498,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.absoluteAccuracy",
        "snippet": "    protected double absoluteAccuracy;",
        "begin_line": 31,
        "end_line": 31,
        "comment": " Maximum absolute error. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.relativeAccuracy",
        "snippet": "    protected double relativeAccuracy;",
        "begin_line": 34,
        "end_line": 34,
        "comment": " Maximum relative error. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.maximalIterationCount",
        "snippet": "    protected int maximalIterationCount;",
        "begin_line": 37,
        "end_line": 37,
        "comment": " Maximum number of iterations. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.defaultAbsoluteAccuracy",
        "snippet": "    protected double defaultAbsoluteAccuracy;",
        "begin_line": 40,
        "end_line": 40,
        "comment": " Default maximum absolute error. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.defaultRelativeAccuracy",
        "snippet": "    protected double defaultRelativeAccuracy;",
        "begin_line": 43,
        "end_line": 43,
        "comment": " Default maximum relative error. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.defaultMaximalIterationCount",
        "snippet": "    protected int defaultMaximalIterationCount;",
        "begin_line": 46,
        "end_line": 46,
        "comment": " Default maximum number of iterations. "
    },
    {
        "class_name": "org.apache.commons.math.ConvergingAlgorithmImpl",
        "src_path": "src/main/java/org/apache/commons/math/ConvergingAlgorithmImpl.java",
        "signature": "org.apache.commons.math.ConvergingAlgorithmImpl.iterationCount",
        "snippet": "    protected int iterationCount;",
        "begin_line": 50,
        "end_line": 50,
        "comment": " The last iteration count. "
    }
]