[
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.endRow",
        "snippet": "            private double endRow;",
        "begin_line": 235,
        "end_line": 235,
        "comment": " Last row index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.columnSum",
        "snippet": "            private double columnSum;",
        "begin_line": 238,
        "end_line": 238,
        "comment": " Sum of absolute values on one column. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.maxColSum",
        "snippet": "            private double maxColSum;",
        "begin_line": 241,
        "end_line": 241,
        "comment": " Maximal sum across all columns. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.sum",
        "snippet": "            private double sum;",
        "begin_line": 273,
        "end_line": 273,
        "comment": " Sum of squared entries. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.startRow",
        "snippet": "            private int startRow;",
        "begin_line": 348,
        "end_line": 348,
        "comment": " Initial row index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealMatrix.java",
        "signature": "org.apache.commons.math.linear.AbstractRealMatrix.startColumn",
        "snippet": "            private int startColumn;",
        "begin_line": 351,
        "end_line": 351,
        "comment": " Initial column index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealMatrix.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -5962461716457143437L;",
        "begin_line": 34,
        "end_line": 34,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealMatrix.rows",
        "snippet": "    private final int rows;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " Number of rows of the matrix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealMatrix.columns",
        "snippet": "    private final int columns;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Number of columns of the matrix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealMatrix",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealMatrix.entries",
        "snippet": "    private final OpenIntToDoubleHashMap entries;",
        "begin_line": 40,
        "end_line": 40,
        "comment": " Storage for (sparse) matrix elements. "
    }
]