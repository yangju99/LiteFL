[
    {
        "name": "SimpleRegression.SimpleRegression#88",
        "is_bug": false,
        "src_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "class_name": "org.apache.commons.math.stat.regression.SimpleRegression",
        "signature": "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression()",
        "snippet": "    public SimpleRegression() {\n        super();\n    }\n",
        "begin_line": 88,
        "end_line": 90,
        "comment": "\n     * Create an empty SimpleRegression instance\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3333
        },
        "num_failing_tests": 1
    },
    {
        "name": "SimpleRegression.addData#105",
        "is_bug": false,
        "src_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "class_name": "org.apache.commons.math.stat.regression.SimpleRegression",
        "signature": "org.apache.commons.math.stat.regression.SimpleRegression.addData(double, double)",
        "snippet": "    public void addData(double x, double y) {\n        if (n == 0) {\n            xbar = x;\n            ybar = y;\n        } else {\n            double dx = x - xbar;\n            double dy = y - ybar;\n            sumXX += dx * dx * (double) n / (double) (n + 1.0);\n            sumYY += dy * dy * (double) n / (double) (n + 1.0);\n            sumXY += dx * dy * (double) n / (double) (n + 1.0);\n            xbar += dx / (double) (n + 1.0);\n            ybar += dy / (double) (n + 1.0);\n        }\n        sumX += x;\n        sumY += y;\n        n++;\n    }\n",
        "begin_line": 105,
        "end_line": 121,
        "comment": "\n     * Adds the observation (x,y) to the regression data set.\n     * <p>\n     * Uses updating formulas for means and sums of squares defined in \n     * \"Algorithms for Computing the Sample Variance: Analysis and\n     * Recommendations\", Chan, T.F., Golub, G.H., and LeVeque, R.J. \n     * 1983, American Statistician, vol. 37, pp. 242-247, referenced in\n     * Weisberg, S. \"Applied Linear Regression\". 2nd Ed. 1985\n     *\n     *\n     * @param x independent variable value\n     * @param y dependent variable value\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3333
        },
        "num_failing_tests": 1
    },
    {
        "name": "SimpleRegression.getSumSquaredErrors#263",
        "is_bug": true,
        "src_path": "src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "class_name": "org.apache.commons.math.stat.regression.SimpleRegression",
        "signature": "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors()",
        "snippet": "    public double getSumSquaredErrors() {\n        return sumYY - sumXY * sumXY / sumXX;\n    }\n",
        "begin_line": 263,
        "end_line": 265,
        "comment": "\n     * Returns the <a href=\"http://www.xycoon.com/SumOfSquares.htm\">\n     * sum of squared errors</a> (SSE) associated with the regression \n     * model.\n     * <p>\n     * The sum is computed using the computational formula\n     * <p>\n     * <code>SSE = SYY - (SXY * SXY / SXX)</code>\n     * <p>\n     * where <code>SYY</code> is the sum of the squared deviations of the y\n     * values about their mean, <code>SXX</code> is similarly defined and\n     * <code>SXY</code> is the sum of the products of x and y mean deviations.\n     * <p>\n     * The sums are accumulated using the updating algorithm referenced in \n     * {@link #addData}.  \n     * <p>\n     * The return value is constrained to be non-negative - i.e., if due to \n     * rounding errors the computational formula returns a negative result, \n     * 0 is returned.\n     * <p>\n     * <strong>Preconditions</strong>: <ul>\n     * <li>At least two observations (with at least two different x values)\n     * must have been added before invoking this method. If this method is \n     * invoked before a model can be estimated, <code>Double,NaN</code> is\n     * returned.\n     * </li></ul>\n     *\n     * @return sum of squared errors associated with the regression model\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3333
        },
        "num_failing_tests": 1
    }
]