[
    {
        "class_name": "org.jfree.chart.util.junit.ShapeListTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/util/junit/ShapeListTests.java",
        "signature": "org.jfree.chart.util.junit.ShapeListTests.suite()",
        "snippet": "    public static Test suite() {\n        return new TestSuite(ShapeListTests.class);\n    }\n",
        "begin_line": 68,
        "end_line": 70,
        "comment": "\r\n     * Returns the tests as a test suite.\r\n     *\r\n     * @return The test suite.\r\n     ",
        "child_ranges": [
            "(line 69,col 9)-(line 69,col 51)"
        ]
    },
    {
        "class_name": "org.jfree.chart.util.junit.ShapeListTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/util/junit/ShapeListTests.java",
        "signature": "org.jfree.chart.util.junit.ShapeListTests.ShapeListTests(java.lang.String)",
        "snippet": "    public ShapeListTests(final String name) {\n        super(name);\n    }\n",
        "begin_line": 77,
        "end_line": 79,
        "comment": "\r\n     * Constructs a new set of tests.\r\n     *\r\n     * @param name  the name of the tests.\r\n     ",
        "child_ranges": [
            "(line 78,col 9)-(line 78,col 20)"
        ]
    },
    {
        "class_name": "org.jfree.chart.util.junit.ShapeListTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/util/junit/ShapeListTests.java",
        "signature": "org.jfree.chart.util.junit.ShapeListTests.testEquals()",
        "snippet": "    public void testEquals() {\n        ShapeList l1 = new ShapeList();\n        l1.setShape(0, new Rectangle(1, 2, 3, 4));\n        l1.setShape(1, new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        l1.setShape(2, null);\n\n        ShapeList l2 = new ShapeList();\n        l2.setShape(0, new Rectangle(1, 2, 3, 4));\n        l2.setShape(1, new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        l2.setShape(2, null);\n\n        assertTrue(l1.equals(l2));\n        assertTrue(l2.equals(l2));\n    }\n",
        "begin_line": 84,
        "end_line": 97,
        "comment": "\r\n     * Tests the equals() method.\r\n     ",
        "child_ranges": [
            "(line 85,col 9)-(line 85,col 39)",
            "(line 86,col 9)-(line 86,col 50)",
            "(line 87,col 9)-(line 87,col 62)",
            "(line 88,col 9)-(line 88,col 29)",
            "(line 90,col 9)-(line 90,col 39)",
            "(line 91,col 9)-(line 91,col 50)",
            "(line 92,col 9)-(line 92,col 62)",
            "(line 93,col 9)-(line 93,col 29)",
            "(line 95,col 9)-(line 95,col 34)",
            "(line 96,col 9)-(line 96,col 34)"
        ]
    },
    {
        "class_name": "org.jfree.chart.util.junit.ShapeListTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/util/junit/ShapeListTests.java",
        "signature": "org.jfree.chart.util.junit.ShapeListTests.testCloning()",
        "snippet": "    public void testCloning() {\n\n        ShapeList l1 = new ShapeList();\n        l1.setShape(0, new Rectangle(1, 2, 3, 4));\n        l1.setShape(1, new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        l1.setShape(2, null);\n\n        ShapeList l2 = null;\n        try {\n            l2 = (ShapeList) l1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        assertTrue(l1 != l2);\n        assertTrue(l1.getClass() == l2.getClass());\n        assertTrue(l1.equals(l2));\n\n        l2.setShape(0, new Rectangle(5, 6, 7, 8));\n        assertFalse(l1.equals(l2));\n\n    }\n",
        "begin_line": 102,
        "end_line": 123,
        "comment": "\r\n     * Confirm that cloning works.\r\n     ",
        "child_ranges": [
            "(line 104,col 9)-(line 104,col 39)",
            "(line 105,col 9)-(line 105,col 50)",
            "(line 106,col 9)-(line 106,col 62)",
            "(line 107,col 9)-(line 107,col 29)",
            "(line 109,col 9)-(line 109,col 28)",
            "(line 110,col 9)-(line 115,col 9)",
            "(line 116,col 9)-(line 116,col 29)",
            "(line 117,col 9)-(line 117,col 51)",
            "(line 118,col 9)-(line 118,col 34)",
            "(line 120,col 9)-(line 120,col 50)",
            "(line 121,col 9)-(line 121,col 35)"
        ]
    },
    {
        "class_name": "org.jfree.chart.util.junit.ShapeListTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/util/junit/ShapeListTests.java",
        "signature": "org.jfree.chart.util.junit.ShapeListTests.testSerialization()",
        "snippet": "    public void testSerialization() {\n\n        ShapeList l1 = new ShapeList();\n        l1.setShape(0, new Rectangle(1, 2, 3, 4));\n        l1.setShape(1, new Line2D.Double(1.0, 2.0, 3.0, 4.0));\n        l1.setShape(2, null);\n\n        ShapeList l2 = null;\n\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(l1);\n            out.close();\n\n            ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(\n            \t\tbuffer.toByteArray()));\n            l2 = (ShapeList) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n        assertEquals(l1, l2);\n\n    }\n",
        "begin_line": 128,
        "end_line": 153,
        "comment": "\r\n     * Serialize an instance, restore it, and check for equality.\r\n     ",
        "child_ranges": [
            "(line 130,col 9)-(line 130,col 39)",
            "(line 131,col 9)-(line 131,col 50)",
            "(line 132,col 9)-(line 132,col 62)",
            "(line 133,col 9)-(line 133,col 29)",
            "(line 135,col 9)-(line 135,col 28)",
            "(line 137,col 9)-(line 150,col 9)",
            "(line 151,col 9)-(line 151,col 29)"
        ]
    }
]