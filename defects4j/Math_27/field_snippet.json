[
    {
        "class_name": "org.apache.commons.math3.util.ArithmeticUtils",
        "src_path": "src/main/java/org/apache/commons/math3/util/ArithmeticUtils.java",
        "signature": "org.apache.commons.math3.util.ArithmeticUtils.FACTORIALS",
        "snippet": "    static final long[] FACTORIALS = new long[] {\n                       1l,                  1l,                   2l,\n                       6l,                 24l,                 120l,\n                     720l,               5040l,               40320l,\n                  362880l,            3628800l,            39916800l,\n               479001600l,         6227020800l,         87178291200l,\n           1307674368000l,     20922789888000l,     355687428096000l,\n        6402373705728000l, 121645100408832000l, 2432902008176640000l };",
        "begin_line": 35,
        "end_line": 42,
        "comment": " All long-representable factorials "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.PI",
        "snippet": "    public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361080883e-9;",
        "begin_line": 83,
        "end_line": 83,
        "comment": " Archimede's constant PI, ratio of circle circumference to diameter. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.E",
        "snippet": "    public static final double E = 2850325.0 / 1048576.0 + 8.254840070411028747e-8;",
        "begin_line": 86,
        "end_line": 86,
        "comment": " Napier's constant e, base of the natural logarithm. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_MAX_INDEX",
        "snippet": "    static final int EXP_INT_TABLE_MAX_INDEX = 750;",
        "begin_line": 89,
        "end_line": 89,
        "comment": " Index of exp(0) in the array of integer exponentials. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.EXP_INT_TABLE_LEN",
        "snippet": "    static final int EXP_INT_TABLE_LEN = EXP_INT_TABLE_MAX_INDEX * 2;",
        "begin_line": 91,
        "end_line": 91,
        "comment": " Length of the array of integer exponentials. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.LN_MANT_LEN",
        "snippet": "    static final int LN_MANT_LEN = 1024;",
        "begin_line": 93,
        "end_line": 93,
        "comment": " Logarithm table length. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.EXP_FRAC_TABLE_LEN",
        "snippet": "    static final int EXP_FRAC_TABLE_LEN = 1025; // 0, 1/1024, ... 1024/1024",
        "begin_line": 95,
        "end_line": 95,
        "comment": " 0, 1/1024, ... 1024/1024"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.RECOMPUTE_TABLES_AT_RUNTIME",
        "snippet": "    private static final boolean RECOMPUTE_TABLES_AT_RUNTIME = false;",
        "begin_line": 104,
        "end_line": 104,
        "comment": " Indicator for tables initialization.\n     * <p>\n     * This compile-time constant should be set to true only if one explicitly\n     * wants to compute the tables at class loading time instead of using the\n     * already computed ones provided as literal arrays below.\n     * </p>\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.LN_2_A",
        "snippet": "    private static final double LN_2_A = 0.693147063255310059;",
        "begin_line": 107,
        "end_line": 107,
        "comment": " log(2) (high bits). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.LN_2_B",
        "snippet": "    private static final double LN_2_B = 1.17304635250823482e-7;",
        "begin_line": 110,
        "end_line": 110,
        "comment": " log(2) (low bits). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.LN_QUICK_COEF",
        "snippet": "    private static final double LN_QUICK_COEF[][] = {\n        {1.0, 5.669184079525E-24},\n        {-0.25, -0.25},\n        {0.3333333134651184, 1.986821492305628E-8},\n        {-0.25, -6.663542893624021E-14},\n        {0.19999998807907104, 1.1921056801463227E-8},\n        {-0.1666666567325592, -7.800414592973399E-9},\n        {0.1428571343421936, 5.650007086920087E-9},\n        {-0.12502530217170715, -7.44321345601866E-11},\n        {0.11113807559013367, 9.219544613762692E-9},\n    };",
        "begin_line": 113,
        "end_line": 123,
        "comment": " Coefficients for log, when input 0.99 < x < 1.01. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.LN_HI_PREC_COEF",
        "snippet": "    private static final double LN_HI_PREC_COEF[][] = {\n        {1.0, -6.032174644509064E-23},\n        {-0.25, -0.25},\n        {0.3333333134651184, 1.9868161777724352E-8},\n        {-0.2499999701976776, -2.957007209750105E-8},\n        {0.19999954104423523, 1.5830993332061267E-10},\n        {-0.16624879837036133, -2.6033824355191673E-8}\n    };",
        "begin_line": 126,
        "end_line": 133,
        "comment": " Coefficients for log in the range of 1.0 < x < 1.0 + 2^-10. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.SINE_TABLE_LEN",
        "snippet": "    private static final int SINE_TABLE_LEN = 14;",
        "begin_line": 136,
        "end_line": 136,
        "comment": " Sine, Cosine, Tangent tables are for 0, 1/8, 2/8, ... 13/8 = PI/2 approx. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.SINE_TABLE_A",
        "snippet": "    private static final double SINE_TABLE_A[] =\n        {\n        +0.0d,\n        +0.1246747374534607d,\n        +0.24740394949913025d,\n        +0.366272509098053d,\n        +0.4794255495071411d,\n        +0.5850973129272461d,\n        +0.6816387176513672d,\n        +0.7675435543060303d,\n        +0.8414709568023682d,\n        +0.902267575263977d,\n        +0.9489846229553223d,\n        +0.9808930158615112d,\n        +0.9974949359893799d,\n        +0.9985313415527344d,\n    };",
        "begin_line": 139,
        "end_line": 155,
        "comment": " Sine table (high bits). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.SINE_TABLE_B",
        "snippet": "    private static final double SINE_TABLE_B[] =\n        {\n        +0.0d,\n        -4.068233003401932E-9d,\n        +9.755392680573412E-9d,\n        +1.9987994582857286E-8d,\n        -1.0902938113007961E-8d,\n        -3.9986783938944604E-8d,\n        +4.23719669792332E-8d,\n        -5.207000323380292E-8d,\n        +2.800552834259E-8d,\n        +1.883511811213715E-8d,\n        -3.5997360512765566E-9d,\n        +4.116164446561962E-8d,\n        +5.0614674548127384E-8d,\n        -1.0129027912496858E-9d,\n    };",
        "begin_line": 158,
        "end_line": 174,
        "comment": " Sine table (low bits). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.COSINE_TABLE_A",
        "snippet": "    private static final double COSINE_TABLE_A[] =\n        {\n        +1.0d,\n        +0.9921976327896118d,\n        +0.9689123630523682d,\n        +0.9305076599121094d,\n        +0.8775825500488281d,\n        +0.8109631538391113d,\n        +0.7316888570785522d,\n        +0.6409968137741089d,\n        +0.5403022766113281d,\n        +0.4311765432357788d,\n        +0.3153223395347595d,\n        +0.19454771280288696d,\n        +0.07073719799518585d,\n        -0.05417713522911072d,\n    };",
        "begin_line": 177,
        "end_line": 193,
        "comment": " Cosine table (high bits). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.COSINE_TABLE_B",
        "snippet": "    private static final double COSINE_TABLE_B[] =\n        {\n        +0.0d,\n        +3.4439717236742845E-8d,\n        +5.865827662008209E-8d,\n        -3.7999795083850525E-8d,\n        +1.184154459111628E-8d,\n        -3.43338934259355E-8d,\n        +1.1795268640216787E-8d,\n        +4.438921624363781E-8d,\n        +2.925681159240093E-8d,\n        -2.6437112632041807E-8d,\n        +2.2860509143963117E-8d,\n        -4.813899778443457E-9d,\n        +3.6725170580355583E-9d,\n        +2.0217439756338078E-10d,\n    };",
        "begin_line": 196,
        "end_line": 212,
        "comment": " Cosine table (low bits). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.TANGENT_TABLE_A",
        "snippet": "    private static final double TANGENT_TABLE_A[] =\n        {\n        +0.0d,\n        +0.1256551444530487d,\n        +0.25534194707870483d,\n        +0.3936265707015991d,\n        +0.5463024377822876d,\n        +0.7214844226837158d,\n        +0.9315965175628662d,\n        +1.1974215507507324d,\n        +1.5574076175689697d,\n        +2.092571258544922d,\n        +3.0095696449279785d,\n        +5.041914939880371d,\n        +14.101419448852539d,\n        -18.430862426757812d,\n    };",
        "begin_line": 216,
        "end_line": 232,
        "comment": " Tangent table, used by atan() (high bits). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.TANGENT_TABLE_B",
        "snippet": "    private static final double TANGENT_TABLE_B[] =\n        {\n        +0.0d,\n        -7.877917738262007E-9d,\n        -2.5857668567479893E-8d,\n        +5.2240336371356666E-9d,\n        +5.206150291559893E-8d,\n        +1.8307188599677033E-8d,\n        -5.7618793749770706E-8d,\n        +7.848361555046424E-8d,\n        +1.0708593250394448E-7d,\n        +1.7827257129423813E-8d,\n        +2.893485277253286E-8d,\n        +3.1660099222737955E-7d,\n        +4.983191803254889E-7d,\n        -3.356118100840571E-7d,\n    };",
        "begin_line": 235,
        "end_line": 251,
        "comment": " Tangent table, used by atan() (low bits). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.RECIP_2PI",
        "snippet": "    private static final long RECIP_2PI[] = new long[] {\n        (0x28be60dbL << 32) | 0x9391054aL,\n        (0x7f09d5f4L << 32) | 0x7d4d3770L,\n        (0x36d8a566L << 32) | 0x4f10e410L,\n        (0x7f9458eaL << 32) | 0xf7aef158L,\n        (0x6dc91b8eL << 32) | 0x909374b8L,\n        (0x01924bbaL << 32) | 0x82746487L,\n        (0x3f877ac7L << 32) | 0x2c4a69cfL,\n        (0xba208d7dL << 32) | 0x4baed121L,\n        (0x3a671c09L << 32) | 0xad17df90L,\n        (0x4e64758eL << 32) | 0x60d4ce7dL,\n        (0x272117e2L << 32) | 0xef7e4a0eL,\n        (0xc7fe25ffL << 32) | 0xf7816603L,\n        (0xfbcbc462L << 32) | 0xd6829b47L,\n        (0xdb4d9fb3L << 32) | 0xc9f2c26dL,\n        (0xd3d18fd9L << 32) | 0xa797fa8bL,\n        (0x5d49eeb1L << 32) | 0xfaf97c5eL,\n        (0xcf41ce7dL << 32) | 0xe294a4baL,\n         0x9afed7ecL << 32  };",
        "begin_line": 254,
        "end_line": 272,
        "comment": " Bits of 1/(2*pi), need for reducePayneHanek(). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.PI_O_4_BITS",
        "snippet": "    private static final long PI_O_4_BITS[] = new long[] {\n        (0xc90fdaa2L << 32) | 0x2168c234L,\n        (0xc4c6628bL << 32) | 0x80dc1cd1L };",
        "begin_line": 275,
        "end_line": 277,
        "comment": " Bits of pi/4, need for reducePayneHanek(). "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.EIGHTHS",
        "snippet": "    private static final double EIGHTHS[] = {0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0, 1.125, 1.25, 1.375, 1.5, 1.625};",
        "begin_line": 283,
        "end_line": 283,
        "comment": " Eighths.\n     * This is used by sinQ, because its faster to do a table lookup than\n     * a multiply in this time-critical routine\n     "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.CBRTTWO",
        "snippet": "    private static final double CBRTTWO[] = { 0.6299605249474366,\n                                            0.7937005259840998,\n                                            1.0,\n                                            1.2599210498948732,\n                                            1.5874010519681994 };",
        "begin_line": 286,
        "end_line": 290,
        "comment": " Table of 2^((n+2)/3) "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.HEX_40000000",
        "snippet": "    private static final long HEX_40000000 = 0x40000000L; // 1073741824L",
        "begin_line": 303,
        "end_line": 303,
        "comment": " 1073741824L"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.MASK_30BITS",
        "snippet": "    private static final long MASK_30BITS = -1L - (HEX_40000000 -1); // 0xFFFFFFFFC0000000L;",
        "begin_line": 306,
        "end_line": 306,
        "comment": " 0xFFFFFFFFC0000000L;"
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.TWO_POWER_52",
        "snippet": "    private static final double TWO_POWER_52 = 4503599627370496.0;",
        "begin_line": 309,
        "end_line": 309,
        "comment": " 2^52 - double numbers this large must be integral (no fraction) or NaN or Infinite "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_3",
        "snippet": "    private static final double F_1_3 = 1d / 3d;",
        "begin_line": 312,
        "end_line": 312,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_5",
        "snippet": "    private static final double F_1_5 = 1d / 5d;",
        "begin_line": 314,
        "end_line": 314,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_7",
        "snippet": "    private static final double F_1_7 = 1d / 7d;",
        "begin_line": 316,
        "end_line": 316,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_9",
        "snippet": "    private static final double F_1_9 = 1d / 9d;",
        "begin_line": 318,
        "end_line": 318,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_11",
        "snippet": "    private static final double F_1_11 = 1d / 11d;",
        "begin_line": 320,
        "end_line": 320,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_13",
        "snippet": "    private static final double F_1_13 = 1d / 13d;",
        "begin_line": 322,
        "end_line": 322,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_15",
        "snippet": "    private static final double F_1_15 = 1d / 15d;",
        "begin_line": 324,
        "end_line": 324,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_17",
        "snippet": "    private static final double F_1_17 = 1d / 17d;",
        "begin_line": 326,
        "end_line": 326,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_3_4",
        "snippet": "    private static final double F_3_4 = 3d / 4d;",
        "begin_line": 328,
        "end_line": 328,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_15_16",
        "snippet": "    private static final double F_15_16 = 15d / 16d;",
        "begin_line": 330,
        "end_line": 330,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_13_14",
        "snippet": "    private static final double F_13_14 = 13d / 14d;",
        "begin_line": 332,
        "end_line": 332,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_11_12",
        "snippet": "    private static final double F_11_12 = 11d / 12d;",
        "begin_line": 334,
        "end_line": 334,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_9_10",
        "snippet": "    private static final double F_9_10 = 9d / 10d;",
        "begin_line": 336,
        "end_line": 336,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_7_8",
        "snippet": "    private static final double F_7_8 = 7d / 8d;",
        "begin_line": 338,
        "end_line": 338,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_5_6",
        "snippet": "    private static final double F_5_6 = 5d / 6d;",
        "begin_line": 340,
        "end_line": 340,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_2",
        "snippet": "    private static final double F_1_2 = 1d / 2d;",
        "begin_line": 342,
        "end_line": 342,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.FastMath",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.FastMath.F_1_4",
        "snippet": "    private static final double F_1_4 = 1d / 4d;",
        "begin_line": 344,
        "end_line": 344,
        "comment": " Constant: {@value}. "
    },
    {
        "class_name": "org.apache.commons.math3.util.ExpIntTable",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.ExpIntTable.EXP_INT_TABLE_A",
        "snippet": "        private static final double[] EXP_INT_TABLE_A;",
        "begin_line": 3619,
        "end_line": 3619,
        "comment": " Exponential evaluated at integer values,\n         * exp(x) =  expIntTableA[x + EXP_INT_TABLE_MAX_INDEX] + expIntTableB[x+EXP_INT_TABLE_MAX_INDEX].\n         "
    },
    {
        "class_name": "org.apache.commons.math3.util.ExpIntTable",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.ExpIntTable.EXP_INT_TABLE_B",
        "snippet": "        private static final double[] EXP_INT_TABLE_B;",
        "begin_line": 3623,
        "end_line": 3623,
        "comment": " Exponential evaluated at integer values,\n         * exp(x) =  expIntTableA[x + EXP_INT_TABLE_MAX_INDEX] + expIntTableB[x+EXP_INT_TABLE_MAX_INDEX]\n         "
    },
    {
        "class_name": "org.apache.commons.math3.util.ExpFracTable",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.ExpFracTable.EXP_FRAC_TABLE_A",
        "snippet": "        private static final double[] EXP_FRAC_TABLE_A;",
        "begin_line": 3659,
        "end_line": 3659,
        "comment": " Exponential over the range of 0 - 1 in increments of 2^-10\n         * exp(x/1024) =  expFracTableA[x] + expFracTableB[x].\n         * 1024 = 2^10\n         "
    },
    {
        "class_name": "org.apache.commons.math3.util.ExpFracTable",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.ExpFracTable.EXP_FRAC_TABLE_B",
        "snippet": "        private static final double[] EXP_FRAC_TABLE_B;",
        "begin_line": 3663,
        "end_line": 3663,
        "comment": " Exponential over the range of 0 - 1 in increments of 2^-10\n         * exp(x/1024) =  expFracTableA[x] + expFracTableB[x].\n         "
    },
    {
        "class_name": "org.apache.commons.math3.util.lnMant",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.lnMant.LN_MANT",
        "snippet": "        private static final double[][] LN_MANT;",
        "begin_line": 3689,
        "end_line": 3689,
        "comment": " Extended precision logarithm table over the range 1 - 2 in increments of 2^-10. "
    },
    {
        "class_name": "org.apache.commons.math3.util.CodyWaite",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.CodyWaite.finalK",
        "snippet": "        private final int finalK;",
        "begin_line": 3709,
        "end_line": 3709,
        "comment": " k "
    },
    {
        "class_name": "org.apache.commons.math3.util.CodyWaite",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.CodyWaite.finalRemA",
        "snippet": "        private final double finalRemA;",
        "begin_line": 3711,
        "end_line": 3711,
        "comment": " remA "
    },
    {
        "class_name": "org.apache.commons.math3.util.CodyWaite",
        "src_path": "src/main/java/org/apache/commons/math3/util/FastMath.java",
        "signature": "org.apache.commons.math3.util.CodyWaite.finalRemB",
        "snippet": "        private final double finalRemB;",
        "begin_line": 3713,
        "end_line": 3713,
        "comment": " remB "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.TWO",
        "snippet": "    public static final Fraction TWO = new Fraction(2, 1);",
        "begin_line": 42,
        "end_line": 42,
        "comment": " A fraction representing \"2 / 1\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.ONE",
        "snippet": "    public static final Fraction ONE = new Fraction(1, 1);",
        "begin_line": 45,
        "end_line": 45,
        "comment": " A fraction representing \"1\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.ZERO",
        "snippet": "    public static final Fraction ZERO = new Fraction(0, 1);",
        "begin_line": 48,
        "end_line": 48,
        "comment": " A fraction representing \"0\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.FOUR_FIFTHS",
        "snippet": "    public static final Fraction FOUR_FIFTHS = new Fraction(4, 5);",
        "begin_line": 51,
        "end_line": 51,
        "comment": " A fraction representing \"4/5\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.ONE_FIFTH",
        "snippet": "    public static final Fraction ONE_FIFTH = new Fraction(1, 5);",
        "begin_line": 54,
        "end_line": 54,
        "comment": " A fraction representing \"1/5\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.ONE_HALF",
        "snippet": "    public static final Fraction ONE_HALF = new Fraction(1, 2);",
        "begin_line": 57,
        "end_line": 57,
        "comment": " A fraction representing \"1/2\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.ONE_QUARTER",
        "snippet": "    public static final Fraction ONE_QUARTER = new Fraction(1, 4);",
        "begin_line": 60,
        "end_line": 60,
        "comment": " A fraction representing \"1/4\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.ONE_THIRD",
        "snippet": "    public static final Fraction ONE_THIRD = new Fraction(1, 3);",
        "begin_line": 63,
        "end_line": 63,
        "comment": " A fraction representing \"1/3\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.THREE_FIFTHS",
        "snippet": "    public static final Fraction THREE_FIFTHS = new Fraction(3, 5);",
        "begin_line": 66,
        "end_line": 66,
        "comment": " A fraction representing \"3/5\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.THREE_QUARTERS",
        "snippet": "    public static final Fraction THREE_QUARTERS = new Fraction(3, 4);",
        "begin_line": 69,
        "end_line": 69,
        "comment": " A fraction representing \"3/4\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.TWO_FIFTHS",
        "snippet": "    public static final Fraction TWO_FIFTHS = new Fraction(2, 5);",
        "begin_line": 72,
        "end_line": 72,
        "comment": " A fraction representing \"2/5\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.TWO_QUARTERS",
        "snippet": "    public static final Fraction TWO_QUARTERS = new Fraction(2, 4);",
        "begin_line": 75,
        "end_line": 75,
        "comment": " A fraction representing \"2/4\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.TWO_THIRDS",
        "snippet": "    public static final Fraction TWO_THIRDS = new Fraction(2, 3);",
        "begin_line": 78,
        "end_line": 78,
        "comment": " A fraction representing \"2/3\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.MINUS_ONE",
        "snippet": "    public static final Fraction MINUS_ONE = new Fraction(-1, 1);",
        "begin_line": 81,
        "end_line": 81,
        "comment": " A fraction representing \"-1 / 1\". "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 3698073679419233275L;",
        "begin_line": 84,
        "end_line": 84,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.denominator",
        "snippet": "    private final int denominator;",
        "begin_line": 87,
        "end_line": 87,
        "comment": " The denominator. "
    },
    {
        "class_name": "org.apache.commons.math3.fraction.Fraction",
        "src_path": "src/main/java/org/apache/commons/math3/fraction/Fraction.java",
        "signature": "org.apache.commons.math3.fraction.Fraction.numerator",
        "snippet": "    private final int numerator;",
        "begin_line": 90,
        "end_line": 90,
        "comment": " The numerator. "
    }
]