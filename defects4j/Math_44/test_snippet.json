[
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.closeEvents()",
        "snippet": "    @Test\n    public void closeEvents() {\n\n        final double r1  = 90.0;\n        final double r2  = 135.0;\n        final double gap = r2 - r1;\n        EventHandler closeEventsGenerator = new EventHandler() {\n            public void resetState(double t, double[] y) {\n            }\n            public double g(double t, double[] y) {\n                return (t - r1) * (r2 - t);\n            }\n            public Action eventOccurred(double t, double[] y, boolean increasing) {\n                return Action.CONTINUE;\n            }\n        };\n\n        final double tolerance = 0.1;\n        EventState es = new EventState(closeEventsGenerator, 1.5 * gap,\n                                       tolerance, 100,\n                                       new BrentSolver(tolerance));\n\n        AbstractStepInterpolator interpolator =\n            new DummyStepInterpolator(new double[0], new double[0], true);\n        interpolator.storeTime(r1 - 2.5 * gap);\n        interpolator.shift();\n        interpolator.storeTime(r1 - 1.5 * gap);\n        es.reinitializeBegin(interpolator);\n\n        interpolator.shift();\n        interpolator.storeTime(r1 - 0.5 * gap);\n        Assert.assertFalse(es.evaluateStep(interpolator));\n\n        interpolator.shift();\n        interpolator.storeTime(0.5 * (r1 + r2));\n        Assert.assertTrue(es.evaluateStep(interpolator));\n        Assert.assertEquals(r1, es.getEventTime(), tolerance);\n        es.stepAccepted(es.getEventTime(), new double[0]);\n\n        interpolator.shift();\n        interpolator.storeTime(r2 + 0.4 * gap);\n        Assert.assertTrue(es.evaluateStep(interpolator));\n        Assert.assertEquals(r2, es.getEventTime(), tolerance);\n\n    }\n",
        "begin_line": 32,
        "end_line": 76,
        "comment": " JIRA: MATH-322",
        "child_ranges": [
            "(line 35,col 9)-(line 35,col 32)",
            "(line 36,col 9)-(line 36,col 33)",
            "(line 37,col 9)-(line 37,col 35)",
            "(line 38,col 9)-(line 47,col 10)",
            "(line 49,col 9)-(line 49,col 37)",
            "(line 50,col 9)-(line 52,col 67)",
            "(line 54,col 9)-(line 55,col 74)",
            "(line 56,col 9)-(line 56,col 47)",
            "(line 57,col 9)-(line 57,col 29)",
            "(line 58,col 9)-(line 58,col 47)",
            "(line 59,col 9)-(line 59,col 43)",
            "(line 61,col 9)-(line 61,col 29)",
            "(line 62,col 9)-(line 62,col 47)",
            "(line 63,col 9)-(line 63,col 58)",
            "(line 65,col 9)-(line 65,col 29)",
            "(line 66,col 9)-(line 66,col 48)",
            "(line 67,col 9)-(line 67,col 57)",
            "(line 68,col 9)-(line 68,col 62)",
            "(line 69,col 9)-(line 69,col 58)",
            "(line 71,col 9)-(line 71,col 29)",
            "(line 72,col 9)-(line 72,col 47)",
            "(line 73,col 9)-(line 73,col 57)",
            "(line 74,col 9)-(line 74,col 62)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.Anonymous-4205469e-6fb4-451d-baf1-244e80773992.resetState(double, double[])",
        "snippet": "            public void resetState(double t, double[] y) {\n            }\n",
        "begin_line": 39,
        "end_line": 40,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.Anonymous-f1cc79d9-397a-413c-b782-e863dcb81845.g(double, double[])",
        "snippet": "            public double g(double t, double[] y) {\n                return (t - r1) * (r2 - t);\n            }\n",
        "begin_line": 41,
        "end_line": 43,
        "comment": "",
        "child_ranges": [
            "(line 42,col 17)-(line 42,col 43)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.Anonymous-c5e90afa-7ba5-4972-81a6-98e2a787cccf.eventOccurred(double, double[], boolean)",
        "snippet": "            public Action eventOccurred(double t, double[] y, boolean increasing) {\n                return Action.CONTINUE;\n            }\n",
        "begin_line": 44,
        "end_line": 46,
        "comment": "",
        "child_ranges": [
            "(line 45,col 17)-(line 45,col 39)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.testIssue695()",
        "snippet": "    @Test\n    public void testIssue695() {\n\n        FirstOrderDifferentialEquations equation = new FirstOrderDifferentialEquations() {\n            \n            public int getDimension() {\n                return 1;\n            }\n            \n            public void computeDerivatives(double t, double[] y, double[] yDot) {\n                yDot[0] = 1.0;\n            }\n        };\n\n        DormandPrince853Integrator integrator = new DormandPrince853Integrator(0.001, 1000, 1.0e-14, 1.0e-14);\n        integrator.addEventHandler(new ResettingEvent(10.99), 0.1, 1.0e-9, 1000);\n        integrator.addEventHandler(new ResettingEvent(11.01), 0.1, 1.0e-9, 1000);\n        integrator.setInitialStepSize(3.0);\n\n        double target = 30.0;\n        double[] y = new double[1];\n        double tEnd = integrator.integrate(equation, 0.0, y, target, y);\n        Assert.assertEquals(target, tEnd, 1.0e-10);\n        Assert.assertEquals(32.0, y[0], 1.0e-10);\n\n    }\n",
        "begin_line": 79,
        "end_line": 104,
        "comment": " Jira: MATH-695",
        "child_ranges": [
            "(line 82,col 9)-(line 91,col 10)",
            "(line 93,col 9)-(line 93,col 110)",
            "(line 94,col 9)-(line 94,col 81)",
            "(line 95,col 9)-(line 95,col 81)",
            "(line 96,col 9)-(line 96,col 43)",
            "(line 98,col 9)-(line 98,col 29)",
            "(line 99,col 9)-(line 99,col 35)",
            "(line 100,col 9)-(line 100,col 72)",
            "(line 101,col 9)-(line 101,col 51)",
            "(line 102,col 9)-(line 102,col 49)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.Anonymous-7e944459-e786-4987-9f84-8c71a1ce16a0.getDimension()",
        "snippet": "            public int getDimension() {\n                return 1;\n            }\n",
        "begin_line": 84,
        "end_line": 86,
        "comment": "",
        "child_ranges": [
            "(line 85,col 17)-(line 85,col 25)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.Anonymous-ca92dc4f-6ff0-4b19-bbdd-ceb6ca9ba339.computeDerivatives(double, double[], double[])",
        "snippet": "            public void computeDerivatives(double t, double[] y, double[] yDot) {\n                yDot[0] = 1.0;\n            }\n",
        "begin_line": 88,
        "end_line": 90,
        "comment": "",
        "child_ranges": [
            "(line 89,col 17)-(line 89,col 30)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.ResettingEvent.ResettingEvent(double)",
        "snippet": "        public ResettingEvent(final double tEvent) {\n            this.tEvent = tEvent;\n        }\n",
        "begin_line": 111,
        "end_line": 113,
        "comment": "",
        "child_ranges": [
            "(line 112,col 13)-(line 112,col 33)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.ResettingEvent.g(double, double[])",
        "snippet": "        public double g(double t, double[] y) {\n            // the bug corresponding to issue 695 causes the g function\n            // to be called at obsolete times t despite an event\n            // occurring later has already been triggered.\n            // When this occurs, the following assertion is violated\n            Assert.assertTrue(\"going backard in time! (\" + t + \" < \" + lastTriggerTime + \")\",\n                              t >= lastTriggerTime);\n            return t - tEvent;\n        }\n",
        "begin_line": 115,
        "end_line": 123,
        "comment": "",
        "child_ranges": [
            "(line 120,col 13)-(line 121,col 52)",
            "(line 122,col 13)-(line 122,col 30)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.ResettingEvent.eventOccurred(double, double[], boolean)",
        "snippet": "        public Action eventOccurred(double t, double[] y, boolean increasing) {\n            // remember in a class variable when the event was triggered\n            lastTriggerTime = t;\n            return Action.RESET_STATE;\n        }\n",
        "begin_line": 125,
        "end_line": 129,
        "comment": "",
        "child_ranges": [
            "(line 127,col 13)-(line 127,col 32)",
            "(line 128,col 13)-(line 128,col 38)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.ode.events.EventStateTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/ode/events/EventStateTest.java",
        "signature": "org.apache.commons.math.ode.events.EventStateTest.ResettingEvent.resetState(double, double[])",
        "snippet": "        public void resetState(double t, double[] y) {\n            y[0] += 1.0;\n        }\n",
        "begin_line": 131,
        "end_line": 133,
        "comment": "",
        "child_ranges": [
            "(line 132,col 13)-(line 132,col 24)"
        ]
    }
]