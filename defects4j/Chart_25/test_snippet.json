[
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.suite()",
        "snippet": "    public static Test suite() {\n        return new TestSuite(StatisticalBarRendererTests.class);\n    }\n",
        "begin_line": 76,
        "end_line": 78,
        "comment": "\n     * Returns the tests as a test suite.\n     *\n     * @return The test suite.\n     ",
        "child_ranges": [
            "(line 77,col 9)-(line 77,col 64)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.StatisticalBarRendererTests(java.lang.String)",
        "snippet": "    public StatisticalBarRendererTests(String name) {\n        super(name);\n    }\n",
        "begin_line": 85,
        "end_line": 87,
        "comment": "\n     * Constructs a new set of tests.\n     *\n     * @param name  the name of the tests.\n     ",
        "child_ranges": [
            "(line 86,col 9)-(line 86,col 20)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testEquals()",
        "snippet": "    public void testEquals() {\n        StatisticalBarRenderer r1 = new StatisticalBarRenderer();\n        StatisticalBarRenderer r2 = new StatisticalBarRenderer();\n        assertEquals(r1, r2);\n        \n        r1.setErrorIndicatorPaint(Color.red);\n        assertFalse(r1.equals(r2));\n        r2.setErrorIndicatorPaint(Color.red);\n        assertTrue(r2.equals(r1));\n    }\n",
        "begin_line": 92,
        "end_line": 101,
        "comment": "\n     * Check that the equals() method distinguishes all fields.\n     ",
        "child_ranges": [
            "(line 93,col 9)-(line 93,col 65)",
            "(line 94,col 9)-(line 94,col 65)",
            "(line 95,col 9)-(line 95,col 29)",
            "(line 97,col 9)-(line 97,col 45)",
            "(line 98,col 9)-(line 98,col 35)",
            "(line 99,col 9)-(line 99,col 45)",
            "(line 100,col 9)-(line 100,col 34)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testHashcode()",
        "snippet": "    public void testHashcode() {\n        StatisticalBarRenderer r1 = new StatisticalBarRenderer();\n        StatisticalBarRenderer r2 = new StatisticalBarRenderer();\n        assertTrue(r1.equals(r2));\n        int h1 = r1.hashCode();\n        int h2 = r2.hashCode();\n        assertEquals(h1, h2);\n    }\n",
        "begin_line": 106,
        "end_line": 113,
        "comment": "\n     * Two objects that are equal are required to return the same hashCode. \n     ",
        "child_ranges": [
            "(line 107,col 9)-(line 107,col 65)",
            "(line 108,col 9)-(line 108,col 65)",
            "(line 109,col 9)-(line 109,col 34)",
            "(line 110,col 9)-(line 110,col 31)",
            "(line 111,col 9)-(line 111,col 31)",
            "(line 112,col 9)-(line 112,col 29)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testCloning()",
        "snippet": "    public void testCloning() {\n        StatisticalBarRenderer r1 = new StatisticalBarRenderer();\n        StatisticalBarRenderer r2 = null;\n        try {\n            r2 = (StatisticalBarRenderer) r1.clone();\n        }\n        catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        assertTrue(r1 != r2);\n        assertTrue(r1.getClass() == r2.getClass());\n        assertTrue(r1.equals(r2));\n    }\n",
        "begin_line": 118,
        "end_line": 130,
        "comment": "\n     * Confirm that cloning works.\n     ",
        "child_ranges": [
            "(line 119,col 9)-(line 119,col 65)",
            "(line 120,col 9)-(line 120,col 41)",
            "(line 121,col 9)-(line 126,col 9)",
            "(line 127,col 9)-(line 127,col 29)",
            "(line 128,col 9)-(line 128,col 51)",
            "(line 129,col 9)-(line 129,col 34)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testSerialization()",
        "snippet": "    public void testSerialization() {\n\n        StatisticalBarRenderer r1 = new StatisticalBarRenderer();\n        StatisticalBarRenderer r2 = null;\n\n        try {\n            ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n            ObjectOutput out = new ObjectOutputStream(buffer);\n            out.writeObject(r1);\n            out.close();\n\n            ObjectInput in = new ObjectInputStream(new ByteArrayInputStream(\n                    buffer.toByteArray()));\n            r2 = (StatisticalBarRenderer) in.readObject();\n            in.close();\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n        assertEquals(r1, r2);\n\n    }\n",
        "begin_line": 135,
        "end_line": 156,
        "comment": "\n     * Serialize an instance, restore it, and check for equality.\n     ",
        "child_ranges": [
            "(line 137,col 9)-(line 137,col 65)",
            "(line 138,col 9)-(line 138,col 41)",
            "(line 140,col 9)-(line 153,col 9)",
            "(line 154,col 9)-(line 154,col 29)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullInfo()",
        "snippet": "    public void testDrawWithNullInfo() {\n        boolean success = false;\n        try {\n            DefaultStatisticalCategoryDataset dataset \n                    = new DefaultStatisticalCategoryDataset();\n            dataset.add(1.0, 2.0, \"S1\", \"C1\");\n            dataset.add(3.0, 4.0, \"S1\", \"C2\");\n            CategoryPlot plot = new CategoryPlot(dataset, \n                    new CategoryAxis(\"Category\"), new NumberAxis(\"Value\"), \n                    new StatisticalBarRenderer());\n            JFreeChart chart = new JFreeChart(plot);\n            /* BufferedImage image = */ chart.createBufferedImage(300, 200, \n                    null);\n            success = true;\n        }\n        catch (NullPointerException e) {\n            e.printStackTrace();\n            success = false;\n        }\n        assertTrue(success);\n    }\n",
        "begin_line": 162,
        "end_line": 182,
        "comment": "\n     * Draws the chart with a <code>null</code> info object to make sure that \n     * no exceptions are thrown (particularly by code in the renderer).\n     ",
        "child_ranges": [
            "(line 163,col 9)-(line 163,col 32)",
            "(line 164,col 9)-(line 180,col 9)",
            "(line 181,col 9)-(line 181,col 28)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullMeanVertical()",
        "snippet": "    public void testDrawWithNullMeanVertical() {\n        boolean success = false;\n        try {\n            DefaultStatisticalCategoryDataset dataset \n                    = new DefaultStatisticalCategoryDataset();\n            dataset.add(1.0, 2.0, \"S1\", \"C1\");\n            dataset.add(null, new Double(4.0), \"S1\", \"C2\");\n            CategoryPlot plot = new CategoryPlot(dataset, \n                    new CategoryAxis(\"Category\"), new NumberAxis(\"Value\"), \n                    new StatisticalBarRenderer());\n            JFreeChart chart = new JFreeChart(plot);\n            /* BufferedImage image = */ chart.createBufferedImage(300, 200, \n                    null);\n            success = true;\n        }\n        catch (NullPointerException e) {\n            e.printStackTrace();\n            success = false;\n        }\n        assertTrue(success);\n    }\n",
        "begin_line": 189,
        "end_line": 209,
        "comment": "\n     * Draws the chart with a <code>null</code> mean value to make sure that \n     * no exceptions are thrown (particularly by code in the renderer).  See\n     * bug report 1779941.\n     ",
        "child_ranges": [
            "(line 190,col 9)-(line 190,col 32)",
            "(line 191,col 9)-(line 207,col 9)",
            "(line 208,col 9)-(line 208,col 28)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullMeanHorizontal()",
        "snippet": "    public void testDrawWithNullMeanHorizontal() {\n        boolean success = false;\n        try {\n            DefaultStatisticalCategoryDataset dataset \n                    = new DefaultStatisticalCategoryDataset();\n            dataset.add(1.0, 2.0, \"S1\", \"C1\");\n            dataset.add(null, new Double(4.0), \"S1\", \"C2\");\n            CategoryPlot plot = new CategoryPlot(dataset, \n                    new CategoryAxis(\"Category\"), new NumberAxis(\"Value\"), \n                    new StatisticalBarRenderer());\n            plot.setOrientation(PlotOrientation.HORIZONTAL);\n            JFreeChart chart = new JFreeChart(plot);\n            /* BufferedImage image = */ chart.createBufferedImage(300, 200, \n                    null);\n            success = true;\n        }\n        catch (NullPointerException e) {\n            e.printStackTrace();\n            success = false;\n        }\n        assertTrue(success);\n    }\n",
        "begin_line": 216,
        "end_line": 237,
        "comment": "\n     * Draws the chart with a <code>null</code> mean value to make sure that \n     * no exceptions are thrown (particularly by code in the renderer).  See\n     * bug report 1779941.\n     ",
        "child_ranges": [
            "(line 217,col 9)-(line 217,col 32)",
            "(line 218,col 9)-(line 235,col 9)",
            "(line 236,col 9)-(line 236,col 28)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullDeviationVertical()",
        "snippet": "    public void testDrawWithNullDeviationVertical() {\n        boolean success = false;\n        try {\n            DefaultStatisticalCategoryDataset dataset \n                    = new DefaultStatisticalCategoryDataset();\n            dataset.add(1.0, 2.0, \"S1\", \"C1\");\n            dataset.add(new Double(4.0), null, \"S1\", \"C2\");\n            CategoryPlot plot = new CategoryPlot(dataset, \n                    new CategoryAxis(\"Category\"), new NumberAxis(\"Value\"), \n                    new StatisticalBarRenderer());\n            JFreeChart chart = new JFreeChart(plot);\n            /* BufferedImage image = */ chart.createBufferedImage(300, 200, \n                    null);\n            success = true;\n        }\n        catch (NullPointerException e) {\n            e.printStackTrace();\n            success = false;\n        }\n        assertTrue(success);\n    }\n",
        "begin_line": 244,
        "end_line": 264,
        "comment": "\n     * Draws the chart with a <code>null</code> standard deviation to make sure \n     * that no exceptions are thrown (particularly by code in the renderer).  \n     * See bug report 1779941.\n     ",
        "child_ranges": [
            "(line 245,col 9)-(line 245,col 32)",
            "(line 246,col 9)-(line 262,col 9)",
            "(line 263,col 9)-(line 263,col 28)"
        ]
    },
    {
        "class_name": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests",
        "child_classes": [],
        "src_path": "tests/org/jfree/chart/renderer/category/junit/StatisticalBarRendererTests.java",
        "signature": "org.jfree.chart.renderer.category.junit.StatisticalBarRendererTests.testDrawWithNullDeviationHorizontal()",
        "snippet": "    public void testDrawWithNullDeviationHorizontal() {\n        boolean success = false;\n        try {\n            DefaultStatisticalCategoryDataset dataset \n                    = new DefaultStatisticalCategoryDataset();\n            dataset.add(1.0, 2.0, \"S1\", \"C1\");\n            dataset.add(new Double(4.0), null, \"S1\", \"C2\");\n            CategoryPlot plot = new CategoryPlot(dataset, \n                    new CategoryAxis(\"Category\"), new NumberAxis(\"Value\"), \n                    new StatisticalBarRenderer());\n            plot.setOrientation(PlotOrientation.HORIZONTAL);\n            JFreeChart chart = new JFreeChart(plot);\n            /* BufferedImage image = */ chart.createBufferedImage(300, 200, \n                    null);\n            success = true;\n        }\n        catch (NullPointerException e) {\n            e.printStackTrace();\n            success = false;\n        }\n        assertTrue(success);\n    }\n",
        "begin_line": 271,
        "end_line": 292,
        "comment": "\n     * Draws the chart with a <code>null</code> standard deviation to make sure \n     * that no exceptions are thrown (particularly by code in the renderer).  \n     * See bug report 1779941.\n     ",
        "child_ranges": [
            "(line 272,col 9)-(line 272,col 32)",
            "(line 273,col 9)-(line 290,col 9)",
            "(line 291,col 9)-(line 291,col 28)"
        ]
    }
]