[
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -370076995648386763L;    ",
        "begin_line": 47,
        "end_line": 47,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n",
        "snippet": "    private int n;",
        "begin_line": 50,
        "end_line": 50,
        "comment": "Number of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/SumOfLogs.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value",
        "snippet": "    private double value;",
        "begin_line": 55,
        "end_line": 55,
        "comment": "\n     * The currently running value\n     "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -6587513359895466954L;",
        "begin_line": 34,
        "end_line": 34,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.DEFAULT_EPSILON",
        "snippet": "    private static final double DEFAULT_EPSILON = 10e-15;",
        "begin_line": 37,
        "end_line": 37,
        "comment": " Maximum allowed numerical error. "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.lanczos",
        "snippet": "    private static double[] lanczos =\n    {\n        0.99999999999999709182,\n        57.156235665862923517,\n        -59.597960355475491248,\n        14.136097974741747174,\n        -0.49191381609762019978,\n        .33994649984811888699e-4,\n        .46523628927048575665e-4,\n        -.98374475304879564677e-4,\n        .15808870322491248884e-3,\n        -.21026444172410488319e-3,\n        .21743961811521264320e-3,\n        -.16431810653676389022e-3,\n        .84418223983852743293e-4,\n        -.26190838401581408670e-4,\n        .36899182659531622704e-5,\n    };",
        "begin_line": 40,
        "end_line": 57,
        "comment": " Lanczos coefficients "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.HALF_LOG_2_PI",
        "snippet": "    private static final double HALF_LOG_2_PI = 0.5 * Math.log(2.0 * Math.PI);",
        "begin_line": 60,
        "end_line": 60,
        "comment": " Avoid repeated computation of log of 2 PI in logGamma "
    },
    {
        "class_name": "org.apache.commons.math.special.Gamma",
        "src_path": "src/java/org/apache/commons/math/special/Gamma.java",
        "signature": "org.apache.commons.math.special.Gamma.serialVersionUID",
        "snippet": "                private static final long serialVersionUID = 5378525034886164398L;",
        "begin_line": 245,
        "end_line": 245,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3346512372447011854L;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " Serialization UID "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.n",
        "snippet": "    protected long n = 0;",
        "begin_line": 102,
        "end_line": 102,
        "comment": " count of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment",
        "snippet": "    protected SecondMoment secondMoment = new SecondMoment();",
        "begin_line": 105,
        "end_line": 105,
        "comment": " SecondMoment is used to compute the mean and variance "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.sum",
        "snippet": "    protected Sum sum = new Sum();",
        "begin_line": 108,
        "end_line": 108,
        "comment": " sum of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq",
        "snippet": "    protected SumOfSquares sumsq = new SumOfSquares();",
        "begin_line": 111,
        "end_line": 111,
        "comment": " sum of the square of each value that has been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.min",
        "snippet": "    protected Min min = new Min();",
        "begin_line": 114,
        "end_line": 114,
        "comment": " min of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.max",
        "snippet": "    protected Max max = new Max();",
        "begin_line": 117,
        "end_line": 117,
        "comment": " max of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog",
        "snippet": "    protected SumOfLogs sumLog = new SumOfLogs();",
        "begin_line": 120,
        "end_line": 120,
        "comment": " sumLog of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean",
        "snippet": "    protected GeometricMean geoMean = new GeometricMean();",
        "begin_line": 123,
        "end_line": 123,
        "comment": " geoMean of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean",
        "snippet": "    protected Mean mean = new Mean();",
        "begin_line": 126,
        "end_line": 126,
        "comment": " mean of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance",
        "snippet": "    protected Variance variance = new Variance();",
        "begin_line": 129,
        "end_line": 129,
        "comment": " variance of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl",
        "snippet": "    private StorelessUnivariateStatistic sumImpl = sum;",
        "begin_line": 132,
        "end_line": 132,
        "comment": "  Statistics implementations - can be reset by setters "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl",
        "snippet": "    private StorelessUnivariateStatistic sumsqImpl = sumsq;",
        "begin_line": 133,
        "end_line": 133,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl",
        "snippet": "    private StorelessUnivariateStatistic minImpl = min;",
        "begin_line": 134,
        "end_line": 134,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl",
        "snippet": "    private StorelessUnivariateStatistic maxImpl = max;",
        "begin_line": 135,
        "end_line": 135,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl",
        "snippet": "    private StorelessUnivariateStatistic sumLogImpl = sumLog;",
        "begin_line": 136,
        "end_line": 136,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl",
        "snippet": "    private StorelessUnivariateStatistic geoMeanImpl = geoMean;",
        "begin_line": 137,
        "end_line": 137,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl",
        "snippet": "    private StorelessUnivariateStatistic meanImpl = mean;",
        "begin_line": 138,
        "end_line": 138,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatistics",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatistics.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl",
        "snippet": "    private StorelessUnivariateStatistic varianceImpl = variance;",
        "begin_line": 139,
        "end_line": 139,
        "comment": ""
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.SecondMoment",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.SecondMoment.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 3942403127395076445L;  ",
        "begin_line": 48,
        "end_line": 48,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.SecondMoment",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/SecondMoment.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2",
        "snippet": "    protected double m2;",
        "begin_line": 51,
        "end_line": 51,
        "comment": " second moment of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.Variance",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.Variance.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -9111962718267217978L;  ",
        "begin_line": 67,
        "end_line": 67,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.Variance",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.Variance.moment",
        "snippet": "    protected SecondMoment moment = null;",
        "begin_line": 70,
        "end_line": 70,
        "comment": " SecondMoment is used in incremental calculation of Variance"
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.Variance",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment",
        "snippet": "    protected boolean incMoment = true;",
        "begin_line": 77,
        "end_line": 77,
        "comment": "\n     * Boolean test to determine if this Variance should also increment\n     * the second moment, this evaluates to false when this Variance is\n     * constructed with an external SecondMoment as a parameter.\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.Variance",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/Variance.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected",
        "snippet": "    private boolean isBiasCorrected = true;",
        "begin_line": 84,
        "end_line": 84,
        "comment": "\n     * Determines whether or not bias correction is applied when computing the\n     * value of the statisic.  True means that bias is corrected.  See \n     * {@link Variance} for details on the formula.\n     "
    },
    {
        "class_name": "org.apache.commons.math.util.ContinuedFraction",
        "src_path": "src/java/org/apache/commons/math/util/ContinuedFraction.java",
        "signature": "org.apache.commons.math.util.ContinuedFraction.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1768555336266158242L;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " Serialization UID "
    },
    {
        "class_name": "org.apache.commons.math.util.ContinuedFraction",
        "src_path": "src/java/org/apache/commons/math/util/ContinuedFraction.java",
        "signature": "org.apache.commons.math.util.ContinuedFraction.DEFAULT_EPSILON",
        "snippet": "    private static final double DEFAULT_EPSILON = 10e-9;",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Maximum allowed numerical error. "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.Mean",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.Mean.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1296043746617791564L;    ",
        "begin_line": 62,
        "end_line": 62,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.Mean",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.Mean.moment",
        "snippet": "    protected FirstMoment moment;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " First moment on which this statistic is based. "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.Mean",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/Mean.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment",
        "snippet": "    protected boolean incMoment;",
        "begin_line": 73,
        "end_line": 73,
        "comment": " \n     * Determines whether or not this statistic can be incremented or cleared.\n     * <p>\n     * Statistics based on (constructed from) external moments cannot\n     * be incremented or cleared.\n     "
    },
    {
        "class_name": "org.apache.commons.math.distribution.AbstractDistribution",
        "src_path": "src/java/org/apache/commons/math/distribution/AbstractDistribution.java",
        "signature": "org.apache.commons.math.distribution.AbstractDistribution.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -38038050983108802L;",
        "begin_line": 32,
        "end_line": 32,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.distribution.TDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/TDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.TDistributionImpl.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -5852615386664158222L;",
        "begin_line": 35,
        "end_line": 35,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.distribution.TDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/TDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.TDistributionImpl.degreesOfFreedom",
        "snippet": "    private double degreesOfFreedom;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " The degrees of freedom"
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.Sum",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.Sum.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8231831954703408316L;  ",
        "begin_line": 39,
        "end_line": 39,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.Sum",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.Sum.n",
        "snippet": "    private long n;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.Sum",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/Sum.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.Sum.value",
        "snippet": "    private double value;",
        "begin_line": 47,
        "end_line": 47,
        "comment": "\n     * The currently running sum.\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.inference.ChiSquareTestImpl",
        "src_path": "src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl.java",
        "signature": "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution",
        "snippet": "    private ChiSquaredDistribution distribution;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Distribution used to compute inference statistics. "
    },
    {
        "class_name": "org.apache.commons.math.distribution.ChiSquaredDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8352658048349159782L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.distribution.ChiSquaredDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/ChiSquaredDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma",
        "snippet": "    private GammaDistribution gamma;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " Internal Gamma distribution. "
    },
    {
        "class_name": "org.apache.commons.math.distribution.AbstractContinuousDistribution",
        "src_path": "src/java/org/apache/commons/math/distribution/AbstractContinuousDistribution.java",
        "signature": "org.apache.commons.math.distribution.AbstractContinuousDistribution.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -38038050983108802L;",
        "begin_line": 39,
        "end_line": 39,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.rank.Min",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/rank/Min.java",
        "signature": "org.apache.commons.math.stat.descriptive.rank.Min.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2941995784909003131L;  ",
        "begin_line": 43,
        "end_line": 43,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.rank.Min",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/rank/Min.java",
        "signature": "org.apache.commons.math.stat.descriptive.rank.Min.n",
        "snippet": "    private long n;",
        "begin_line": 46,
        "end_line": 46,
        "comment": "Number of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.rank.Min",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/rank/Min.java",
        "signature": "org.apache.commons.math.stat.descriptive.rank.Min.value",
        "snippet": "    private double value;",
        "begin_line": 49,
        "end_line": 49,
        "comment": "Current value of the statistic "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.FirstMoment",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -803343206421984070L; ",
        "begin_line": 52,
        "end_line": 52,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.FirstMoment",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n",
        "snippet": "    protected long n;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " Count of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.FirstMoment",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1",
        "snippet": "    protected double m1;",
        "begin_line": 58,
        "end_line": 58,
        "comment": " First moment of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.FirstMoment",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev",
        "snippet": "    protected double dev;",
        "begin_line": 64,
        "end_line": 64,
        "comment": " \n     * Deviation of most recently added value from previous first moment.\n     * Retained to prevent repeated computation in higher order moments.\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.FirstMoment",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/FirstMoment.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev",
        "snippet": "    protected double nDev;",
        "begin_line": 71,
        "end_line": 71,
        "comment": "\n     * Deviation of most recently added value from previous first moment,\n     * normalized by previous sample size.  Retained to prevent repeated\n     * computation in higher order moments\n     "
    },
    {
        "class_name": "org.apache.commons.math.stat.inference.TTestImpl",
        "src_path": "src/java/org/apache/commons/math/stat/inference/TTestImpl.java",
        "signature": "org.apache.commons.math.stat.inference.TTestImpl.distribution",
        "snippet": "    private TDistribution distribution;",
        "begin_line": 37,
        "end_line": 37,
        "comment": " Distribution used to compute inference statistics. "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.GeometricMean",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8178734905303459453L;  ",
        "begin_line": 49,
        "end_line": 49,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.moment.GeometricMean",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/moment/GeometricMean.java",
        "signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs",
        "snippet": "    private SumOfLogs sumOfLogs;",
        "begin_line": 52,
        "end_line": 52,
        "comment": " Wrapped SumOfLogs instance "
    },
    {
        "class_name": "org.apache.commons.math.stat.inference.TestUtils",
        "src_path": "src/java/org/apache/commons/math/stat/inference/TestUtils.java",
        "signature": "org.apache.commons.math.stat.inference.TestUtils.tTest",
        "snippet": "    private static TTest tTest = new TTestImpl();",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Singleton TTest instance using default implementation. "
    },
    {
        "class_name": "org.apache.commons.math.stat.inference.TestUtils",
        "src_path": "src/java/org/apache/commons/math/stat/inference/TestUtils.java",
        "signature": "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest",
        "snippet": "    private static ChiSquareTest chiSquareTest = \n        new ChiSquareTestImpl();",
        "begin_line": 41,
        "end_line": 42,
        "comment": " Singleton ChiSquareTest instance using default implementation. "
    },
    {
        "class_name": "org.apache.commons.math.stat.inference.TestUtils",
        "src_path": "src/java/org/apache/commons/math/stat/inference/TestUtils.java",
        "signature": "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest",
        "snippet": "    private static UnknownDistributionChiSquareTest unknownDistributionChiSquareTest = \n        new ChiSquareTestImpl();",
        "begin_line": 45,
        "end_line": 46,
        "comment": " Singleton ChiSquareTest instance using default implementation. "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.rank.Max",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/rank/Max.java",
        "signature": "org.apache.commons.math.stat.descriptive.rank.Max.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -5593383832225844641L;    ",
        "begin_line": 41,
        "end_line": 41,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.rank.Max",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/rank/Max.java",
        "signature": "org.apache.commons.math.stat.descriptive.rank.Max.n",
        "snippet": "    private long n;",
        "begin_line": 44,
        "end_line": 44,
        "comment": " Number of values that have been added "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.rank.Max",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/rank/Max.java",
        "signature": "org.apache.commons.math.stat.descriptive.rank.Max.value",
        "snippet": "    private double value;",
        "begin_line": 47,
        "end_line": 47,
        "comment": " Current value of the statistic "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/SummaryStatisticsImpl.java",
        "signature": "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8528794411480425963L;",
        "begin_line": 30,
        "end_line": 30,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.distribution.GammaDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.GammaDistributionImpl.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3239549463135430361L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.distribution.GammaDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.GammaDistributionImpl.alpha",
        "snippet": "    private double alpha;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " The shape parameter. "
    },
    {
        "class_name": "org.apache.commons.math.distribution.GammaDistributionImpl",
        "src_path": "src/java/org/apache/commons/math/distribution/GammaDistributionImpl.java",
        "signature": "org.apache.commons.math.distribution.GammaDistributionImpl.beta",
        "snippet": "    private double beta;",
        "begin_line": 39,
        "end_line": 39,
        "comment": " The scale parameter. "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.SumOfSquares",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1460986908574398008L;  ",
        "begin_line": 39,
        "end_line": 39,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.SumOfSquares",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n",
        "snippet": "    private long n;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " "
    },
    {
        "class_name": "org.apache.commons.math.stat.descriptive.summary.SumOfSquares",
        "src_path": "src/java/org/apache/commons/math/stat/descriptive/summary/SumOfSquares.java",
        "signature": "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value",
        "snippet": "    private double value;",
        "begin_line": 47,
        "end_line": 47,
        "comment": "\n     * The currently running sumSq\n     "
    }
]