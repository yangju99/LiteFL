[
    {
        "name": "StringUtils.containsNone#1673",
        "is_bug": true,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence, char[])",
        "snippet": "    public static boolean containsNone(CharSequence cs, char[] searchChars) {\n        if (cs == null || searchChars == null) {\n            return true;\n        }\n        int csLen = cs.length();\n        int searchLen = searchChars.length;\n        for (int i = 0; i < csLen; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                            // missing low surrogate, fine, like String.indexOf(String)\n                        // ch is in the Basic Multilingual Plane\n                        return false;\n                }\n            }\n        }\n        return true;\n    }\n",
        "begin_line": 1673,
        "end_line": 1690,
        "comment": "\n     * <p>Checks that the CharSequence does not contain certain characters.</p>\n     *\n     * <p>A <code>null</code> CharSequence will return <code>true</code>.\n     * A <code>null</code> invalid character array will return <code>true</code>.\n     * An empty CharSequence (length()=0) always returns true.</p>\n     *\n     * <pre>\n     * StringUtils.containsNone(null, *)       = true\n     * StringUtils.containsNone(*, null)       = true\n     * StringUtils.containsNone(\"\", *)         = true\n     * StringUtils.containsNone(\"ab\", '')      = true\n     * StringUtils.containsNone(\"abab\", 'xyz') = true\n     * StringUtils.containsNone(\"ab1\", 'xyz')  = true\n     * StringUtils.containsNone(\"abz\", 'xyz')  = false\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param searchChars  an array of invalid chars, may be null\n     * @return true if it contains none of the invalid chars, or is null\n     * @since 2.0\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4472
        },
        "num_failing_tests": 4
    },
    {
        "name": "StringUtils.containsNone#1714",
        "is_bug": false,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence, java.lang.String)",
        "snippet": "    public static boolean containsNone(CharSequence cs, String invalidChars) {\n        if (cs == null || invalidChars == null) {\n            return true;\n        }\n        return containsNone(cs, invalidChars.toCharArray());\n    }\n",
        "begin_line": 1714,
        "end_line": 1719,
        "comment": "\n     * <p>Checks that the CharSequence does not contain certain characters.</p>\n     *\n     * <p>A <code>null</code> CharSequence will return <code>true</code>.\n     * A <code>null</code> invalid character array will return <code>true</code>.\n     * An empty String (\"\") always returns true.</p>\n     *\n     * <pre>\n     * StringUtils.containsNone(null, *)       = true\n     * StringUtils.containsNone(*, null)       = true\n     * StringUtils.containsNone(\"\", *)         = true\n     * StringUtils.containsNone(\"ab\", \"\")      = true\n     * StringUtils.containsNone(\"abab\", \"xyz\") = true\n     * StringUtils.containsNone(\"ab1\", \"xyz\")  = true\n     * StringUtils.containsNone(\"abz\", \"xyz\")  = false\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param invalidChars  a String of invalid chars, may be null\n     * @return true if it contains none of the invalid chars, or is null\n     * @since 2.0\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3651
        },
        "num_failing_tests": 2
    },
    {
        "name": "ArrayUtils.isEmpty#3278",
        "is_bug": false,
        "src_path": "src/main/java/org/apache/commons/lang3/ArrayUtils.java",
        "class_name": "org.apache.commons.lang3.ArrayUtils",
        "signature": "org.apache.commons.lang3.ArrayUtils.isEmpty(char[])",
        "snippet": "    public static boolean isEmpty(char[] array) {\n        if (array == null || array.length == 0) {\n            return true;\n        }\n        return false;\n    }\n",
        "begin_line": 3278,
        "end_line": 3283,
        "comment": "\n     * <p>Checks if an array of primitive chars is empty or <code>null</code>.</p>\n     *\n     * @param array  the array to test\n     * @return <code>true</code> if the array is empty or <code>null</code>\n     * @since 2.1\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3536
        },
        "num_failing_tests": 5
    },
    {
        "name": "StringUtils.indexOfAny#1371",
        "is_bug": true,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence, char[])",
        "snippet": "    public static int indexOfAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        int csLen = cs.length();\n        int searchLen = searchChars.length;\n        for (int i = 0; i < csLen; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                        // ch is a supplementary character\n                        return i;\n                }\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n",
        "begin_line": 1371,
        "end_line": 1387,
        "comment": "\n     * <p>Search a CharSequence to find the first index of any\n     * character in the given set of characters.</p>\n     *\n     * <p>A <code>null</code> String will return <code>-1</code>.\n     * A <code>null</code> or zero length search array will return <code>-1</code>.</p>\n     *\n     * <pre>\n     * StringUtils.indexOfAny(null, *)                = -1\n     * StringUtils.indexOfAny(\"\", *)                  = -1\n     * StringUtils.indexOfAny(*, null)                = -1\n     * StringUtils.indexOfAny(*, [])                  = -1\n     * StringUtils.indexOfAny(\"zzabyycdxx\",['z','a']) = 0\n     * StringUtils.indexOfAny(\"zzabyycdxx\",['b','y']) = 3\n     * StringUtils.indexOfAny(\"aba\", ['z'])           = -1\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param searchChars  the chars to search for, may be null\n     * @return the index of any of the chars, -1 if no match or null input\n     * @since 2.0\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3162
        },
        "num_failing_tests": 2
    },
    {
        "name": "StringUtils.containsAny#1443",
        "is_bug": true,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence, char[])",
        "snippet": "    public static boolean containsAny(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return false;\n        }\n        int csLength = cs.length();\n        int searchLength = searchChars.length;\n        int csLast = csLength - 1;\n        int searchLast = searchLength - 1;\n        for (int i = 0; i < csLength; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLength; j++) {\n                if (searchChars[j] == ch) {\n                    if (i < csLast && j < searchLast && ch >= Character.MIN_HIGH_SURROGATE && ch <= Character.MAX_HIGH_SURROGATE) {\n                            // missing low surrogate, fine, like String.indexOf(String)\n                        if (searchChars[j + 1] == cs.charAt(i + 1)) {\n                            return true;\n                        }\n                    } else {\n                        // ch is in the Basic Multilingual Plane\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n",
        "begin_line": 1443,
        "end_line": 1468,
        "comment": "\n     * <p>Checks if the CharSequence contains any character in the given\n     * set of characters.</p>\n     *\n     * <p>A <code>null</code> CharSequence will return <code>false</code>.\n     * A <code>null</code> or zero length search array will return <code>false</code>.</p>\n     *\n     * <pre>\n     * StringUtils.containsAny(null, *)                = false\n     * StringUtils.containsAny(\"\", *)                  = false\n     * StringUtils.containsAny(*, null)                = false\n     * StringUtils.containsAny(*, [])                  = false\n     * StringUtils.containsAny(\"zzabyycdxx\",['z','a']) = true\n     * StringUtils.containsAny(\"zzabyycdxx\",['b','y']) = true\n     * StringUtils.containsAny(\"aba\", ['z'])           = false\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param searchChars  the chars to search for, may be null\n     * @return the <code>true</code> if any of the chars are found,\n     * <code>false</code> if no match or null input\n     * @since 2.4\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.239
        },
        "num_failing_tests": 2
    },
    {
        "name": "StringUtils.indexOfAny#1411",
        "is_bug": false,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence, java.lang.String)",
        "snippet": "    public static int indexOfAny(CharSequence cs, String searchChars) {\n        if (isEmpty(cs) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        return indexOfAny(cs, searchChars.toCharArray());\n    }\n",
        "begin_line": 1411,
        "end_line": 1416,
        "comment": "\n     * <p>Search a CharSequence to find the first index of any\n     * character in the given set of characters.</p>\n     *\n     * <p>A <code>null</code> String will return <code>-1</code>.\n     * A <code>null</code> search string will return <code>-1</code>.</p>\n     *\n     * <pre>\n     * StringUtils.indexOfAny(null, *)            = -1\n     * StringUtils.indexOfAny(\"\", *)              = -1\n     * StringUtils.indexOfAny(*, null)            = -1\n     * StringUtils.indexOfAny(*, \"\")              = -1\n     * StringUtils.indexOfAny(\"zzabyycdxx\", \"za\") = 0\n     * StringUtils.indexOfAny(\"zzabyycdxx\", \"by\") = 3\n     * StringUtils.indexOfAny(\"aba\",\"z\")          = -1\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param searchChars  the chars to search for, may be null\n     * @return the index of any of the chars, -1 if no match or null input\n     * @since 2.0\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.2236
        },
        "num_failing_tests": 1
    },
    {
        "name": "StringUtils.indexOfAnyBut#1569",
        "is_bug": true,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.String, java.lang.String)",
        "snippet": "    public static int indexOfAnyBut(String str, String searchChars) {\n        if (isEmpty(str) || isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        int strLen = str.length();\n        for (int i = 0; i < strLen; i++) {\n            char ch = str.charAt(i);\n            if (searchChars.indexOf(ch) < 0) {\n                    return i;\n            }\n        }\n        return INDEX_NOT_FOUND;\n    }\n",
        "begin_line": 1569,
        "end_line": 1581,
        "comment": "\n     * <p>Search a String to find the first index of any\n     * character not in the given set of characters.</p>\n     *\n     * <p>A <code>null</code> String will return <code>-1</code>.\n     * A <code>null</code> search string will return <code>-1</code>.</p>\n     *\n     * <pre>\n     * StringUtils.indexOfAnyBut(null, *)            = -1\n     * StringUtils.indexOfAnyBut(\"\", *)              = -1\n     * StringUtils.indexOfAnyBut(*, null)            = -1\n     * StringUtils.indexOfAnyBut(*, \"\")              = -1\n     * StringUtils.indexOfAnyBut(\"zzabyycdxx\", \"za\") = 3\n     * StringUtils.indexOfAnyBut(\"zzabyycdxx\", \"\")   = 0\n     * StringUtils.indexOfAnyBut(\"aba\",\"ab\")         = -1\n     * </pre>\n     *\n     * @param str  the String to check, may be null\n     * @param searchChars  the chars to search for, may be null\n     * @return the index of any of the chars, -1 if no match or null input\n     * @since 2.0\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.2236
        },
        "num_failing_tests": 1
    },
    {
        "name": "StringUtils.isEmpty#193",
        "is_bug": false,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)",
        "snippet": "    public static boolean isEmpty(CharSequence cs) {\n        return cs == null || cs.length() == 0;\n    }\n",
        "begin_line": 193,
        "end_line": 195,
        "comment": "\n     * <p>Checks if a CharSequence is empty (\"\") or null.</p>\n     *\n     * <pre>\n     * StringUtils.isEmpty(null)      = true\n     * StringUtils.isEmpty(\"\")        = true\n     * StringUtils.isEmpty(\" \")       = false\n     * StringUtils.isEmpty(\"bob\")     = false\n     * StringUtils.isEmpty(\"  bob  \") = false\n     * </pre>\n     *\n     * <p>NOTE: This method changed in Lang version 2.0.\n     * It no longer trims the CharSequence.\n     * That functionality is available in isBlank().</p>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @return <code>true</code> if the CharSequence is empty or null\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1907
        },
        "num_failing_tests": 6
    },
    {
        "name": "StringUtils.containsAny#1497",
        "is_bug": true,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence, java.lang.String)",
        "snippet": "    public static boolean containsAny(CharSequence cs, String searchChars) {\n        if (searchChars == null) {\n            return false;\n        }\n        return containsAny(cs, searchChars.toCharArray());\n    }\n",
        "begin_line": 1497,
        "end_line": 1502,
        "comment": "\n     * <p>\n     * Checks if the CharSequence contains any character in the given set of characters.\n     * </p>\n     * \n     * <p>\n     * A <code>null</code> CharSequence will return <code>false</code>. A <code>null</code> search CharSequence will return\n     * <code>false</code>.\n     * </p>\n     * \n     * <pre>\n     * StringUtils.containsAny(null, *)            = false\n     * StringUtils.containsAny(\"\", *)              = false\n     * StringUtils.containsAny(*, null)            = false\n     * StringUtils.containsAny(*, \"\")              = false\n     * StringUtils.containsAny(\"zzabyycdxx\", \"za\") = true\n     * StringUtils.containsAny(\"zzabyycdxx\", \"by\") = true\n     * StringUtils.containsAny(\"aba\",\"z\")          = false\n     * </pre>\n     * \n     * @param cs\n     *            the CharSequence to check, may be null\n     * @param searchChars\n     *            the chars to search for, may be null\n     * @return the <code>true</code> if any of the chars are found, <code>false</code> if no match or null input\n     * @since 2.4\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1826
        },
        "num_failing_tests": 1
    },
    {
        "name": "StringUtils.indexOfAnyBut#1528",
        "is_bug": true,
        "src_path": "src/main/java/org/apache/commons/lang3/StringUtils.java",
        "class_name": "org.apache.commons.lang3.StringUtils",
        "signature": "org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence, char[])",
        "snippet": "    public static int indexOfAnyBut(CharSequence cs, char[] searchChars) {\n        if (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\n            return INDEX_NOT_FOUND;\n        }\n        int csLen = cs.length();\n        int searchLen = searchChars.length;\n        outer:\n        for (int i = 0; i < csLen; i++) {\n            char ch = cs.charAt(i);\n            for (int j = 0; j < searchLen; j++) {\n                if (searchChars[j] == ch) {\n                        continue outer;\n                }\n            }\n            return i;\n        }\n        return INDEX_NOT_FOUND;\n    }\n",
        "begin_line": 1528,
        "end_line": 1545,
        "comment": "\n     * <p>Searches a CharSequence to find the first index of any\n     * character not in the given set of characters.</p>\n     *\n     * <p>A <code>null</code> CharSequence will return <code>-1</code>.\n     * A <code>null</code> or zero length search array will return <code>-1</code>.</p>\n     *\n     * <pre>\n     * StringUtils.indexOfAnyBut(null, *)           = -1\n     * StringUtils.indexOfAnyBut(\"\", *)             = -1\n     * StringUtils.indexOfAnyBut(*, null)           = -1\n     * StringUtils.indexOfAnyBut(*, [])             = -1\n     * StringUtils.indexOfAnyBut(\"zzabyycdxx\",'za') = 3\n     * StringUtils.indexOfAnyBut(\"zzabyycdxx\", '')  = 0\n     * StringUtils.indexOfAnyBut(\"aba\", 'ab')       = -1\n     * </pre>\n     *\n     * @param cs  the CharSequence to check, may be null\n     * @param searchChars  the chars to search for, may be null\n     * @return the index of any of the chars, -1 if no match or null input\n     * @since 2.0\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1581
        },
        "num_failing_tests": 1
    }
]