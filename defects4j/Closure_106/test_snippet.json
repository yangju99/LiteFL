[
    {
        "class_name": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CheckSideEffectsTest.java",
        "signature": "com.google.javascript.jscomp.CheckSideEffectsTest.CheckSideEffectsTest()",
        "snippet": "  public CheckSideEffectsTest() {\n    this.parseTypeInfo = true;\n  }\n",
        "begin_line": 22,
        "end_line": 24,
        "comment": "",
        "child_ranges": [
            "(line 23,col 5)-(line 23,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CheckSideEffectsTest.java",
        "signature": "com.google.javascript.jscomp.CheckSideEffectsTest.getProcessor(com.google.javascript.jscomp.Compiler)",
        "snippet": "  @Override\n  protected CompilerPass getProcessor(Compiler compiler) {\n    return new CombinedCompilerPass(compiler,\n        new CheckSideEffects(CheckLevel.ERROR));\n  }\n",
        "begin_line": 26,
        "end_line": 30,
        "comment": "",
        "child_ranges": [
            "(line 28,col 5)-(line 29,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CheckSideEffectsTest.java",
        "signature": "com.google.javascript.jscomp.CheckSideEffectsTest.test(java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String js, DiagnosticType error) {\n    test(js, error == null ? js : null, error);\n  }\n",
        "begin_line": 32,
        "end_line": 34,
        "comment": "",
        "child_ranges": [
            "(line 33,col 5)-(line 33,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CheckSideEffectsTest.java",
        "signature": "com.google.javascript.jscomp.CheckSideEffectsTest.testUselessCode()",
        "snippet": "  public void testUselessCode() {\n    test(\"function f(x) { if(x) return; }\", ok);\n    test(\"function f(x) { if(x); }\", e);\n\n    test(\"if(x) x = y;\", ok);\n    test(\"if(x) x == bar();\", e);\n\n    test(\"x = 3;\", ok);\n    test(\"x == 3;\", e);\n\n    test(\"var x = 'test'\", ok);\n    test(\"var x = 'test'\\n'str'\", e);\n\n    test(\"\", ok);\n    test(\"foo();;;;bar();;;;\", ok);\n\n    test(\"var a, b; a = 5, b = 6\", ok);\n    test(\"var a, b; a = 5, b == 6\", e);\n    test(\"var a, b; a = (5, 6)\", e);      // the 5 has no side-effects\n    test(\"var a, b; a = (b = 7, 6)\", ok);\n    test(\"function x(){}\\nfunction f(a, b){}\\nf(1,(x(), 2));\", ok);\n    test(\"function x(){}\\nfunction f(a, b){}\\nf(1,(2, 3));\", e);\n  }\n",
        "begin_line": 39,
        "end_line": 61,
        "comment": "",
        "child_ranges": [
            "(line 40,col 5)-(line 40,col 48)",
            "(line 41,col 5)-(line 41,col 40)",
            "(line 43,col 5)-(line 43,col 29)",
            "(line 44,col 5)-(line 44,col 33)",
            "(line 46,col 5)-(line 46,col 23)",
            "(line 47,col 5)-(line 47,col 23)",
            "(line 49,col 5)-(line 49,col 31)",
            "(line 50,col 5)-(line 50,col 37)",
            "(line 52,col 5)-(line 52,col 17)",
            "(line 53,col 5)-(line 53,col 35)",
            "(line 55,col 5)-(line 55,col 39)",
            "(line 56,col 5)-(line 56,col 39)",
            "(line 57,col 5)-(line 57,col 36)",
            "(line 58,col 5)-(line 58,col 41)",
            "(line 59,col 5)-(line 59,col 67)",
            "(line 60,col 5)-(line 60,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CheckSideEffectsTest.java",
        "signature": "com.google.javascript.jscomp.CheckSideEffectsTest.testUselessCodeInFor()",
        "snippet": "  public void testUselessCodeInFor() {\n    test(\"for(var x = 0; x < 100; x++) { foo(x) }\", ok);\n    test(\"for(; true; ) { bar() }\", ok);\n    test(\"for(foo(); true; foo()) { bar() }\", ok);\n    test(\"for(void 0; true; foo()) { bar() }\", e);\n    test(\"for(foo(); true; void 0) { bar() }\", e);\n\n    test(\"for(foo in bar) { foo() }\", ok);\n    test(\"for (i = 0; el = el.previousSibling; i++) {}\", ok);\n    test(\"for (i = 0; el = el.previousSibling; i++);\", ok);\n  }\n",
        "begin_line": 63,
        "end_line": 73,
        "comment": "",
        "child_ranges": [
            "(line 64,col 5)-(line 64,col 56)",
            "(line 65,col 5)-(line 65,col 40)",
            "(line 66,col 5)-(line 66,col 50)",
            "(line 67,col 5)-(line 67,col 50)",
            "(line 68,col 5)-(line 68,col 50)",
            "(line 70,col 5)-(line 70,col 42)",
            "(line 71,col 5)-(line 71,col 61)",
            "(line 72,col 5)-(line 72,col 59)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CheckSideEffectsTest.java",
        "signature": "com.google.javascript.jscomp.CheckSideEffectsTest.testTypeAnnotations()",
        "snippet": "  public void testTypeAnnotations() {\n    test(\"x;\", e);\n    test(\"a.b.c.d;\", e);\n    test(\"/** @type Number */ a.b.c.d;\", ok);\n    test(\"if (true) { /** @type Number */ a.b.c.d; }\", ok);\n\n    test(\"function A() { this.foo; }\", e);\n    test(\"function A() { /** @type Number */ this.foo; }\", ok);\n  }\n",
        "begin_line": 75,
        "end_line": 83,
        "comment": "",
        "child_ranges": [
            "(line 76,col 5)-(line 76,col 18)",
            "(line 77,col 5)-(line 77,col 24)",
            "(line 78,col 5)-(line 78,col 45)",
            "(line 79,col 5)-(line 79,col 59)",
            "(line 81,col 5)-(line 81,col 42)",
            "(line 82,col 5)-(line 82,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CheckSideEffectsTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CheckSideEffectsTest.java",
        "signature": "com.google.javascript.jscomp.CheckSideEffectsTest.testJSDocComments()",
        "snippet": "  public void testJSDocComments() {\n    test(\"function A() { /** This is a jsdoc comment */ this.foo; }\", ok);\n    test(\"function A() { /* This is a normal comment */ this.foo; }\", e);\n  }\n",
        "begin_line": 85,
        "end_line": 88,
        "comment": "",
        "child_ranges": [
            "(line 86,col 5)-(line 86,col 74)",
            "(line 87,col 5)-(line 87,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.CollapsePropertiesTest()",
        "snippet": "  public CollapsePropertiesTest() {\n    super(EXTERNS);\n  }\n",
        "begin_line": 35,
        "end_line": 37,
        "comment": "",
        "child_ranges": [
            "(line 36,col 5)-(line 36,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.getProcessor(com.google.javascript.jscomp.Compiler)",
        "snippet": "  @Override public CompilerPass getProcessor(Compiler compiler) {\n    return new CollapseProperties(\n        compiler, collapsePropertiesOnExternTypes, true);\n  }\n",
        "begin_line": 40,
        "end_line": 43,
        "comment": " {@inheritDoc} ",
        "child_ranges": [
            "(line 41,col 5)-(line 42,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.getNumRepetitions()",
        "snippet": "  @Override public int getNumRepetitions() {\n    return 1;\n  }\n",
        "begin_line": 46,
        "end_line": 48,
        "comment": " {@inheritDoc} ",
        "child_ranges": [
            "(line 47,col 5)-(line 47,col 13)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapse()",
        "snippet": "  public void testCollapse() {\n    test(\"var a = {}; a.b = {}; var c = a.b;\",\n         \"var a$b = {}; var c = a$b\");\n  }\n",
        "begin_line": 50,
        "end_line": 53,
        "comment": "",
        "child_ranges": [
            "(line 51,col 5)-(line 52,col 38)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMultiLevelCollapse()",
        "snippet": "  public void testMultiLevelCollapse() {\n    test(\"var a = {}; a.b = {}; a.b.c = {}; var d = a.b.c;\",\n         \"var a$b$c = {}; var d = a$b$c;\");\n  }\n",
        "begin_line": 55,
        "end_line": 58,
        "comment": "",
        "child_ranges": [
            "(line 56,col 5)-(line 57,col 43)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDecrement()",
        "snippet": "  public void testDecrement() {\n    test(\"var a = {}; a.b = 5; a.b--; a.b = 5\",\n         \"var a$b = 5; a$b--; a$b = 5\");\n  }\n",
        "begin_line": 60,
        "end_line": 63,
        "comment": "",
        "child_ranges": [
            "(line 61,col 5)-(line 62,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testIncrement()",
        "snippet": "  public void testIncrement() {\n    test(\"var a = {}; a.b = 5; a.b++; a.b = 5\",\n         \"var a$b = 5; a$b++; a$b = 5\");\n  }\n",
        "begin_line": 65,
        "end_line": 68,
        "comment": "",
        "child_ranges": [
            "(line 66,col 5)-(line 67,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclaration()",
        "snippet": "  public void testObjLitDeclaration() {\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c\");\n  }\n",
        "begin_line": 70,
        "end_line": 73,
        "comment": "",
        "child_ranges": [
            "(line 71,col 5)-(line 72,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithDuplicateKeys()",
        "snippet": "  public void testObjLitDeclarationWithDuplicateKeys() {\n    test(\"var a = {b: 0, b: 1}; var c = a.b;\",\n         \"var a$b = 0; var a$b = 1; var c = a$b;\");\n  }\n",
        "begin_line": 75,
        "end_line": 78,
        "comment": "",
        "child_ranges": [
            "(line 76,col 5)-(line 77,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth1()",
        "snippet": "  public void testObjLitAssignmentDepth1() {\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c\");\n  }\n",
        "begin_line": 80,
        "end_line": 83,
        "comment": "",
        "child_ranges": [
            "(line 81,col 5)-(line 82,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth2()",
        "snippet": "  public void testObjLitAssignmentDepth2() {\n    test(\"var a = {}; a.b = {c: {}, d: {}}; var e = a.b.c; var f = a.b.d\",\n         \"var a$b$c = {}; var a$b$d = {}; var e = a$b$c; var f = a$b$d\");\n  }\n",
        "begin_line": 85,
        "end_line": 88,
        "comment": "",
        "child_ranges": [
            "(line 86,col 5)-(line 87,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth3()",
        "snippet": "  public void testObjLitAssignmentDepth3() {\n    test(\"var a = {}; a.b = {}; a.b.c = {d: 1, e: 2}; var f = a.b.c.d\",\n         \"var a$b$c$d = 1; var a$b$c$e = 2; var f = a$b$c$d\");\n  }\n",
        "begin_line": 90,
        "end_line": 93,
        "comment": "",
        "child_ranges": [
            "(line 91,col 5)-(line 92,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth4()",
        "snippet": "  public void testObjLitAssignmentDepth4() {\n    test(\"var a = {}; a.b = {}; a.b.c = {}; a.b.c.d = {e: 1, f: 2}; \" +\n         \"var g = a.b.c.d.e\",\n         \"var a$b$c$d$e = 1; var a$b$c$d$f = 2; var g = a$b$c$d$e\");\n  }\n",
        "begin_line": 95,
        "end_line": 99,
        "comment": "",
        "child_ranges": [
            "(line 96,col 5)-(line 98,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectDeclaredToPreserveItsPreviousValue1()",
        "snippet": "  public void testGlobalObjectDeclaredToPreserveItsPreviousValue1() {\n    test(\"var a = a ? a : {}; a.c = 1;\",\n         \"var a = a ? a : {}; var a$c = 1;\");\n  }\n",
        "begin_line": 101,
        "end_line": 104,
        "comment": "",
        "child_ranges": [
            "(line 102,col 5)-(line 103,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectDeclaredToPreserveItsPreviousValue2()",
        "snippet": "  public void testGlobalObjectDeclaredToPreserveItsPreviousValue2() {\n    test(\"var a = a || {}; a.c = 1;\",\n         \"var a = a || {}; var a$c = 1;\");\n  }\n",
        "begin_line": 106,
        "end_line": 109,
        "comment": "",
        "child_ranges": [
            "(line 107,col 5)-(line 108,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_1()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_1() {\n    test(\"var a = {b: 0}; a.c = 1; if (a) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; if (a) x();\");\n  }\n",
        "begin_line": 111,
        "end_line": 114,
        "comment": "",
        "child_ranges": [
            "(line 112,col 5)-(line 113,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_2()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_2() {\n    test(\"var a = {b: 0}; a.c = 1; if (!(a && a.c)) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; if (!(a && a$c)) x();\");\n  }\n",
        "begin_line": 116,
        "end_line": 119,
        "comment": "",
        "child_ranges": [
            "(line 117,col 5)-(line 118,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_3()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_3() {\n    test(\"var a = {b: 0}; a.c = 1; while (a || a.c) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; while (a || a$c) x();\");\n  }\n",
        "begin_line": 121,
        "end_line": 124,
        "comment": "",
        "child_ranges": [
            "(line 122,col 5)-(line 123,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_4()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_4() {\n    testSame(\"var a = {}; a.c = 1; var d = a || {}; a.c;\");\n  }\n",
        "begin_line": 126,
        "end_line": 128,
        "comment": "",
        "child_ranges": [
            "(line 127,col 5)-(line 127,col 59)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_5()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_5() {\n    testSame(\"var a = {}; a.c = 1; var d = a.c || a; a.c;\");\n  }\n",
        "begin_line": 130,
        "end_line": 132,
        "comment": "",
        "child_ranges": [
            "(line 131,col 5)-(line 131,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_6()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_6() {\n    test(\"var a = {b: 0}; a.c = 1; var d = !(a.c || a); a.c;\",\n         \"var a$b = 0; var a = {}; var a$c = 1; var d = !(a$c || a); a$c;\");\n  }\n",
        "begin_line": 134,
        "end_line": 137,
        "comment": "",
        "child_ranges": [
            "(line 135,col 5)-(line 136,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth2()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth2() {\n    test(\"var a = {b: {}}; a.b.c = 1; if (a.b) x(a.b.c);\",\n         \"var a$b = {}; var a$b$c = 1; if (a$b) x(a$b$c);\");\n  }\n",
        "begin_line": 139,
        "end_line": 142,
        "comment": "",
        "child_ranges": [
            "(line 140,col 5)-(line 141,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth3()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth3() {\n    // TODO(user): Make CollapseProperties even more aggressive so that\n    // a$b.z gets collapsed. Right now, it doesn't get collapsed because the\n    // expression (a.b && a.b.c) could return a.b. But since it returns a.b iff\n    // a.b *is* safely collapsible, the boolean logic should be smart enough to\n    // only consider the right side of the && as aliasing.\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \" a.b.z = 1; var d = a.b && a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){};\" +\n         \" a$b.z = 1; var d = a$b && a$b$c;\", null,\n         CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 144,
        "end_line": 155,
        "comment": "",
        "child_ranges": [
            "(line 150,col 5)-(line 154,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionNameInBooleanExpressionDepth1()",
        "snippet": "  public void testGlobalFunctionNameInBooleanExpressionDepth1() {\n    test(\"function a() {} a.c = 1; if (a) x(a.c);\",\n         \"function a() {} var a$c = 1; if (a) x(a$c);\");\n  }\n",
        "begin_line": 157,
        "end_line": 160,
        "comment": "",
        "child_ranges": [
            "(line 158,col 5)-(line 159,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionNameInBooleanExpressionDepth2()",
        "snippet": "  public void testGlobalFunctionNameInBooleanExpressionDepth2() {\n    test(\"var a = {b: function(){}}; a.b.c = 1; if (a.b) x(a.b.c);\",\n         \"var a$b = function(){}; var a$b$c = 1; if (a$b) x(a$b$c);\");\n  }\n",
        "begin_line": 162,
        "end_line": 165,
        "comment": "",
        "child_ranges": [
            "(line 163,col 5)-(line 164,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_1()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_1() {\n    // An object's properties are not collapsed if the object is referenced\n    // in a such a way that an alias is created for it.\n    testSame(\"var a = {b: 0}; var c = a; c.b = 1; a.b == c.b;\");\n  }\n",
        "begin_line": 167,
        "end_line": 171,
        "comment": "",
        "child_ranges": [
            "(line 170,col 5)-(line 170,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_2()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_2() {\n    testSame(\"var a = {b: 0}; f(a); a.b;\");\n  }\n",
        "begin_line": 173,
        "end_line": 175,
        "comment": "",
        "child_ranges": [
            "(line 174,col 5)-(line 174,col 43)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_3()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_3() {\n    testSame(\"var a = {b: 0}; new f(a); a.b;\");\n  }\n",
        "begin_line": 177,
        "end_line": 179,
        "comment": "",
        "child_ranges": [
            "(line 178,col 5)-(line 178,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth2_1()",
        "snippet": "  public void testAliasCreatedForObjectDepth2_1() {\n    test(\"var a = {}; a.b = {c: 0}; var d = a.b; a.b.c == d.c;\",\n         \"var a$b = {c: 0}; var d = a$b; a$b.c == d.c;\");\n  }\n",
        "begin_line": 181,
        "end_line": 184,
        "comment": "",
        "child_ranges": [
            "(line 182,col 5)-(line 183,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth2_2()",
        "snippet": "  public void testAliasCreatedForObjectDepth2_2() {\n    test(\"var a = {}; a.b = {c: 0}; for (var p in a.b) { e(a.b[p]); }\",\n         \"var a$b = {c: 0}; for (var p in a$b) { e(a$b[p]); }\");\n  }\n",
        "begin_line": 186,
        "end_line": 189,
        "comment": "",
        "child_ranges": [
            "(line 187,col 5)-(line 188,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_1()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_1() {\n    // An enum's values are always collapsed, even if the enum object is\n    // referenced in a such a way that an alias is created for it.\n    test(\"/** @enum */ var a = {b: 0}; var c = a; c.b = 1; a.b != c.b;\",\n         \"var a$b = 0; var a = {b: a$b}; var c = a; c.b = 1; a$b != c.b;\");\n  }\n",
        "begin_line": 191,
        "end_line": 196,
        "comment": "",
        "child_ranges": [
            "(line 194,col 5)-(line 195,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_2()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_2() {\n    test(\"/** @enum */ var a = {b: 0}; f(a); a.b;\",\n         \"var a$b = 0; var a = {b: a$b}; f(a); a$b;\");\n  }\n",
        "begin_line": 198,
        "end_line": 201,
        "comment": "",
        "child_ranges": [
            "(line 199,col 5)-(line 200,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_3()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_3() {\n    test(\"/** @enum */ var a = {b: 0}; new f(a); a.b;\",\n         \"var a$b = 0; var a = {b: a$b}; new f(a); a$b;\");\n  }\n",
        "begin_line": 203,
        "end_line": 206,
        "comment": "",
        "child_ranges": [
            "(line 204,col 5)-(line 205,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_4()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_4() {\n    test(\"/** @enum */ var a = {b: 0}; for (var p in a) { f(a[p]); }\",\n         \"var a$b = 0; var a = {b: a$b}; for (var p in a) { f(a[p]); }\");\n  }\n",
        "begin_line": 208,
        "end_line": 211,
        "comment": "",
        "child_ranges": [
            "(line 209,col 5)-(line 210,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_1()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_1() {\n    test(\"var a = {}; /** @enum */ a.b = {c: 0};\" +\n         \"var d = a.b; d.c = 1; a.b.c != d.c;\",\n         \"var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"var d = a$b; d.c = 1; a$b$c != d.c;\");\n  }\n",
        "begin_line": 213,
        "end_line": 218,
        "comment": "",
        "child_ranges": [
            "(line 214,col 5)-(line 217,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_2()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_2() {\n    test(\"var a = {}; /** @enum */ a.b = {c: 0};\" +\n         \"for (var p in a.b) { f(a.b[p]); }\",\n         \"var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"for (var p in a$b) { f(a$b[p]); }\");\n  }\n",
        "begin_line": 220,
        "end_line": 225,
        "comment": "",
        "child_ranges": [
            "(line 221,col 5)-(line 224,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_3()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_3() {\n    test(\"var a = {}; var d = a; /** @enum */ a.b = {c: 0};\" +\n         \"for (var p in a.b) { f(a.b[p]); }\",\n         \"var a = {}; var d = a; var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"for (var p in a$b) { f(a$b[p]); }\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 227,
        "end_line": 233,
        "comment": "",
        "child_ranges": [
            "(line 228,col 5)-(line 232,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMisusedEnumTag()",
        "snippet": "  public void testMisusedEnumTag() {\n    testSame(\"var a = {}; var d = a; a.b = function() {};\" +\n             \"/** @enum */ a.b.c = 0; a.b.c;\");\n  }\n",
        "begin_line": 235,
        "end_line": 238,
        "comment": "",
        "child_ranges": [
            "(line 236,col 5)-(line 237,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMisusedConstructorTag()",
        "snippet": "  public void testMisusedConstructorTag() {\n    testSame(\"var a = {}; var d = a; a.b = function() {};\" +\n             \"/** @constructor */ a.b.c = 0; a.b.c;\");\n  }\n",
        "begin_line": 240,
        "end_line": 243,
        "comment": "",
        "child_ranges": [
            "(line 241,col 5)-(line 242,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_1() {\n    // A function's properties *are* collapsed even if the function is\n    // referenced in a such a way that an alias is created for it,\n    // since a function with custom properties is considered a class and its\n    // non-prototype properties are considered static methods and variables.\n    // People don't typically iterate through static members of a class or\n    // refer to them using an alias for the class name.\n    test(\"var a = function(){}; a.b = 1; var c = a; c.b = 2; a.b != c.b;\",\n         \"var a = function(){}; var a$b = 1; var c = a; c.b = 2; a$b != c.b;\");\n  }\n",
        "begin_line": 245,
        "end_line": 254,
        "comment": "",
        "child_ranges": [
            "(line 252,col 5)-(line 253,col 79)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_2() {\n    test(\"var a = function(){}; a.b = 1; f(a); a.b;\",\n         \"var a = function(){}; var a$b = 1; f(a); a$b;\");\n  }\n",
        "begin_line": 256,
        "end_line": 259,
        "comment": "",
        "child_ranges": [
            "(line 257,col 5)-(line 258,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_3() {\n    test(\"var a = function(){}; a.b = 1; new f(a); a.b;\",\n         \"var a = function(){}; var a$b = 1; new f(a); a$b;\");\n  }\n",
        "begin_line": 261,
        "end_line": 264,
        "comment": "",
        "child_ranges": [
            "(line 262,col 5)-(line 263,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2()",
        "snippet": "  public void testAliasCreatedForFunctionDepth2() {\n    test(\"var a = {}; a.b = function() {}; a.b.c = 1; var d = a.b;\" +\n         \"a.b.c != d.c;\",\n         \"var a$b = function() {}; var a$b$c = 1; var d = a$b;\" +\n         \"a$b$c != d.c;\");\n  }\n",
        "begin_line": 266,
        "end_line": 271,
        "comment": "",
        "child_ranges": [
            "(line 267,col 5)-(line 270,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_1()",
        "snippet": "  public void testAliasCreatedForClassDepth1_1() {\n    // A class's name is always collapsed, even if one of its prefixes is\n    // referenced in a such a way that an alias is created for it.\n    test(\"var a = {}; /** @constructor */ a.b = function(){};\" +\n         \"var c = a; c.b = 0; a.b != c.b;\",\n         \"var a = {}; var a$b = function(){};\" +\n         \"var c = a; c.b = 0; a$b != c.b;\", null,\n         CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 273,
        "end_line": 281,
        "comment": "",
        "child_ranges": [
            "(line 276,col 5)-(line 280,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_2()",
        "snippet": "  public void testAliasCreatedForClassDepth1_2() {\n    test(\"var a = {}; /** @constructor */ a.b = function(){}; f(a); a.b;\",\n         \"var a = {}; var a$b = function(){}; f(a); a$b;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 283,
        "end_line": 287,
        "comment": "",
        "child_ranges": [
            "(line 284,col 5)-(line 286,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_3()",
        "snippet": "  public void testAliasCreatedForClassDepth1_3() {\n    test(\"var a = {}; /** @constructor */ a.b = function(){}; new f(a); a.b;\",\n         \"var a = {}; var a$b = function(){}; new f(a); a$b;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 289,
        "end_line": 293,
        "comment": "",
        "child_ranges": [
            "(line 290,col 5)-(line 292,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_1()",
        "snippet": "  public void testAliasCreatedForClassDepth2_1() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"var d = a.b; a.b.c != d.c;\",\n         \"var a$b = {}; var a$b$c = function(){};\" +\n         \"var d = a$b; a$b$c != d.c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 295,
        "end_line": 301,
        "comment": "",
        "child_ranges": [
            "(line 296,col 5)-(line 300,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_2()",
        "snippet": "  public void testAliasCreatedForClassDepth2_2() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"f(a.b); a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){}; f(a$b); a$b$c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 303,
        "end_line": 308,
        "comment": "",
        "child_ranges": [
            "(line 304,col 5)-(line 307,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_3()",
        "snippet": "  public void testAliasCreatedForClassDepth2_3() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"new f(a.b); a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){}; new f(a$b); a$b$c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 310,
        "end_line": 315,
        "comment": "",
        "child_ranges": [
            "(line 311,col 5)-(line 314,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNestedObjLit()",
        "snippet": "  public void testNestedObjLit() {\n    test(\"var a = {}; a.b = {f: 0, c: {d: 1}}; var e = a.b.c.d\",\n         \"var a$b$f = 0; var a$b$c$d = 1; var e = a$b$c$d;\");\n  }\n",
        "begin_line": 317,
        "end_line": 320,
        "comment": "",
        "child_ranges": [
            "(line 318,col 5)-(line 319,col 61)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationUsedInSameVarList()",
        "snippet": "  public void testObjLitDeclarationUsedInSameVarList() {\n    // The collapsed properties must defined in the same place in the var list\n    // where they were originally defined (and not, for example, at the end).\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c;\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c;\");\n  }\n",
        "begin_line": 322,
        "end_line": 327,
        "comment": "",
        "child_ranges": [
            "(line 325,col 5)-(line 326,col 66)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropGetInsideAnObjLit()",
        "snippet": "  public void testPropGetInsideAnObjLit() {\n    test(\"var x = {}; x.y = 1; var a = {}; a.b = {c: x.y}\",\n         \"var x$y = 1; var a$b$c = x$y;\");\n  }\n",
        "begin_line": 329,
        "end_line": 332,
        "comment": "",
        "child_ranges": [
            "(line 330,col 5)-(line 331,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithQuotedKeyThatDoesNotGetRead()",
        "snippet": "  public void testObjLitWithQuotedKeyThatDoesNotGetRead() {\n    test(\"var a = {}; a.b = {c: 0, 'd': 1}; var e = a.b.c;\",\n         \"var a$b$c = 0; var a$b$d = 1; var e = a$b$c;\");\n  }\n",
        "begin_line": 334,
        "end_line": 337,
        "comment": "",
        "child_ranges": [
            "(line 335,col 5)-(line 336,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithQuotedKeyThatGetsRead()",
        "snippet": "  public void testObjLitWithQuotedKeyThatGetsRead() {\n    test(\"var a = {}; a.b = {c: 0, 'd': 1}; var e = a.b['d'];\",\n         \"var a$b = {c: 0, 'd': 1}; var e = a$b['d'];\");\n  }\n",
        "begin_line": 339,
        "end_line": 342,
        "comment": "",
        "child_ranges": [
            "(line 340,col 5)-(line 341,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionWithQuotedPropertyThatDoesNotGetRead()",
        "snippet": "  public void testFunctionWithQuotedPropertyThatDoesNotGetRead() {\n    test(\"var a = {}; a.b = function() {}; a.b['d'] = 1;\",\n         \"var a$b = function() {}; a$b['d'] = 1;\");\n  }\n",
        "begin_line": 344,
        "end_line": 347,
        "comment": "",
        "child_ranges": [
            "(line 345,col 5)-(line 346,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionWithQuotedPropertyThatGetsRead()",
        "snippet": "  public void testFunctionWithQuotedPropertyThatGetsRead() {\n    test(\"var a = {}; a.b = function() {}; a.b['d'] = 1; f(a.b['d']);\",\n         \"var a$b = function() {}; a$b['d'] = 1; f(a$b['d']);\");\n  }\n",
        "begin_line": 349,
        "end_line": 352,
        "comment": "",
        "child_ranges": [
            "(line 350,col 5)-(line 351,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedToMultipleNames1()",
        "snippet": "  public void testObjLitAssignedToMultipleNames1() {\n    // An object literal that's assigned to multiple names isn't collapsed.\n    testSame(\"var a = b = {c: 0, d: 1}; var e = a.c; var f = b.d;\");\n  }\n",
        "begin_line": 354,
        "end_line": 357,
        "comment": "",
        "child_ranges": [
            "(line 356,col 5)-(line 356,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedToMultipleNames2()",
        "snippet": "  public void testObjLitAssignedToMultipleNames2() {\n    testSame(\"a = b = {c: 0, d: 1}; var e = a.c; var f = b.d;\");\n  }\n",
        "begin_line": 359,
        "end_line": 361,
        "comment": "",
        "child_ranges": [
            "(line 360,col 5)-(line 360,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitRedefinedInGlobalScope()",
        "snippet": "  public void testObjLitRedefinedInGlobalScope() {\n    testSame(\"a = {b: 0}; a = {c: 1}; var d = a.b; var e = a.c;\");\n  }\n",
        "begin_line": 363,
        "end_line": 365,
        "comment": "",
        "child_ranges": [
            "(line 364,col 5)-(line 364,col 66)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitRedefinedInLocalScope()",
        "snippet": "  public void testObjLitRedefinedInLocalScope() {\n    test(\"var a = {}; a.b = {c: 0}; function d() { a.b = {c: 1}; } e(a.b.c);\",\n         \"var a$b = {c: 0}; function d() { a$b = {c: 1}; } e(a$b.c);\");\n  }\n",
        "begin_line": 367,
        "end_line": 370,
        "comment": "",
        "child_ranges": [
            "(line 368,col 5)-(line 369,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedInTernaryExpression1()",
        "snippet": "  public void testObjLitAssignedInTernaryExpression1() {\n    testSame(\"a = x ? {b: 0} : d; var c = a.b;\");\n  }\n",
        "begin_line": 372,
        "end_line": 374,
        "comment": "",
        "child_ranges": [
            "(line 373,col 5)-(line 373,col 49)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedInTernaryExpression2()",
        "snippet": "  public void testObjLitAssignedInTernaryExpression2() {\n    testSame(\"a = x ? {b: 0} : {b: 1}; var c = a.b;\");\n  }\n",
        "begin_line": 376,
        "end_line": 378,
        "comment": "",
        "child_ranges": [
            "(line 377,col 5)-(line 377,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally1()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally1() {\n    testSame(\"var a; if (x) a = {b: 0}; var c = x ? a.b : 0;\");\n  }\n",
        "begin_line": 380,
        "end_line": 382,
        "comment": "",
        "child_ranges": [
            "(line 381,col 5)-(line 381,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally1b()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally1b() {\n    test(\"if (x) var a = {b: 0}; var c = x ? a.b : 0;\",\n         \"if (x) var a$b = 0; var c = x ? a$b : 0;\");\n  }\n",
        "begin_line": 384,
        "end_line": 387,
        "comment": "",
        "child_ranges": [
            "(line 385,col 5)-(line 386,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally2()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally2() {\n    test(\"if (x) var a = {b: 0}; var c = a.b; var d = a.c;\",\n         \"if (x){ var a$b = 0; var a = {}; }var c = a$b; var d = a.c;\");\n  }\n",
        "begin_line": 389,
        "end_line": 392,
        "comment": "",
        "child_ranges": [
            "(line 390,col 5)-(line 391,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally3()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally3() {\n    testSame(\"var a; if (x) a = {b: 0}; else a = {b: 1}; var c = a.b;\");\n  }\n",
        "begin_line": 394,
        "end_line": 396,
        "comment": "",
        "child_ranges": [
            "(line 395,col 5)-(line 395,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectPropertySetToObjLitConditionally()",
        "snippet": "  public void testObjectPropertySetToObjLitConditionally() {\n    test(\"var a = {}; if (x) a.b = {c: 0}; var d = a.b ? a.b.c : 0;\",\n         \"if (x){ var a$b$c = 0; var a$b = {} } var d = a$b ? a$b$c : 0;\");\n  }\n",
        "begin_line": 398,
        "end_line": 401,
        "comment": "",
        "child_ranges": [
            "(line 399,col 5)-(line 400,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionPropertySetToObjLitConditionally()",
        "snippet": "  public void testFunctionPropertySetToObjLitConditionally() {\n    test(\"function a() {} if (x) a.b = {c: 0}; var d = a.b ? a.b.c : 0;\",\n         \"function a() {} if (x){ var a$b$c = 0; var a$b = {} }\" +\n         \"var d = a$b ? a$b$c : 0;\");\n  }\n",
        "begin_line": 403,
        "end_line": 407,
        "comment": "",
        "child_ranges": [
            "(line 404,col 5)-(line 406,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPrototypePropertySetToAnObjectLiteral()",
        "snippet": "  public void testPrototypePropertySetToAnObjectLiteral() {\n    test(\"var a = {b: function(){}}; a.b.prototype.c = {d: 0};\",\n         \"var a$b = function(){}; a$b.prototype.c = {d: 0};\");\n  }\n",
        "begin_line": 409,
        "end_line": 412,
        "comment": "",
        "child_ranges": [
            "(line 410,col 5)-(line 411,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectPropertyResetInLocalScope()",
        "snippet": "  public void testObjectPropertyResetInLocalScope() {\n    test(\"var z = {}; z.a = 0; function f() {z.a = 5; return z.a}\",\n         \"var z$a = 0; function f() {z$a = 5; return z$a}\");\n  }\n",
        "begin_line": 414,
        "end_line": 417,
        "comment": "",
        "child_ranges": [
            "(line 415,col 5)-(line 416,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionPropertyResetInLocalScope()",
        "snippet": "  public void testFunctionPropertyResetInLocalScope() {\n    test(\"function z() {} z.a = 0; function f() {z.a = 5; return z.a}\",\n         \"function z() {} var z$a = 0; function f() {z$a = 5; return z$a}\");\n  }\n",
        "begin_line": 419,
        "end_line": 422,
        "comment": "",
        "child_ranges": [
            "(line 420,col 5)-(line 421,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInGlobalScope1()",
        "snippet": "  public void testNamespaceResetInGlobalScope1() {\n    test(\"var a = {}; /** @constructor */a.b = function() {}; a = {};\",\n         \"var a = {}; var a$b = function() {}; a = {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 424,
        "end_line": 428,
        "comment": "",
        "child_ranges": [
            "(line 425,col 5)-(line 427,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInGlobalScope2()",
        "snippet": "  public void testNamespaceResetInGlobalScope2() {\n    test(\"var a = {}; a = {}; /** @constructor */a.b = function() {};\",\n         \"var a = {}; a = {}; var a$b = function() {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 430,
        "end_line": 434,
        "comment": "",
        "child_ranges": [
            "(line 431,col 5)-(line 433,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInLocalScope1()",
        "snippet": "  public void testNamespaceResetInLocalScope1() {\n    test(\"var a = {}; /** @constructor */a.b = function() {};\" +\n         \" function f() { a = {}; }\",\n         \"var a = {};var a$b = function() {};\" +\n         \" function f() { a = {}; }\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 436,
        "end_line": 442,
        "comment": "",
        "child_ranges": [
            "(line 437,col 5)-(line 441,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInLocalScope2()",
        "snippet": "  public void testNamespaceResetInLocalScope2() {\n    test(\"var a = {}; function f() { a = {}; }\" +\n         \" /** @constructor */a.b = function() {};\",\n         \"var a = {}; function f() { a = {}; }\" +\n         \" var a$b = function() {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 444,
        "end_line": 450,
        "comment": "",
        "child_ranges": [
            "(line 445,col 5)-(line 449,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceDefinedInLocalScope()",
        "snippet": "  public void testNamespaceDefinedInLocalScope() {\n    test(\"var a = {}; (function() { a.b = {}; })();\" +\n         \" /** @constructor */a.b.c = function() {};\",\n         \"var a$b; (function() { a$b = {}; })(); var a$b$c = function() {};\");\n  }\n",
        "begin_line": 452,
        "end_line": 456,
        "comment": "",
        "child_ranges": [
            "(line 453,col 5)-(line 455,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToObjectInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToObjectInLocalScopeDepth1() {\n    test(\"var a = {b: 0}; function f() { a.c = 5; return a.c; }\",\n         \"var a$b = 0; var a$c; function f() { a$c = 5; return a$c; }\");\n  }\n",
        "begin_line": 458,
        "end_line": 461,
        "comment": "",
        "child_ranges": [
            "(line 459,col 5)-(line 460,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToObjectInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToObjectInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = {}; (function() {a.b.c = 0;})(); x = a.b.c;\",\n         \"var a$b$c; (function() {a$b$c = 0;})(); x = a$b$c;\");\n  }\n",
        "begin_line": 463,
        "end_line": 466,
        "comment": "",
        "child_ranges": [
            "(line 464,col 5)-(line 465,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToFunctionInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToFunctionInLocalScopeDepth1() {\n    test(\"function a() {} function f() { a.c = 5; return a.c; }\",\n         \"function a() {} var a$c; function f() { a$c = 5; return a$c; }\");\n  }\n",
        "begin_line": 468,
        "end_line": 471,
        "comment": "",
        "child_ranges": [
            "(line 469,col 5)-(line 470,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToFunctionInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToFunctionInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = function() {}; function f() {a.b.c = 0;}\",\n         \"var a$b = function() {}; var a$b$c; function f() {a$b$c = 0;}\");\n  }\n",
        "begin_line": 473,
        "end_line": 476,
        "comment": "",
        "child_ranges": [
            "(line 474,col 5)-(line 475,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleObjectInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleObjectInLocalScopeDepth1() {\n    testSame(\"var a = {}; var c = a; (function() {a.b = 0;})(); a.b;\");\n  }\n",
        "begin_line": 478,
        "end_line": 480,
        "comment": "",
        "child_ranges": [
            "(line 479,col 5)-(line 479,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1() {\n    test(\"function a() {} var c = a; (function() {a.b = 0;})(); a.b;\",\n         \"function a() {} var a$b; var c = a; (function() {a$b = 0;})(); a$b;\");\n  }\n",
        "begin_line": 482,
        "end_line": 485,
        "comment": "",
        "child_ranges": [
            "(line 483,col 5)-(line 484,col 80)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleObjectInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToUncollapsibleObjectInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = {}; var d = a.b;\" +\n         \"(function() {a.b.c = 0;})(); a.b.c;\",\n         \"var a$b = {}; var d = a$b;\" +\n         \"(function() {a$b.c = 0;})(); a$b.c;\");\n  }\n",
        "begin_line": 487,
        "end_line": 492,
        "comment": "",
        "child_ranges": [
            "(line 488,col 5)-(line 491,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = function (){}; var d = a.b;\" +\n         \"(function() {a.b.c = 0;})(); a.b.c;\",\n         \"var a$b = function (){}; var a$b$c; var d = a$b;\" +\n         \"(function() {a$b$c = 0;})(); a$b$c;\");\n  }\n",
        "begin_line": 494,
        "end_line": 499,
        "comment": "",
        "child_ranges": [
            "(line 495,col 5)-(line 498,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfChildFuncOfUncollapsibleObjectDepth1()",
        "snippet": "  public void testPropertyOfChildFuncOfUncollapsibleObjectDepth1() {\n    testSame(\"var a = {}; var c = a; a.b = function (){}; a.b.x = 0; a.b.x;\");\n  }\n",
        "begin_line": 501,
        "end_line": 503,
        "comment": "",
        "child_ranges": [
            "(line 502,col 5)-(line 502,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfChildFuncOfUncollapsibleObjectDepth2()",
        "snippet": "  public void testPropertyOfChildFuncOfUncollapsibleObjectDepth2() {\n    test(\"var a = {}; a.b = {}; var c = a.b;\" +\n         \"a.b.c = function (){}; a.b.c.x = 0; a.b.c.x;\",\n         \"var a$b = {}; var c = a$b;\" +\n         \"a$b.c = function (){}; a$b.c.x = 0; a$b.c.x;\");\n  }\n",
        "begin_line": 505,
        "end_line": 510,
        "comment": "",
        "child_ranges": [
            "(line 506,col 5)-(line 509,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildFuncOfUncollapsibleObjectInLocalScope()",
        "snippet": "  public void testAddPropertyToChildFuncOfUncollapsibleObjectInLocalScope() {\n    testSame(\"var a = {}; a.b = function (){}; a.b.x = 0;\" +\n             \"var c = a; (function() {a.b.y = 1;})(); a.b.x; a.b.y;\");\n  }\n",
        "begin_line": 512,
        "end_line": 515,
        "comment": "",
        "child_ranges": [
            "(line 513,col 5)-(line 514,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildTypeOfUncollapsibleObjectInLocalScope()",
        "snippet": "  public void testAddPropertyToChildTypeOfUncollapsibleObjectInLocalScope() {\n    test(\"var a = {}; /** @constructor */ a.b = function (){}; a.b.x = 0;\" +\n         \"var c = a; (function() {a.b.y = 1;})(); a.b.x; a.b.y;\",\n         \"var a = {}; var a$b = function (){}; var a$b$y; var a$b$x = 0;\" +\n         \"var c = a; (function() {a$b$y = 1;})(); a$b$x; a$b$y;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 517,
        "end_line": 523,
        "comment": "",
        "child_ranges": [
            "(line 518,col 5)-(line 522,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope()",
        "snippet": "  public void testAddPropertyToChildOfUncollapsibleFunctionInLocalScope() {\n    test(\"function a() {} a.b = {x: 0}; var c = a;\" +\n         \"(function() {a.b.y = 0;})(); a.b.y;\",\n         \"function a() {} var a$b$x = 0; var a$b$y; var c = a;\" +\n         \"(function() {a$b$y = 0;})(); a$b$y;\");\n  }\n",
        "begin_line": 525,
        "end_line": 530,
        "comment": "",
        "child_ranges": [
            "(line 526,col 5)-(line 529,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testResetObjectPropertyInLocalScope()",
        "snippet": "  public void testResetObjectPropertyInLocalScope() {\n    test(\"var a = {b: 0}; a.c = 1; function f() { a.c = 5; }\",\n         \"var a$b = 0; var a$c = 1; function f() { a$c = 5; }\");\n  }\n",
        "begin_line": 532,
        "end_line": 535,
        "comment": "",
        "child_ranges": [
            "(line 533,col 5)-(line 534,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testResetFunctionPropertyInLocalScope()",
        "snippet": "  public void testResetFunctionPropertyInLocalScope() {\n    test(\"function a() {}; a.c = 1; function f() { a.c = 5; }\",\n         \"function a() {}; var a$c = 1; function f() { a$c = 5; }\");\n  }\n",
        "begin_line": 537,
        "end_line": 540,
        "comment": "",
        "child_ranges": [
            "(line 538,col 5)-(line 539,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalNameReferencedInLocalScopeBeforeDefined1()",
        "snippet": "  public void testGlobalNameReferencedInLocalScopeBeforeDefined1() {\n    // Because referencing global names earlier in the source code than they're\n    // defined is such a common practice, we collapse them even though a runtime\n    // exception could result (in the off-chance that the function gets called\n    // before the alias variable is defined).\n    test(\"var a = {b: 0}; function f() { a.c = 5; } a.c = 1;\",\n         \"var a$b = 0; function f() { a$c = 5; } var a$c = 1;\");\n  }\n",
        "begin_line": 542,
        "end_line": 549,
        "comment": "",
        "child_ranges": [
            "(line 547,col 5)-(line 548,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalNameReferencedInLocalScopeBeforeDefined2()",
        "snippet": "  public void testGlobalNameReferencedInLocalScopeBeforeDefined2() {\n    test(\"var a = {b: 0}; function f() { return a.c; } a.c = 1;\",\n         \"var a$b = 0; function f() { return a$c; } var a$c = 1;\");\n  }\n",
        "begin_line": 551,
        "end_line": 554,
        "comment": "",
        "child_ranges": [
            "(line 552,col 5)-(line 553,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth1_1()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth1_1() {\n    testSame(\"var a = {}; function f() { a.b(); }\" +\n             \"a = function() {}; a.b = function() {};\");\n  }\n",
        "begin_line": 556,
        "end_line": 559,
        "comment": "",
        "child_ranges": [
            "(line 557,col 5)-(line 558,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth1_2()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth1_2() {\n    testSame(\"var a = {}; /** @constructor */ a = function() {};\" +\n             \"a.b = {}; a.b.c = 0; function f() { a.b.d = 1; }\");\n  }\n",
        "begin_line": 561,
        "end_line": 564,
        "comment": "",
        "child_ranges": [
            "(line 562,col 5)-(line 563,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth2()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth2() {\n    test(\"var a = {}; a.b = {}; function f() { a.b.c(); }\" +\n         \"a.b = function() {}; a.b.c = function() {};\",\n         \"var a$b = {}; function f() { a$b.c(); }\" +\n         \"a$b = function() {}; a$b.c = function() {};\");\n  }\n",
        "begin_line": 566,
        "end_line": 571,
        "comment": "",
        "child_ranges": [
            "(line 567,col 5)-(line 570,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionCallDepth1()",
        "snippet": "  public void testFunctionCallDepth1() {\n    test(\"var a = {}; a.b = function(){}; var c = a.b();\",\n         \"var a$b = function(){}; var c = a$b()\");\n  }\n",
        "begin_line": 573,
        "end_line": 576,
        "comment": "",
        "child_ranges": [
            "(line 574,col 5)-(line 575,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionCallDepth2()",
        "snippet": "  public void testFunctionCallDepth2() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; a.b.c();\",\n         \"var a$b$c = function(){}; a$b$c();\");\n  }\n",
        "begin_line": 578,
        "end_line": 581,
        "comment": "",
        "child_ranges": [
            "(line 579,col 5)-(line 580,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionAlias()",
        "snippet": "  public void testFunctionAlias() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; a.b.d = a.b.c;\",\n         \"var a$b$c = function(){}; var a$b$d = a$b$c;\");\n  }\n",
        "begin_line": 583,
        "end_line": 586,
        "comment": "",
        "child_ranges": [
            "(line 584,col 5)-(line 585,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallToRedefinedFunction()",
        "snippet": "  public void testCallToRedefinedFunction() {\n    test(\"var a = {}; a.b = function(){}; a.b = function(){}; a.b();\",\n         \"var a$b = function(){}; a$b = function(){}; a$b();\");\n  }\n",
        "begin_line": 588,
        "end_line": 591,
        "comment": "",
        "child_ranges": [
            "(line 589,col 5)-(line 590,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapsePrototypeName()",
        "snippet": "  public void testCollapsePrototypeName() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; \" +\n         \"a.b.c.prototype.d = function(){}; (new a.b.c()).d();\",\n         \"var a$b$c = function(){}; a$b$c.prototype.d = function(){}; \" +\n         \"new a$b$c().d();\");\n  }\n",
        "begin_line": 593,
        "end_line": 598,
        "comment": "",
        "child_ranges": [
            "(line 594,col 5)-(line 597,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferencedPrototypeProperty()",
        "snippet": "  public void testReferencedPrototypeProperty() {\n    test(\"var a = {b: {}}; a.b.c = function(){}; a.b.c.prototype.d = {};\" +\n         \"e = a.b.c.prototype.d;\",\n         \"var a$b$c = function(){}; a$b$c.prototype.d = {};\" +\n         \"e = a$b$c.prototype.d;\");\n  }\n",
        "begin_line": 600,
        "end_line": 605,
        "comment": "",
        "child_ranges": [
            "(line 601,col 5)-(line 604,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testSetStaticAndPrototypePropertiesOnFunction()",
        "snippet": "  public void testSetStaticAndPrototypePropertiesOnFunction() {\n    test(\"var a = {}; a.b = function(){}; a.b.prototype.d = 0; a.b.c = 1;\",\n         \"var a$b = function(){}; a$b.prototype.d = 0; var a$b$c = 1;\");\n  }\n",
        "begin_line": 607,
        "end_line": 610,
        "comment": "",
        "child_ranges": [
            "(line 608,col 5)-(line 609,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReadUndefinedPropertyDepth1()",
        "snippet": "  public void testReadUndefinedPropertyDepth1() {\n    test(\"var a = {b: 0}; var c = a.d;\",\n         \"var a$b = 0; var a = {}; var c = a.d;\");\n  }\n",
        "begin_line": 612,
        "end_line": 615,
        "comment": "",
        "child_ranges": [
            "(line 613,col 5)-(line 614,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReadUndefinedPropertyDepth2()",
        "snippet": "  public void testReadUndefinedPropertyDepth2() {\n    test(\"var a = {b: {c: 0}}; f(a.b.c); f(a.b.d);\",\n         \"var a$b$c = 0; var a$b = {}; f(a$b$c); f(a$b.d);\");\n  }\n",
        "begin_line": 617,
        "end_line": 620,
        "comment": "",
        "child_ranges": [
            "(line 618,col 5)-(line 619,col 61)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallUndefinedMethodOnObjLitDepth1()",
        "snippet": "  public void testCallUndefinedMethodOnObjLitDepth1() {\n    test(\"var a = {b: 0}; a.c();\",\n         \"var a$b = 0; var a = {}; a.c();\");\n  }\n",
        "begin_line": 622,
        "end_line": 625,
        "comment": "",
        "child_ranges": [
            "(line 623,col 5)-(line 624,col 44)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallUndefinedMethodOnObjLitDepth2()",
        "snippet": "  public void testCallUndefinedMethodOnObjLitDepth2() {\n    test(\"var a = {b: {}}; a.b.c = function() {}; a.b.c(); a.b.d();\",\n         \"var a$b = {}; var a$b$c = function() {}; a$b$c(); a$b.d();\");\n  }\n",
        "begin_line": 627,
        "end_line": 630,
        "comment": "",
        "child_ranges": [
            "(line 628,col 5)-(line 629,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertiesOfAnUndefinedVar()",
        "snippet": "  public void testPropertiesOfAnUndefinedVar() {\n    testSame(\"a.document = d; f(a.document.innerHTML);\");\n  }\n",
        "begin_line": 632,
        "end_line": 634,
        "comment": "",
        "child_ranges": [
            "(line 633,col 5)-(line 633,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfAnObjectThatIsNeitherFunctionNorObjLit()",
        "snippet": "  public void testPropertyOfAnObjectThatIsNeitherFunctionNorObjLit() {\n    testSame(\"var a = window; a.document = d; f(a.document)\");\n  }\n",
        "begin_line": 636,
        "end_line": 638,
        "comment": "",
        "child_ranges": [
            "(line 637,col 5)-(line 637,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis1()",
        "snippet": "  public void testStaticFunctionReferencingThis1() {\n    // Note: Google's Javascript Style Guide says to avoid using the 'this'\n    // keyword in a static function.\n    test(\"var a = {}; a.b = function() {this.c}; var d = a.b;\",\n         \"var a$b = function() {this.c}; var d = a$b;\", null, UNSAFE_THIS);\n  }\n",
        "begin_line": 640,
        "end_line": 645,
        "comment": "",
        "child_ranges": [
            "(line 643,col 5)-(line 644,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis2()",
        "snippet": "  public void testStaticFunctionReferencingThis2() {\n    // This gives no warning, because \"this\" is in a scope whose name is not\n    // getting collapsed.\n    test(\"var a = {}; \" +\n         \"a.b = function() { return function(){ return this; }; };\",\n         \"var a$b = function() { return function(){ return this; }; };\");\n  }\n",
        "begin_line": 647,
        "end_line": 653,
        "comment": "",
        "child_ranges": [
            "(line 650,col 5)-(line 652,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis3()",
        "snippet": "  public void testStaticFunctionReferencingThis3() {\n    test(\"var a = {b: function() {this.c}};\",\n         \"var a$b = function() { this.c };\", null, UNSAFE_THIS);\n  }\n",
        "begin_line": 655,
        "end_line": 658,
        "comment": "",
        "child_ranges": [
            "(line 656,col 5)-(line 657,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis4()",
        "snippet": "  public void testStaticFunctionReferencingThis4() {\n    test(\"var a = {/** @this {Element} */ b: function() {this.c}};\",\n         \"var a$b = function() { this.c };\");\n  }\n",
        "begin_line": 660,
        "end_line": 663,
        "comment": "",
        "child_ranges": [
            "(line 661,col 5)-(line 662,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPrototypeMethodReferencingThis()",
        "snippet": "  public void testPrototypeMethodReferencingThis() {\n    testSame(\"var A = function(){}; A.prototype = {b: function() {this.c}};\");\n  }\n",
        "begin_line": 665,
        "end_line": 667,
        "comment": "",
        "child_ranges": [
            "(line 666,col 5)-(line 666,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testConstructorReferencingThis()",
        "snippet": "  public void testConstructorReferencingThis() {\n    test(\"var a = {}; \" +\n         \"/** @constructor */ a.b = function() { this.a = 3; };\",\n         \"var a$b = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 669,
        "end_line": 673,
        "comment": "",
        "child_ranges": [
            "(line 670,col 5)-(line 672,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testSafeReferenceOfThis()",
        "snippet": "  public void testSafeReferenceOfThis() {\n    test(\"var a = {}; \" +\n         \"/** @this {Object} */ a.b = function() { this.a = 3; };\",\n         \"var a$b = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 675,
        "end_line": 679,
        "comment": "",
        "child_ranges": [
            "(line 676,col 5)-(line 678,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionReferenceOfThis()",
        "snippet": "  public void testGlobalFunctionReferenceOfThis() {\n    testSame(\"var a = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 681,
        "end_line": 683,
        "comment": "",
        "child_ranges": [
            "(line 682,col 5)-(line 682,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionGivenTwoNames()",
        "snippet": "  public void testFunctionGivenTwoNames() {\n    // It's okay to collapse f's properties because g is not added to the\n    // global scope as an alias for f. (Try it in your browser.)\n    test(\"var f = function g() {}; f.a = 1; h(f.a);\",\n         \"var f = function g() {}; var f$a = 1; h(f$a);\");\n  }\n",
        "begin_line": 685,
        "end_line": 690,
        "comment": "",
        "child_ranges": [
            "(line 688,col 5)-(line 689,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithUsedNumericKey()",
        "snippet": "  public void testObjLitWithUsedNumericKey() {\n    testSame(\"a = {40: {}, c: {}}; var d = a[40]; var e = a.c;\");\n  }\n",
        "begin_line": 692,
        "end_line": 694,
        "comment": "",
        "child_ranges": [
            "(line 693,col 5)-(line 693,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithUnusedNumericKey()",
        "snippet": "  public void testObjLitWithUnusedNumericKey() {\n    test(\"var a = {40: {}, c: {}}; var e = a.c;\",\n         \"var a$1 = {}; var a$c = {}; var e = a$c\");\n  }\n",
        "begin_line": 696,
        "end_line": 699,
        "comment": "",
        "child_ranges": [
            "(line 697,col 5)-(line 698,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithNonIdentifierKeys()",
        "snippet": "  public void testObjLitWithNonIdentifierKeys() {\n    testSame(\"a = {' ': 0, ',': 1}; var c = a[' '];\");\n  }\n",
        "begin_line": 701,
        "end_line": 703,
        "comment": "",
        "child_ranges": [
            "(line 702,col 5)-(line 702,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments1()",
        "snippet": "  public void testChainedAssignments1() {\n    test(\"var x = {}; x.y = a = 0;\",\n         \"var x$y = a = 0;\");\n  }\n",
        "begin_line": 705,
        "end_line": 708,
        "comment": "",
        "child_ranges": [
            "(line 706,col 5)-(line 707,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments2()",
        "snippet": "  public void testChainedAssignments2() {\n    test(\"var x = {}; x.y = a = b = c();\",\n         \"var x$y = a = b = c();\");\n  }\n",
        "begin_line": 710,
        "end_line": 713,
        "comment": "",
        "child_ranges": [
            "(line 711,col 5)-(line 712,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments3()",
        "snippet": "  public void testChainedAssignments3() {\n    test(\"var x = {y: 1}; a = b = x.y;\",\n         \"var x$y = 1; a = b = x$y;\");\n  }\n",
        "begin_line": 715,
        "end_line": 718,
        "comment": "",
        "child_ranges": [
            "(line 716,col 5)-(line 717,col 38)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments4()",
        "snippet": "  public void testChainedAssignments4() {\n    test(\"var x = {}; a = b = x.y;\",\n         \"var x = {}; a = b = x.y;\");\n  }\n",
        "begin_line": 720,
        "end_line": 723,
        "comment": "",
        "child_ranges": [
            "(line 721,col 5)-(line 722,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments5()",
        "snippet": "  public void testChainedAssignments5() {\n    test(\"var x = {}; a = x.y = 0;\", \"var x$y; a = x$y = 0;\");\n  }\n",
        "begin_line": 725,
        "end_line": 727,
        "comment": "",
        "child_ranges": [
            "(line 726,col 5)-(line 726,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments6()",
        "snippet": "  public void testChainedAssignments6() {\n    test(\"var x = {}; a = x.y = b = c();\",\n         \"var x$y; a = x$y = b = c();\");\n  }\n",
        "begin_line": 729,
        "end_line": 732,
        "comment": "",
        "child_ranges": [
            "(line 730,col 5)-(line 731,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments7()",
        "snippet": "  public void testChainedAssignments7() {\n    test(\"var x = {}; a = x.y = {}; /** @constructor */ x.y.z = function() {};\",\n         \"var x$y; a = x$y = {}; var x$y$z = function() {};\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 734,
        "end_line": 738,
        "comment": "",
        "child_ranges": [
            "(line 735,col 5)-(line 737,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments1()",
        "snippet": "  public void testChainedVarAssignments1() {\n    test(\"var x = {y: 1}; var a = x.y = 0;\",\n         \"var x$y = 1; var a = x$y = 0;\");\n  }\n",
        "begin_line": 740,
        "end_line": 743,
        "comment": "",
        "child_ranges": [
            "(line 741,col 5)-(line 742,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments2()",
        "snippet": "  public void testChainedVarAssignments2() {\n    test(\"var x = {y: 1}; var a = x.y = b = 0;\",\n         \"var x$y = 1; var a = x$y = b = 0;\");\n  }\n",
        "begin_line": 745,
        "end_line": 748,
        "comment": "",
        "child_ranges": [
            "(line 746,col 5)-(line 747,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments3()",
        "snippet": "  public void testChainedVarAssignments3() {\n    test(\"var x = {y: {z: 1}}; var b = 0; var a = x.y.z = 1; var c = 2;\",\n         \"var x$y$z = 1; var b = 0; var a = x$y$z = 1; var c = 2;\");\n  }\n",
        "begin_line": 750,
        "end_line": 753,
        "comment": "",
        "child_ranges": [
            "(line 751,col 5)-(line 752,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments4()",
        "snippet": "  public void testChainedVarAssignments4() {\n    test(\"var x = {}; var a = b = x.y = 0;\",\n         \"var x$y; var a = b = x$y = 0;\");\n  }\n",
        "begin_line": 755,
        "end_line": 758,
        "comment": "",
        "child_ranges": [
            "(line 756,col 5)-(line 757,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments5()",
        "snippet": "  public void testChainedVarAssignments5() {\n    test(\"var x = {y: {}}; var a = b = x.y.z = 0;\",\n         \"var x$y$z; var a = b = x$y$z = 0;\");\n  }\n",
        "begin_line": 760,
        "end_line": 763,
        "comment": "",
        "child_ranges": [
            "(line 761,col 5)-(line 762,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPeerAndSubpropertyOfUncollapsibleProperty()",
        "snippet": "  public void testPeerAndSubpropertyOfUncollapsibleProperty() {\n    test(\"var x = {}; var a = x.y = 0; x.w = 1; x.y.z = 2;\" +\n         \"b = x.w; c = x.y.z;\",\n         \"var x$y; var a = x$y = 0; var x$w = 1; x$y.z = 2;\" +\n         \"b = x$w; c = x$y.z;\");\n  }\n",
        "begin_line": 765,
        "end_line": 770,
        "comment": "",
        "child_ranges": [
            "(line 766,col 5)-(line 769,col 32)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testComplexAssignmentAfterInitialAssignment()",
        "snippet": "  public void testComplexAssignmentAfterInitialAssignment() {\n    test(\"var d = {}; d.e = {}; d.e.f = 0; a = b = d.e.f = 1;\",\n         \"var d$e$f = 0; a = b = d$e$f = 1;\");\n  }\n",
        "begin_line": 772,
        "end_line": 775,
        "comment": "",
        "child_ranges": [
            "(line 773,col 5)-(line 774,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testRenamePrefixOfUncollapsibleProperty()",
        "snippet": "  public void testRenamePrefixOfUncollapsibleProperty() {\n    test(\"var d = {}; d.e = {}; a = b = d.e.f = 0;\",\n         \"var d$e$f; a = b = d$e$f = 0;\");\n  }\n",
        "begin_line": 777,
        "end_line": 780,
        "comment": "",
        "child_ranges": [
            "(line 778,col 5)-(line 779,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNewOperator()",
        "snippet": "  public void testNewOperator() {\n    // Using the new operator on a name doesn't prevent its (static) properties\n    // from getting collapsed.\n    test(\"var a = {}; a.b = function() {}; a.b.c = 1; var d = new a.b();\",\n         \"var a$b = function() {}; var a$b$c = 1; var d = new a$b();\");\n  }\n",
        "begin_line": 782,
        "end_line": 787,
        "comment": "",
        "child_ranges": [
            "(line 785,col 5)-(line 786,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMethodCall()",
        "snippet": "  public void testMethodCall() {\n    test(\"var a = {}; a.b = function() {}; var d = a.b();\",\n         \"var a$b = function() {}; var d = a$b();\");\n  }\n",
        "begin_line": 789,
        "end_line": 792,
        "comment": "",
        "child_ranges": [
            "(line 790,col 5)-(line 791,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDefinedInLocalScopeIsLeftAlone()",
        "snippet": "  public void testObjLitDefinedInLocalScopeIsLeftAlone() {\n    test(\"var a = {}; a.b = function() {};\" +\n         \"a.b.prototype.f_ = function() {\" +\n         \"  var x = { p: '', q: '', r: ''}; var y = x.q;\" +\n         \"};\",\n         \"var a$b = function() {};\" +\n         \"a$b.prototype.f_ = function() {\" +\n         \"  var x = { p: '', q: '', r: ''}; var y = x.q;\" +\n         \"};\");\n  }\n",
        "begin_line": 794,
        "end_line": 803,
        "comment": "",
        "child_ranges": [
            "(line 795,col 5)-(line 802,col 15)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertiesOnBothSidesOfAssignment()",
        "snippet": "  public void testPropertiesOnBothSidesOfAssignment() {\n    // This verifies that replacements are done in the right order. Collapsing\n    // the lvalue in an assignment affects the parse tree immediately above\n    // the rvalue, so we update all rvalues before any lvalues.\n    test(\"var a = {b: 0}; a.c = a.b;\", \"var a$b = 0; var a$c = a$b;\");\n  }\n",
        "begin_line": 805,
        "end_line": 810,
        "comment": "",
        "child_ranges": [
            "(line 809,col 5)-(line 809,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallOnUndefinedProperty()",
        "snippet": "  public void testCallOnUndefinedProperty() {\n    // The \"inherits\" property is not explicitly defined on a.b anywhere, but\n    // it is accessed as though it certainly exists (it is called), so we infer\n    // that it must be an uncollapsible property that has come into existence\n    // some other way.\n    test(\"var a = {}; a.b = function(){}; a.b.inherits(x);\",\n         \"var a$b = function(){}; a$b.inherits(x);\");\n  }\n",
        "begin_line": 812,
        "end_line": 819,
        "comment": "",
        "child_ranges": [
            "(line 817,col 5)-(line 818,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGetPropOnUndefinedProperty()",
        "snippet": "  public void testGetPropOnUndefinedProperty() {\n    // The \"superClass_\" property is not explicitly defined on a.b anywhere,\n    // but it is accessed as though it certainly exists (a subproperty of it\n    // is accessed), so we infer that it must be an uncollapsible property that\n    // has come into existence some other way.\n    test(\"var a = {b: function(){}}; a.b.prototype.c =\" +\n         \"function() { a.b.superClass_.c.call(this); }\",\n         \"var a$b = function(){}; a$b.prototype.c =\" +\n         \"function() { a$b.superClass_.c.call(this); }\");\n  }\n",
        "begin_line": 821,
        "end_line": 830,
        "comment": "",
        "child_ranges": [
            "(line 826,col 5)-(line 829,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias1()",
        "snippet": "  public void testLocalAlias1() {\n    test(\"var a = {b: 3}; function f() { var x = a; f(x.b); }\",\n         \"var a$b = 3; function f() { var x = null; f(a$b); }\");\n  }\n",
        "begin_line": 832,
        "end_line": 835,
        "comment": "",
        "child_ranges": [
            "(line 833,col 5)-(line 834,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias2()",
        "snippet": "  public void testLocalAlias2() {\n    test(\"var a = {b: 3, c: 4}; function f() { var x = a; f(x.b); f(x.c);}\",\n         \"var a$b = 3; var a$c = 4; \" +\n         \"function f() { var x = null; f(a$b); f(a$c);}\");\n  }\n",
        "begin_line": 837,
        "end_line": 841,
        "comment": "",
        "child_ranges": [
            "(line 838,col 5)-(line 840,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias3()",
        "snippet": "  public void testLocalAlias3() {\n    test(\"var a = {b: 3, c: {d: 5}}; \" +\n         \"function f() { var x = a; f(x.b); f(x.c); f(x.c.d); }\",\n         \"var a$b = 3; var a$c = {d: 5}; \" +\n         \"function f() { var x = null; f(a$b); f(a$c); f(a$c.d);}\");\n  }\n",
        "begin_line": 843,
        "end_line": 848,
        "comment": "",
        "child_ranges": [
            "(line 844,col 5)-(line 847,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias4()",
        "snippet": "  public void testLocalAlias4() {\n    test(\"var a = {b: 3}; var c = {d: 5}; \" +\n         \"function f() { var x = a; var y = c; f(x.b); f(y.d); }\",\n         \"var a$b = 3; var c$d = 5; \" +\n         \"function f() { var x = null; var y = null; f(a$b); f(c$d);}\");\n  }\n",
        "begin_line": 850,
        "end_line": 855,
        "comment": "",
        "child_ranges": [
            "(line 851,col 5)-(line 854,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias5()",
        "snippet": "  public void testLocalAlias5() {\n    test(\"var a = {b: {c: 5}}; \" +\n         \"function f() { var x = a; var y = x.b; f(a.b.c); f(y.c); }\",\n         \"var a$b$c = 5; \" +\n         \"function f() { var x = null; var y = null; f(a$b$c); f(a$b$c);}\");\n  }\n",
        "begin_line": 857,
        "end_line": 862,
        "comment": "",
        "child_ranges": [
            "(line 858,col 5)-(line 861,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias6()",
        "snippet": "  public void testLocalAlias6() {\n    test(\"var a = {b: 3}; function f() { var x = a; if (x.b) { f(x.b); } }\",\n         \"var a$b = 3; function f() { var x = null; if (a$b) { f(a$b); } }\");\n  }\n",
        "begin_line": 864,
        "end_line": 867,
        "comment": "",
        "child_ranges": [
            "(line 865,col 5)-(line 866,col 77)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias7()",
        "snippet": "  public void testLocalAlias7() {\n    test(\"var a = {b: {c: 5}}; function f() { var x = a.b; f(x.c); }\",\n         \"var a$b$c = 5; function f() { var x = null; f(a$b$c); }\");\n  }\n",
        "begin_line": 869,
        "end_line": 872,
        "comment": "",
        "child_ranges": [
            "(line 870,col 5)-(line 871,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalWriteToAncestor()",
        "snippet": "  public void testGlobalWriteToAncestor() {\n    testSame(\"var a = {b: 3}; function f() { var x = a; f(a.b); } a = 5;\");\n  }\n",
        "begin_line": 874,
        "end_line": 876,
        "comment": "",
        "child_ranges": [
            "(line 875,col 5)-(line 875,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalWriteToNonAncestor()",
        "snippet": "  public void testGlobalWriteToNonAncestor() {\n    test(\"var a = {b: 3}; function f() { var x = a; f(a.b); } a.b = 5;\",\n         \"var a$b = 3; function f() { var x = null; f(a$b); } a$b = 5;\");\n  }\n",
        "begin_line": 878,
        "end_line": 881,
        "comment": "",
        "child_ranges": [
            "(line 879,col 5)-(line 880,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalWriteToAncestor()",
        "snippet": "  public void testLocalWriteToAncestor() {\n    testSame(\"var a = {b: 3}; function f() { a = 5; var x = a; f(a.b); } \");\n  }\n",
        "begin_line": 883,
        "end_line": 885,
        "comment": "",
        "child_ranges": [
            "(line 884,col 5)-(line 884,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalWriteToNonAncestor()",
        "snippet": "  public void testLocalWriteToNonAncestor() {\n    test(\"var a = {b: 3}; \" +\n         \"function f() { a.b = 5; var x = a; f(a.b); }\",\n         \"var a$b = 3; function f() { a$b = 5; var x = null; f(a$b); } \");\n  }\n",
        "begin_line": 887,
        "end_line": 891,
        "comment": "",
        "child_ranges": [
            "(line 888,col 5)-(line 890,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNonWellformedAlias1()",
        "snippet": "  public void testNonWellformedAlias1() {\n    testSame(\"var a = {b: 3}; function f() { f(x); var x = a; f(x.b); }\");\n  }\n",
        "begin_line": 893,
        "end_line": 895,
        "comment": "",
        "child_ranges": [
            "(line 894,col 5)-(line 894,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNonWellformedAlias2()",
        "snippet": "  public void testNonWellformedAlias2() {\n    testSame(\"var a = {b: 3}; \" +\n             \"function f() { if (false) { var x = a; f(x.b); } f(x); }\");\n  }\n",
        "begin_line": 897,
        "end_line": 900,
        "comment": "",
        "child_ranges": [
            "(line 898,col 5)-(line 899,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfAncestor()",
        "snippet": "  public void testLocalAliasOfAncestor() {\n    testSame(\"var a = {b: {c: 5}}; function g() { f(a); } \" +\n             \"function f() { var x = a.b; f(x.c); }\");\n  }\n",
        "begin_line": 902,
        "end_line": 905,
        "comment": "",
        "child_ranges": [
            "(line 903,col 5)-(line 904,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalAliasOfAncestor()",
        "snippet": "  public void testGlobalAliasOfAncestor() {\n    testSame(\"var a = {b: {c: 5}}; var y = a; \" +\n             \"function f() { var x = a.b; f(x.c); }\");\n  }\n",
        "begin_line": 907,
        "end_line": 910,
        "comment": "",
        "child_ranges": [
            "(line 908,col 5)-(line 909,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfOtherName()",
        "snippet": "  public void testLocalAliasOfOtherName() {\n    testSame(\"var foo = function() { return {b: 3}; };\" +\n             \"var a = foo(); a.b = 5; \" +\n             \"function f() { var x = a.b; f(x); }\");\n  }\n",
        "begin_line": 912,
        "end_line": 916,
        "comment": "",
        "child_ranges": [
            "(line 913,col 5)-(line 915,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfFunction()",
        "snippet": "  public void testLocalAliasOfFunction() {\n    test(\"var a = function() {}; a.b = 5; \" +\n         \"function f() { var x = a.b; f(x); }\",\n         \"var a = function() {}; var a$b = 5; \" +\n         \"function f() { var x = null; f(a$b); }\");\n  }\n",
        "begin_line": 918,
        "end_line": 923,
        "comment": "",
        "child_ranges": [
            "(line 919,col 5)-(line 922,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNoInlineGetpropIntoCall()",
        "snippet": "  public void testNoInlineGetpropIntoCall() {\n    test(\"var b = x; function f() { var a = b; a(); }\",\n         \"var b = x; function f() { var a = null; b(); }\");\n    test(\"var b = {}; b.c = x; function f() { var a = b.c; a(); }\",\n         \"var b$c = x; function f() { var a = null; b$c(); }\");\n  }\n",
        "begin_line": 925,
        "end_line": 930,
        "comment": "",
        "child_ranges": [
            "(line 926,col 5)-(line 927,col 59)",
            "(line 928,col 5)-(line 929,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapsePropertyOnExternType()",
        "snippet": "  public void testCollapsePropertyOnExternType() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"String.myFunc = function() {}; String.myFunc();\",\n         \"var String$myFunc = function() {}; String$myFunc()\");\n  }\n",
        "begin_line": 932,
        "end_line": 936,
        "comment": "",
        "child_ranges": [
            "(line 933,col 5)-(line 933,col 43)",
            "(line 934,col 5)-(line 935,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapseForEachWithoutExterns()",
        "snippet": "  public void testCollapseForEachWithoutExterns() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"/** @constructor */function Array(){};\\n\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\",\n         \"if (!Array$forEach) {\\n\" +\n         \"  var Array$forEach = function() {};\\n\" +\n         \"}\", null, null);\n  }\n",
        "begin_line": 938,
        "end_line": 947,
        "comment": "",
        "child_ranges": [
            "(line 939,col 5)-(line 939,col 43)",
            "(line 940,col 5)-(line 946,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNoCollapseForEachInExterns()",
        "snippet": "  public void testNoCollapseForEachInExterns() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"/** @constructor */ function Array() {}\" +\n         \"Array.forEach = function() {}\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\", null, null);\n  }\n",
        "begin_line": 949,
        "end_line": 959,
        "comment": "",
        "child_ranges": [
            "(line 950,col 5)-(line 950,col 43)",
            "(line 951,col 5)-(line 958,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDoNotCollapsePropertyOnExternType()",
        "snippet": "  public void testDoNotCollapsePropertyOnExternType() {\n    collapsePropertiesOnExternTypes = false;\n    test(\"String.myFunc = function() {}; String.myFunc()\",\n         \"String.myFunc = function() {}; String.myFunc()\");\n  }\n",
        "begin_line": 961,
        "end_line": 965,
        "comment": "",
        "child_ranges": [
            "(line 962,col 5)-(line 962,col 44)",
            "(line 963,col 5)-(line 964,col 59)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1704733()",
        "snippet": "  public void testBug1704733() {\n    String prelude =\n        \"function protect(x) { return x; }\" +\n        \"function O() {}\" +\n        \"protect(O).m1 = function() {};\" +\n        \"protect(O).m2 = function() {};\" +\n        \"protect(O).m3 = function() {};\";\n\n    testSame(prelude +\n        \"alert(O.m1); alert(O.m2()); alert(!O.m3);\");\n  }\n",
        "begin_line": 967,
        "end_line": 977,
        "comment": "",
        "child_ranges": [
            "(line 968,col 5)-(line 973,col 41)",
            "(line 975,col 5)-(line 976,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1956277()",
        "snippet": "  public void testBug1956277() {\n    test(\"var CONST = {}; CONST.URL = 3;\",\n         \"var CONST$URL = 3;\");\n  }\n",
        "begin_line": 979,
        "end_line": 982,
        "comment": "",
        "child_ranges": [
            "(line 980,col 5)-(line 981,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1974371()",
        "snippet": "  public void testBug1974371() {\n    test(\n        \"/** @enum {Object} */ var Foo = {A: {c: 2}, B: {c: 3}};\" +\n        \"for (var key in Foo) {}\",\n        \"var Foo$A = {c: 2}; var Foo$B = {c: 3};\" +\n        \"var Foo = {A: Foo$A, B: Foo$B};\" +\n         \"for (var key in Foo) {}\");\n  }\n",
        "begin_line": 984,
        "end_line": 991,
        "comment": "",
        "child_ranges": [
            "(line 985,col 5)-(line 990,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects1()",
        "snippet": "  public void testEnumOfObjects1() {\n    test(\n        COMMON_ENUM +\n        \"for (var key in Foo.A) {}\",\n         \"var Foo$A = {c: 2}; var Foo$B$c = 3; for (var key in Foo$A) {}\");\n  }\n",
        "begin_line": 996,
        "end_line": 1001,
        "comment": "",
        "child_ranges": [
            "(line 997,col 5)-(line 1000,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects2()",
        "snippet": "  public void testEnumOfObjects2() {\n    test(\n        COMMON_ENUM +\n        \"foo(Foo.A.c);\",\n         \"var Foo$A$c = 2; var Foo$B$c = 3; foo(Foo$A$c);\");\n  }\n",
        "begin_line": 1003,
        "end_line": 1008,
        "comment": "",
        "child_ranges": [
            "(line 1004,col 5)-(line 1007,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects3()",
        "snippet": "  public void testEnumOfObjects3() {\n    test(\n        \"var x = {c: 2}; var y = {c: 3};\" +\n        \"/** @enum {Object} */ var Foo = {A: x, B: y};\" +\n        \"for (var key in Foo) {}\",\n        \"var x = {c: 2}; var y = {c: 3};\" +\n        \"var Foo$A = x; var Foo$B = y; var Foo = {A: Foo$A, B: Foo$B};\" +\n        \"for (var key in Foo) {}\");\n  }\n",
        "begin_line": 1010,
        "end_line": 1018,
        "comment": "",
        "child_ranges": [
            "(line 1011,col 5)-(line 1017,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects4()",
        "snippet": "  public void testEnumOfObjects4() {\n    // Note that this produces bad code, but that's OK, because\n    // checkConsts will yell at you for reassigning an enum value.\n    // (enum values have to be constant).\n    test(\n        COMMON_ENUM +\n        \"for (var key in Foo) {} Foo.A = 3; alert(Foo.A);\",\n        \"var Foo$A = {c: 2}; var Foo$B = {c: 3};\" +\n        \"var Foo = {A: Foo$A, B: Foo$B};\" +\n        \"for (var key in Foo) {} Foo$A = 3; alert(Foo$A);\");\n  }\n",
        "begin_line": 1020,
        "end_line": 1030,
        "comment": "",
        "child_ranges": [
            "(line 1024,col 5)-(line 1029,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectOfObjects1()",
        "snippet": "  public void testObjectOfObjects1() {\n    // Basically the same as testEnumOfObjects4, but without the\n    // constant enum values.\n    testSame(\n        \"var Foo = {a: {c: 2}, b: {c: 3}};\" +\n        \"for (var key in Foo) {} Foo.a = 3; alert(Foo.a);\");\n  }\n",
        "begin_line": 1032,
        "end_line": 1038,
        "comment": "",
        "child_ranges": [
            "(line 1035,col 5)-(line 1037,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject0()",
        "snippet": "  public void testReferenceInAnonymousObject0() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"var d = a.b.prototype.c;\",\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var d = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1040,
        "end_line": 1048,
        "comment": "",
        "child_ranges": [
            "(line 1041,col 5)-(line 1047,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject1()",
        "snippet": "  public void testReferenceInAnonymousObject1() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"var d = a.b.prototype.c;\",\n         \"var a$b = function(){};\" +\n         \"var d = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1050,
        "end_line": 1056,
        "comment": "",
        "child_ranges": [
            "(line 1051,col 5)-(line 1055,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject2()",
        "snippet": "  public void testReferenceInAnonymousObject2() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"var d = {c: a.b.prototype.c};\",\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var d$c = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1058,
        "end_line": 1066,
        "comment": "",
        "child_ranges": [
            "(line 1059,col 5)-(line 1065,col 39)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject3()",
        "snippet": "  public void testReferenceInAnonymousObject3() {\n    test(\"function CreateClass(a) {}\" +\n         \"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"a.d = CreateClass({c: a.b.prototype.c});\",\n         \"function CreateClass(a) {}\" +\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var a$d = CreateClass({c: a$b.prototype.c});\");\n  }\n",
        "begin_line": 1068,
        "end_line": 1078,
        "comment": "",
        "child_ranges": [
            "(line 1069,col 5)-(line 1077,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject4()",
        "snippet": "  public void testReferenceInAnonymousObject4() {\n    test(\"function CreateClass(a) {}\" +\n         \"var a = {};\" +\n         \"a.b = CreateClass({c: function() {}});\" +\n         \"a.d = CreateClass({c: a.b.c});\",\n         \"function CreateClass(a) {}\" +\n         \"var a$b = CreateClass({c: function() {}});\" +\n         \"var a$d = CreateClass({c: a$b.c});\");\n  }\n",
        "begin_line": 1080,
        "end_line": 1088,
        "comment": "",
        "child_ranges": [
            "(line 1081,col 5)-(line 1087,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject5()",
        "snippet": "  public void testReferenceInAnonymousObject5() {\n    test(\"function CreateClass(a) {}\" +\n         \"var a = {};\" +\n         \"a.b = CreateClass({c: function() {}});\" +\n         \"a.d = CreateClass({c: a.b.prototype.c});\",\n         \"function CreateClass(a) {}\" +\n         \"var a$b = CreateClass({c: function() {}});\" +\n         \"var a$d = CreateClass({c: a$b.prototype.c});\");\n  }\n",
        "begin_line": 1090,
        "end_line": 1098,
        "comment": "",
        "child_ranges": [
            "(line 1091,col 5)-(line 1097,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCrashInCommaOperator()",
        "snippet": "  public void testCrashInCommaOperator() {\n    test(\"var a = {}; a.b = function() {},a.b();\",\n         \"var a$b; a$b=function() {},a$b();\");\n  }\n",
        "begin_line": 1100,
        "end_line": 1103,
        "comment": "",
        "child_ranges": [
            "(line 1101,col 5)-(line 1102,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCrashInNestedAssign()",
        "snippet": "  public void testCrashInNestedAssign() {\n    test(\"var a = {}; if (a.b = function() {}) a.b();\",\n         \"var a$b; if (a$b=function() {}) { a$b(); }\");\n  }\n",
        "begin_line": 1105,
        "end_line": 1108,
        "comment": "",
        "child_ranges": [
            "(line 1106,col 5)-(line 1107,col 55)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwinReferenceCancelsChildCollapsing()",
        "snippet": "  public void testTwinReferenceCancelsChildCollapsing() {\n    test(\"var a = {}; if (a.b = function() {}) { a.b.c = 3; a.b(a.b.c); }\",\n         \"var a$b; if (a$b = function() {}) { a$b.c = 3; a$b(a$b.c); }\");\n  }\n",
        "begin_line": 1110,
        "end_line": 1113,
        "comment": "",
        "child_ranges": [
            "(line 1111,col 5)-(line 1112,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase(java.lang.String, boolean)",
        "snippet": "  protected CompilerTestCase(String externs, boolean compareAsTree) {\n    this.externsInputs = new JSSourceFile[] {\n        JSSourceFile.fromCode(\"externs\", externs)\n    };\n    this.compareAsTree = compareAsTree;\n    this.parseTypeInfo = false;\n  }\n",
        "begin_line": 89,
        "end_line": 95,
        "comment": "\n   * Constructs a test.\n   *\n   * @param externs Externs JS as a string\n   * @param compareAsTree True to compare output & expected as a node tree.\n   *     99% of the time you want to compare as a tree. There are a few\n   *     special cases where you don't, like if you want to test the code\n   *     printing of \"unnatural\" syntax trees. For example,\n   *\n   * <pre>\n   * IF\n   *   IF\n   *     STATEMENT\n   * ELSE\n   *   STATEMENT\n   * </pre>\n   ",
        "child_ranges": [
            "(line 90,col 5)-(line 92,col 6)",
            "(line 93,col 5)-(line 93,col 39)",
            "(line 94,col 5)-(line 94,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase(java.lang.String)",
        "snippet": "  protected CompilerTestCase(String externs) {\n    this(externs, true);\n  }\n",
        "begin_line": 101,
        "end_line": 103,
        "comment": "\n   * Constructs a test. Uses AST comparison.\n   * @param externs Externs JS as a string\n   ",
        "child_ranges": [
            "(line 102,col 5)-(line 102,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase()",
        "snippet": "  protected CompilerTestCase() {\n    this(\"\", true);\n  }\n",
        "begin_line": 108,
        "end_line": 110,
        "comment": "\n   * Constructs a test. Uses AST comparison and no externs.\n   ",
        "child_ranges": [
            "(line 109,col 5)-(line 109,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getProcessor(com.google.javascript.jscomp.Compiler)",
        "snippet": "  protected abstract CompilerPass getProcessor(Compiler compiler);\n",
        "begin_line": 118,
        "end_line": 118,
        "comment": "\n   * Gets the compiler pass instance to use for a test.\n   *\n   * @param compiler The compiler\n   * @return The pass to test\n   ",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getOptions()",
        "snippet": "  protected CompilerOptions getOptions() {\n    CompilerOptions options = new CompilerOptions();\n    options.setWarningLevel(\n        DiagnosticGroups.MISSING_PROPERTIES, CheckLevel.WARNING);\n    return options;\n  }\n",
        "begin_line": 127,
        "end_line": 132,
        "comment": "\n   * Gets the compiler options to use for this test. Defaults to do nothing\n   * options.\n   *\n   * This is really only for configuring warnings guards. Use getProcessor\n   * to determine what passes should be run.\n   ",
        "child_ranges": [
            "(line 128,col 5)-(line 128,col 52)",
            "(line 129,col 5)-(line 130,col 65)",
            "(line 131,col 5)-(line 131,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getNumRepetitions()",
        "snippet": "  protected int getNumRepetitions() {\n    // Since most compiler passes should be idempotent, we run each pass twice\n    // by default.\n    return 2;\n  }\n",
        "begin_line": 138,
        "end_line": 142,
        "comment": "\n   * Returns the number of times the pass should be run before results are\n   * verified.\n   ",
        "child_ranges": [
            "(line 141,col 5)-(line 141,col 13)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.allowSourcelessWarnings()",
        "snippet": "  void allowSourcelessWarnings() {\n    allowSourcelessWarnings = true;\n  }\n",
        "begin_line": 145,
        "end_line": 147,
        "comment": " Expect warnings without source information. ",
        "child_ranges": [
            "(line 146,col 5)-(line 146,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getLastCompiler()",
        "snippet": "  Compiler getLastCompiler() {\n    return lastCompiler;\n  }\n",
        "begin_line": 150,
        "end_line": 152,
        "comment": " The most recently used JSComp instance. ",
        "child_ranges": [
            "(line 151,col 5)-(line 151,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableTypeCheck(com.google.javascript.jscomp.CheckLevel)",
        "snippet": "  public void enableTypeCheck(CheckLevel level) {\n    typeCheckEnabled  = true;\n    typeCheckLevel = level;\n  }\n",
        "begin_line": 162,
        "end_line": 165,
        "comment": "\n   * Perform type checking before running the test pass. This will check\n   * for type errors and annotate nodes with type information.\n   *\n   * @param level the level of severity to report for type errors\n   *\n   * @see TypeCheck\n   ",
        "child_ranges": [
            "(line 163,col 5)-(line 163,col 29)",
            "(line 164,col 5)-(line 164,col 27)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.disableTypeCheck()",
        "snippet": "  void disableTypeCheck() {\n    typeCheckEnabled  = false;\n  }\n",
        "begin_line": 172,
        "end_line": 174,
        "comment": "\n   * Do not run type checking before running the test pass.\n   *\n   * @see TypeCheck\n   ",
        "child_ranges": [
            "(line 173,col 5)-(line 173,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableNormalize()",
        "snippet": "  protected void enableNormalize() {\n    normalizeEnabled  = true;\n  }\n",
        "begin_line": 182,
        "end_line": 184,
        "comment": "\n   * Perform AST normalization before running the test pass, and anti-normalize\n   * after running it.\n   *\n   * @see Normalize\n   ",
        "child_ranges": [
            "(line 183,col 5)-(line 183,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableMarkNoSideEffects()",
        "snippet": "  void enableMarkNoSideEffects() {\n    markNoSideEffects  = true;\n  }\n",
        "begin_line": 191,
        "end_line": 193,
        "comment": "\n   * Run the MarkSideEffectCalls pass before running the test pass.\n   *\n   * @see MarkNoSideEffectCalls\n   ",
        "child_ranges": [
            "(line 192,col 5)-(line 192,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createTypeCheck(com.google.javascript.jscomp.Compiler, com.google.javascript.jscomp.CheckLevel)",
        "snippet": "  private static TypeCheck createTypeCheck(Compiler compiler,\n      CheckLevel level) {\n    ReverseAbstractInterpreter rai =\n        new SemanticReverseAbstractInterpreter(compiler.getCodingConvention(),\n            compiler.getTypeRegistry());\n\n    return new TypeCheck(compiler, rai, compiler.getTypeRegistry(),\n        level, CheckLevel.OFF);\n  }\n",
        "begin_line": 196,
        "end_line": 204,
        "comment": " Returns a newly created TypeCheck. ",
        "child_ranges": [
            "(line 198,col 5)-(line 200,col 40)",
            "(line 202,col 5)-(line 203,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String)",
        "snippet": "  public void test(String js, String expected) {\n    test(js, expected, (DiagnosticType) null);\n  }\n",
        "begin_line": 212,
        "end_line": 214,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param js Input\n   * @param expected Expected JS output\n   ",
        "child_ranges": [
            "(line 213,col 5)-(line 213,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String js, String expected, DiagnosticType error) {\n    test(js, expected, error, null);\n  }\n",
        "begin_line": 224,
        "end_line": 226,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 225,col 5)-(line 225,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String js, String expected, DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    test(externsInputs, js, expected, error, warning, description);\n  }\n",
        "begin_line": 239,
        "end_line": 242,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The content of the error expected\n   ",
        "child_ranges": [
            "(line 241,col 5)-(line 241,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String js, String expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    test(externsInputs, js, expected, error, warning, null);\n  }\n",
        "begin_line": 254,
        "end_line": 257,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 256,col 5)-(line 256,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String externs, String js, String expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    test(externs, js, expected, error, warning, null);\n  }\n",
        "begin_line": 270,
        "end_line": 273,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs input\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 272,col 5)-(line 272,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String externs, String js, String expected,\n                   DiagnosticType error, DiagnosticType warning,\n                   String description) {\n    JSSourceFile[] externsInputs = new JSSourceFile[]{\n        JSSourceFile.fromCode(\"externs\", externs)\n    };\n    test(externsInputs, js, expected, error, warning, description);\n  }\n",
        "begin_line": 289,
        "end_line": 296,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs input\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 292,col 5)-(line 294,col 6)",
            "(line 295,col 5)-(line 295,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSSourceFile[], java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(JSSourceFile[] externs, String js, String expected,\n                   DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    BaseJSTypeTestCase.addNativeProperties(compiler.getTypeRegistry());\n\n    CompilerOptions options = getOptions();\n    // Note that in this context, turning on the checkTypes option won't\n    // actually cause the type check to run.\n    options.checkTypes = parseTypeInfo;\n    compiler.init(externs, new JSSourceFile[] {\n        JSSourceFile.fromCode(\"testcode\", js) }, options);\n    test(compiler, new String[] { expected }, error, warning, description);\n  }\n",
        "begin_line": 312,
        "end_line": 327,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs inputs\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 315,col 5)-(line 315,col 41)",
            "(line 316,col 5)-(line 316,col 28)",
            "(line 318,col 5)-(line 318,col 71)",
            "(line 320,col 5)-(line 320,col 43)",
            "(line 323,col 5)-(line 323,col 39)",
            "(line 324,col 5)-(line 325,col 58)",
            "(line 326,col 5)-(line 326,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[])",
        "snippet": "  public void test(String[] js, String[] expected) {\n    test(js, expected, null);\n  }\n",
        "begin_line": 335,
        "end_line": 337,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   ",
        "child_ranges": [
            "(line 336,col 5)-(line 336,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error) {\n    test(js, expected, error, null);\n  }\n",
        "begin_line": 347,
        "end_line": 349,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 348,col 5)-(line 348,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error,\n                   DiagnosticType warning) {\n    test(js, expected, error, warning, null);\n  }\n",
        "begin_line": 361,
        "end_line": 364,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 363,col 5)-(line 363,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    JSSourceFile[] inputs = new JSSourceFile[js.length];\n    for (int i = 0; i < js.length; i++) {\n      inputs[i] = JSSourceFile.fromCode(\"input\" + i, js[i]);\n    }\n    compiler.init(externsInputs, inputs, getOptions());\n    test(compiler, expected, error, warning, description);\n  }\n",
        "begin_line": 379,
        "end_line": 390,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 381,col 5)-(line 381,col 41)",
            "(line 382,col 5)-(line 382,col 28)",
            "(line 384,col 5)-(line 384,col 56)",
            "(line 385,col 5)-(line 387,col 5)",
            "(line 388,col 5)-(line 388,col 55)",
            "(line 389,col 5)-(line 389,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[])",
        "snippet": "  public void test(JSModule[] modules, String[] expected) {\n    test(modules, expected, null);\n  }\n",
        "begin_line": 398,
        "end_line": 400,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   ",
        "child_ranges": [
            "(line 399,col 5)-(line 399,col 34)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(JSModule[] modules, String[] expected,\n      DiagnosticType error) {\n    test(modules, expected, error, null);\n  }\n",
        "begin_line": 410,
        "end_line": 413,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 412,col 5)-(line 412,col 41)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(JSModule[] modules, String[] expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    compiler.init(externsInputs, modules, getOptions());\n    test(compiler, expected, error, warning);\n  }\n",
        "begin_line": 425,
        "end_line": 432,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 427,col 5)-(line 427,col 41)",
            "(line 428,col 5)-(line 428,col 28)",
            "(line 430,col 5)-(line 430,col 56)",
            "(line 431,col 5)-(line 431,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String)",
        "snippet": "  public void testSame(String js) {\n    test(js, js);\n  }\n",
        "begin_line": 439,
        "end_line": 441,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input.\n   *\n   * @param js Input and output\n   ",
        "child_ranges": [
            "(line 440,col 5)-(line 440,col 17)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String js, DiagnosticType warning) {\n    test(js, js, null, warning);\n  }\n",
        "begin_line": 450,
        "end_line": 452,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 451,col 5)-(line 451,col 32)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, com.google.javascript.jscomp.DiagnosticType, boolean)",
        "snippet": "  public void testSame(String js, DiagnosticType diag, boolean error) {\n    if (error) {\n      test(js, js, diag);\n    } else {\n      test(js, js, null, diag);\n    }\n  }\n",
        "begin_line": 462,
        "end_line": 468,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param js Input and output\n   * @param diag Expected error or warning, or null if none is expected\n   * @param error true if diag is an error, false if it is a warning\n   ",
        "child_ranges": [
            "(line 463,col 5)-(line 467,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String externs, String js, DiagnosticType warning) {\n    testSame(externs, js, warning, null);\n  }\n",
        "begin_line": 478,
        "end_line": 480,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param externs Externs input\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 479,col 5)-(line 479,col 41)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void testSame(String externs, String js, DiagnosticType warning,\n                       String description) {\n    JSSourceFile[] externsInputs = new JSSourceFile[]{\n        JSSourceFile.fromCode(\"externs\", externs)\n    };\n    test(externsInputs, js, js, null, warning, description);\n  }\n",
        "begin_line": 493,
        "end_line": 499,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning and description is issued.\n   *\n   * @param externs Externs input\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 495,col 5)-(line 497,col 6)",
            "(line 498,col 5)-(line 498,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[])",
        "snippet": "  public void testSame(String[] js) {\n    test(js, js);\n  }\n",
        "begin_line": 506,
        "end_line": 508,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input.\n   *\n   * @param js Inputs and outputs\n   ",
        "child_ranges": [
            "(line 507,col 5)-(line 507,col 17)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String[] js, DiagnosticType error) {\n    test(js, js, error);\n  }\n",
        "begin_line": 517,
        "end_line": 519,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input,\n   * and emits the given error.\n   *\n   * @param js Inputs and outputs\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 518,col 5)-(line 518,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String[] js, DiagnosticType error, DiagnosticType warning) {\n    test(js, js, error, warning);\n  }\n",
        "begin_line": 529,
        "end_line": 531,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input,\n   * and emits the given error and warning.\n   *\n   * @param js Inputs and outputs\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 530,col 5)-(line 530,col 33)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(com.google.javascript.jscomp.JSModule[])",
        "snippet": "  public void testSame(JSModule[] modules) {\n    testSame(modules, null);\n  }\n",
        "begin_line": 538,
        "end_line": 540,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as the input.\n   *\n   * @param modules Module inputs\n   ",
        "child_ranges": [
            "(line 539,col 5)-(line 539,col 28)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(com.google.javascript.jscomp.JSModule[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(JSModule[] modules, DiagnosticType warning) {\n    try {\n      String[] expected = new String[modules.length];\n      for (int i = 0; i < modules.length; i++) {\n        expected[i] = \"\";\n        for (CompilerInput input : modules[i].getInputs()) {\n          expected[i] += input.getSourceFile().getCode();\n        }\n      }\n      test(modules, expected, null, warning);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n",
        "begin_line": 548,
        "end_line": 561,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as the input.\n   *\n   * @param modules Module inputs\n   * @param warning A warning, or null for no expected warning.\n   ",
        "child_ranges": [
            "(line 549,col 5)-(line 560,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.Compiler, java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  protected void test(Compiler compiler, String[] expected,\n                      DiagnosticType error, DiagnosticType warning) {\n    test(compiler, expected, error, warning, null);\n  }\n",
        "begin_line": 574,
        "end_line": 577,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param compiler A compiler that has been initialized via\n   *     {@link Compiler#init}\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 576,col 5)-(line 576,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.Compiler, java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  private void test(Compiler compiler, String[] expected,\n                    DiagnosticType error, DiagnosticType warning,\n                    String description) {\n    RecentChange recentChange = new RecentChange();\n    compiler.addChangeHandler(recentChange);\n\n    Node root = compiler.parseInputs();\n    assertTrue(\"Unexpected parse error(s): \" +\n        Join.join(\"\\n\", compiler.getErrors()), root != null);\n\n    Node externsRoot = root.getFirstChild();\n    Node mainRoot = root.getLastChild();\n    Node mainRootClone = mainRoot.cloneTree();\n\n    int numRepetitions = getNumRepetitions();\n    ErrorManager[] errorManagers = new ErrorManager[numRepetitions];\n    int aggregateWarningCount = 0;\n    List<JSError> aggregateWarnings = Lists.newArrayList();\n    boolean hasCodeChanged = false;\n\n    assertFalse(\"Code should not change before processing\",\n        recentChange.hasCodeChanged());\n\n    for (int i = 0; i < numRepetitions; ++i) {\n      if (compiler.getErrorCount() == 0) {\n        errorManagers[i] = new BlackHoleErrorManager(compiler);\n\n        // Only run the type checking pass once, if asked.\n        // Running it twice can cause unpredictable behavior because duplicate\n        // objects for the same type are created, and the type system\n        // uses reference equality to compare many types.\n        if (typeCheckEnabled && i == 0) {\n          TypeCheck check = createTypeCheck(compiler, typeCheckLevel);\n          check.processForTesting(externsRoot, mainRoot);\n        }\n\n        // Only run the normalize pass once, if asked.\n        if (normalizeEnabled && i == 0) {\n          Normalize normalize = new Normalize(compiler, false);\n          normalize.process(externsRoot, mainRoot);\n          compiler.setNormalized();\n        }\n\n        if (markNoSideEffects && i == 0) {\n          MarkNoSideEffectCalls mark = new MarkNoSideEffectCalls(compiler);\n          mark.process(externsRoot, mainRoot);\n        }\n\n        recentChange.reset();\n\n        getProcessor(compiler).process(externsRoot, mainRoot);\n\n        hasCodeChanged = hasCodeChanged || recentChange.hasCodeChanged();\n        aggregateWarningCount += errorManagers[i].getWarningCount();\n        aggregateWarnings.addAll(Lists.newArrayList(compiler.getWarnings()));\n\n        if (normalizeEnabled) {\n          boolean verifyDeclaredConstants = true;\n          new Normalize.VerifyConstants(compiler, verifyDeclaredConstants)\n              .process(externsRoot, mainRoot);\n        }\n      }\n    }\n\n    if (error == null) {\n      assertEquals(\n          \"Unexpected error(s): \" + Join.join(\"\\n\", compiler.getErrors()),\n          0, compiler.getErrorCount());\n\n      // Verify the symbol table.\n      ErrorManager symbolTableWarnings = new BlackHoleErrorManager(compiler);\n      Node expectedRoot = parseExpectedJs(expected);\n      SymbolTable table = compiler.acquireSymbolTable();\n      table.verify(expectedRoot, mainRoot);\n      table.release();\n\n      if (warning == null) {\n        assertEquals(\n            \"Unexpected warning(s): \" + Join.join(\"\\n\", aggregateWarnings),\n            0, aggregateWarningCount);\n      } else if (symbolTableWarnings.getWarnings().length > 0) {\n        JSError[] warnings = symbolTableWarnings.getWarnings();\n        assertEquals(\"There should be one symbol table warning\",\n            1, warnings.length);\n        assertEquals(warning, warnings[0].getType());\n      } else {\n        assertEquals(\"There should be one warning, repeated \" + numRepetitions +\n            \" time(s).\", numRepetitions, aggregateWarningCount);\n        for (int i = 0; i < numRepetitions; ++i) {\n          JSError[] warnings = errorManagers[i].getWarnings();\n          JSError actual = warnings[0];\n          assertEquals(warning, actual.getType());\n\n          // Make sure that source information is always provided.\n          if (!allowSourcelessWarnings) {\n            assertTrue(\"Missing source file name in warning\",\n                actual.sourceName != null && !actual.sourceName.isEmpty());\n            assertTrue(\"Missing line number in warning\",\n                -1 != actual.lineNumber);\n            assertTrue(\"Missing char number in warning\",\n                -1 != actual.getCharno());\n          }\n\n          if (description != null) {\n            assertEquals(description, actual.description);\n          }\n        }\n      }\n\n      if (normalizeEnabled) {\n        Normalize normalize = new Normalize(compiler, false);\n        normalize.process(externsRoot, mainRootClone);\n      }\n\n      if (mainRootClone.checkTreeEqualsSilent(mainRoot)) {\n        assertFalse(\n            \"compiler.reportCodeChange() was called \" +\n            \"even though nothing changed\",\n            hasCodeChanged);\n      } else {\n        assertTrue(\"compiler.reportCodeChange() should have been called\",\n            hasCodeChanged);\n      }\n\n      if (compareAsTree) {\n        String explanation = expectedRoot.checkTreeEquals(mainRoot);\n        assertNull(\"\\nExpected: \" + compiler.toSource(expectedRoot) +\n            \"\\nResult: \" + compiler.toSource(mainRoot) +\n            \"\\n\" + explanation, explanation);\n      } else if (expected != null) {\n        assertEquals(Join.join(\"\", expected), compiler.toSource(mainRoot));\n      }\n\n      // Verify normalization is not invalidated.\n      Node normalizeCheckRootClone = root.cloneTree();\n      Node normalizeCheckExternsRootClone = root.getFirstChild();\n      Node normalizeCheckMainRootClone = root.getLastChild();\n      new NodeTypeNormalizer().process(\n          normalizeCheckExternsRootClone, normalizeCheckMainRootClone);\n      String explanation =\n          normalizeCheckMainRootClone.checkTreeEquals(mainRoot);\n      assertNull(\"Node structure normalization invalidated.\\nExpected: \" +\n          compiler.toSource(normalizeCheckMainRootClone) +\n          \"\\nResult: \" + compiler.toSource(mainRoot) +\n          \"\\n\" + explanation, explanation);\n\n      // TODO(johnlenz): enable this for most test cases.\n      // Currently, this invalidates test for while-loops, for-loop\n      // initializers, and other naming.  However, a set of code\n      // (FoldConstants, etc) runs before the Normalize pass, so this can't be\n      // force on everywhere.\n      if (normalizeEnabled) {\n        new Normalize(compiler, true).process(\n            normalizeCheckExternsRootClone, normalizeCheckMainRootClone);\n        explanation =  normalizeCheckMainRootClone.checkTreeEquals(mainRoot);\n        assertNull(\"Normalization invalidated.\\nExpected: \" +\n            compiler.toSource(normalizeCheckMainRootClone) +\n            \"\\nResult: \" + compiler.toSource(mainRoot) +\n            \"\\n\" + explanation, explanation);\n      }\n    } else {\n      assertEquals(\"There should be one error.\", 1, compiler.getErrorCount());\n      assertEquals(error, compiler.getErrors()[0].getType());\n    }\n  }\n",
        "begin_line": 594,
        "end_line": 758,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param compiler A compiler that has been initialized via\n   *     {@link Compiler#init}\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 597,col 5)-(line 597,col 51)",
            "(line 598,col 5)-(line 598,col 44)",
            "(line 600,col 5)-(line 600,col 39)",
            "(line 601,col 5)-(line 602,col 61)",
            "(line 604,col 5)-(line 604,col 44)",
            "(line 605,col 5)-(line 605,col 40)",
            "(line 606,col 5)-(line 606,col 46)",
            "(line 608,col 5)-(line 608,col 45)",
            "(line 609,col 5)-(line 609,col 68)",
            "(line 610,col 5)-(line 610,col 34)",
            "(line 611,col 5)-(line 611,col 59)",
            "(line 612,col 5)-(line 612,col 35)",
            "(line 614,col 5)-(line 615,col 39)",
            "(line 617,col 5)-(line 656,col 5)",
            "(line 658,col 5)-(line 757,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.parseExpectedJs(java.lang.String[])",
        "snippet": "  private Node parseExpectedJs(String[] expected) {\n    Compiler compiler = createCompiler();\n    JSSourceFile[] inputs = new JSSourceFile[expected.length];\n    for (int i = 0; i < expected.length; i++) {\n      inputs[i] = JSSourceFile.fromCode(\"expected\" + i, expected[i]);\n    }\n    compiler.init(externsInputs, inputs, getOptions());\n    Node root = compiler.parseInputs();\n    assertTrue(\"Unexpected parse error(s): \" +\n        Join.join(\"\\n\", compiler.getErrors()), root != null);\n    Node externsRoot = root.getFirstChild();\n    Node mainRoot = externsRoot.getNext();\n    // Only run the normalize pass, if asked.\n    if (normalizeEnabled && !compiler.hasErrors()) {\n      Normalize normalize = new Normalize(compiler, false);\n      normalize.process(externsRoot, mainRoot);\n      compiler.setNormalized();\n    }\n    return mainRoot;\n  }\n",
        "begin_line": 763,
        "end_line": 782,
        "comment": "\n   * Parses expected js inputs and returns the root of the parse tree.\n   ",
        "child_ranges": [
            "(line 764,col 5)-(line 764,col 41)",
            "(line 765,col 5)-(line 765,col 62)",
            "(line 766,col 5)-(line 768,col 5)",
            "(line 769,col 5)-(line 769,col 55)",
            "(line 770,col 5)-(line 770,col 39)",
            "(line 771,col 5)-(line 772,col 61)",
            "(line 773,col 5)-(line 773,col 44)",
            "(line 774,col 5)-(line 774,col 42)",
            "(line 776,col 5)-(line 780,col 5)",
            "(line 781,col 5)-(line 781,col 20)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.parseExpectedJs(java.lang.String)",
        "snippet": "  Node parseExpectedJs(String expected) {\n    return parseExpectedJs(new String[] {expected});\n  }\n",
        "begin_line": 784,
        "end_line": 786,
        "comment": "",
        "child_ranges": [
            "(line 785,col 5)-(line 785,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleChain(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleChain(String... inputs) {\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[i - 1]);\n    }\n    return modules;\n  }\n",
        "begin_line": 792,
        "end_line": 798,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that each module\n   * depends on the module before it.\n   ",
        "child_ranges": [
            "(line 793,col 5)-(line 793,col 47)",
            "(line 794,col 5)-(line 796,col 5)",
            "(line 797,col 5)-(line 797,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleStar(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleStar(String... inputs) {\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[0]);\n    }\n    return modules;\n  }\n",
        "begin_line": 804,
        "end_line": 810,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that each module\n   * depends on the first module.\n   ",
        "child_ranges": [
            "(line 805,col 5)-(line 805,col 47)",
            "(line 806,col 5)-(line 808,col 5)",
            "(line 809,col 5)-(line 809,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModules(java.lang.String...)",
        "snippet": "  static JSModule[] createModules(String... inputs) {\n    JSModule[] modules = new JSModule[inputs.length];\n    for (int i = 0; i < inputs.length; i++) {\n      JSModule module = modules[i] = new JSModule(\"m\" + i);\n      module.add(JSSourceFile.fromCode(\"i\" + i, inputs[i]));\n    }\n    return modules;\n  }\n",
        "begin_line": 816,
        "end_line": 823,
        "comment": "\n   * Generates a list of modules from a list of inputs. Does not generate any\n   * dependencies between the modules.\n   ",
        "child_ranges": [
            "(line 817,col 5)-(line 817,col 53)",
            "(line 818,col 5)-(line 821,col 5)",
            "(line 822,col 5)-(line 822,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.BlackHoleErrorManager(com.google.javascript.jscomp.Compiler)",
        "snippet": "    private BlackHoleErrorManager(Compiler compiler) {\n      compiler.setErrorManager(this);\n    }\n",
        "begin_line": 826,
        "end_line": 828,
        "comment": "",
        "child_ranges": [
            "(line 827,col 7)-(line 827,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.println(com.google.javascript.jscomp.CheckLevel, com.google.javascript.jscomp.JSError)",
        "snippet": "    @Override\n    public void println(CheckLevel level, JSError error) {}\n",
        "begin_line": 830,
        "end_line": 831,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.printSummary()",
        "snippet": "    @Override\n    public void printSummary() {}\n",
        "begin_line": 833,
        "end_line": 834,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createCompiler()",
        "snippet": "  private Compiler createCompiler() {\n    Compiler compiler = new Compiler();\n    compiler.setCodingConvention(getCodingConvention());\n    return compiler;\n  }\n",
        "begin_line": 837,
        "end_line": 841,
        "comment": "",
        "child_ranges": [
            "(line 838,col 5)-(line 838,col 39)",
            "(line 839,col 5)-(line 839,col 56)",
            "(line 840,col 5)-(line 840,col 20)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CheckSideEffectsTest",
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getCodingConvention()",
        "snippet": "  protected CodingConvention getCodingConvention() {\n    return new GoogleCodingConvention();\n  }\n",
        "begin_line": 843,
        "end_line": 845,
        "comment": "",
        "child_ranges": [
            "(line 844,col 5)-(line 844,col 40)"
        ]
    }
]