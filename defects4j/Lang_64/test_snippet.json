[
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.ValuedEnumTest(java.lang.String)",
        "snippet": "    public ValuedEnumTest(String name) {\n        super(name);\n    }\n",
        "begin_line": 37,
        "end_line": 39,
        "comment": "",
        "child_ranges": [
            "(line 38,col 9)-(line 38,col 20)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.setUp()",
        "snippet": "    public void setUp() {\n    }\n",
        "begin_line": 41,
        "end_line": 42,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.suite()",
        "snippet": "    public static Test suite() {\n        TestSuite suite = new TestSuite(ValuedEnumTest.class);\n        suite.setName(\"ValuedEnum Tests\");\n        return suite;\n    }\n",
        "begin_line": 44,
        "end_line": 48,
        "comment": "",
        "child_ranges": [
            "(line 45,col 9)-(line 45,col 62)",
            "(line 46,col 9)-(line 46,col 42)",
            "(line 47,col 9)-(line 47,col 21)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testName()",
        "snippet": "    public void testName() {\n        assertEquals(\"Red\", ValuedColorEnum.RED.getName());\n        assertEquals(\"Green\", ValuedColorEnum.GREEN.getName());\n        assertEquals(\"Blue\", ValuedColorEnum.BLUE.getName());\n    }\n",
        "begin_line": 50,
        "end_line": 54,
        "comment": "",
        "child_ranges": [
            "(line 51,col 9)-(line 51,col 59)",
            "(line 52,col 9)-(line 52,col 63)",
            "(line 53,col 9)-(line 53,col 61)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testValue()",
        "snippet": "    public void testValue() {\n        assertEquals(1, ValuedColorEnum.RED.getValue());\n        assertEquals(2, ValuedColorEnum.GREEN.getValue());\n        assertEquals(3, ValuedColorEnum.BLUE.getValue());\n    }\n",
        "begin_line": 56,
        "end_line": 60,
        "comment": "",
        "child_ranges": [
            "(line 57,col 9)-(line 57,col 56)",
            "(line 58,col 9)-(line 58,col 58)",
            "(line 59,col 9)-(line 59,col 57)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo()",
        "snippet": "    public void testCompareTo() {\n        assertTrue(ValuedColorEnum.BLUE.compareTo(ValuedColorEnum.BLUE) == 0);\n        assertTrue(ValuedColorEnum.RED.compareTo(ValuedColorEnum.BLUE) < 0);\n        assertTrue(ValuedColorEnum.BLUE.compareTo(ValuedColorEnum.RED) > 0);\n    }\n",
        "begin_line": 62,
        "end_line": 66,
        "comment": "",
        "child_ranges": [
            "(line 63,col 9)-(line 63,col 78)",
            "(line 64,col 9)-(line 64,col 76)",
            "(line 65,col 9)-(line 65,col 76)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_classloader_equal()",
        "snippet": "    public void testCompareTo_classloader_equal() throws Exception {\n        ClassLoader cl = ValuedColorEnum.class.getClassLoader();\n        if (cl instanceof URLClassLoader) {\n            URLClassLoader urlCL = (URLClassLoader) cl;\n            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);\n            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);\n            Class otherEnumClass1 = urlCL1.loadClass(\"org.apache.commons.lang.enums.ValuedColorEnum\");\n            Class otherEnumClass2 = urlCL2.loadClass(\"org.apache.commons.lang.enums.ValuedColorEnum\");\n            Object blue1 = otherEnumClass1.getDeclaredField(\"BLUE\").get(null);\n            Object blue2 = otherEnumClass2.getDeclaredField(\"BLUE\").get(null);\n            assertTrue(((Comparable) blue1).compareTo(blue2) == 0);\n        }\n    }\n",
        "begin_line": 68,
        "end_line": 80,
        "comment": "",
        "child_ranges": [
            "(line 69,col 9)-(line 69,col 64)",
            "(line 70,col 9)-(line 79,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_classloader_different()",
        "snippet": "    public void testCompareTo_classloader_different() throws Exception {\n        ClassLoader cl = ValuedColorEnum.class.getClassLoader();\n        if (cl instanceof URLClassLoader) {\n            URLClassLoader urlCL = (URLClassLoader) cl;\n            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);\n            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);\n            Class otherEnumClass1 = urlCL1.loadClass(\"org.apache.commons.lang.enums.ValuedColorEnum\");\n            Class otherEnumClass2 = urlCL2.loadClass(\"org.apache.commons.lang.enums.ValuedColorEnum\");\n            Object blue1 = otherEnumClass1.getDeclaredField(\"BLUE\").get(null);\n            Object blue2 = otherEnumClass2.getDeclaredField(\"RED\").get(null);\n            assertTrue(((Comparable) blue1).compareTo(blue2) != 0);\n        }\n    }\n",
        "begin_line": 82,
        "end_line": 94,
        "comment": "",
        "child_ranges": [
            "(line 83,col 9)-(line 83,col 64)",
            "(line 84,col 9)-(line 93,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_nonEnumType()",
        "snippet": "    public void testCompareTo_nonEnumType() {\n        try {\n            ValuedColorEnum.BLUE.compareTo(new TotallyUnrelatedClass(ValuedColorEnum.BLUE.getValue()));\n            fail();\n        } catch (ClassCastException ex) {\n            // expected\n        }\n    }\n",
        "begin_line": 96,
        "end_line": 103,
        "comment": "",
        "child_ranges": [
            "(line 97,col 9)-(line 102,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_otherEnumType()",
        "snippet": "    public void testCompareTo_otherEnumType() {\n        try {\n            ValuedColorEnum.BLUE.compareTo(ValuedLanguageEnum.ENGLISH);\n            fail();\n        } catch (ClassCastException ex) {\n            // expected\n        }\n    }\n",
        "begin_line": 105,
        "end_line": 112,
        "comment": "",
        "child_ranges": [
            "(line 106,col 9)-(line 111,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_otherType()",
        "snippet": "    public void testCompareTo_otherType() {\n        try {\n            ValuedColorEnum.BLUE.compareTo(\"Blue\");\n            fail();\n        } catch (ClassCastException ex) {\n            // expected\n        }\n    }\n",
        "begin_line": 114,
        "end_line": 121,
        "comment": "",
        "child_ranges": [
            "(line 115,col 9)-(line 120,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_null()",
        "snippet": "    public void testCompareTo_null() {\n        try {\n            ValuedColorEnum.BLUE.compareTo(null);\n            fail();\n        } catch (NullPointerException ex) {\n            // expected\n        }\n    }\n",
        "begin_line": 123,
        "end_line": 130,
        "comment": "",
        "child_ranges": [
            "(line 124,col 9)-(line 129,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testEquals()",
        "snippet": "    public void testEquals() {\n        assertSame(ValuedColorEnum.RED, ValuedColorEnum.RED);\n        assertSame(ValuedColorEnum.getEnum(\"Red\"), ValuedColorEnum.RED);\n    }\n",
        "begin_line": 132,
        "end_line": 135,
        "comment": "",
        "child_ranges": [
            "(line 133,col 9)-(line 133,col 61)",
            "(line 134,col 9)-(line 134,col 72)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testEquals_classloader_equal()",
        "snippet": "    public void testEquals_classloader_equal() throws Exception {\n        ClassLoader cl = ValuedColorEnum.class.getClassLoader();\n        if (cl instanceof URLClassLoader) {\n            URLClassLoader urlCL = (URLClassLoader) cl;\n            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);\n            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);\n            Class otherEnumClass1 = urlCL1.loadClass(\"org.apache.commons.lang.enums.ValuedColorEnum\");\n            Class otherEnumClass2 = urlCL2.loadClass(\"org.apache.commons.lang.enums.ValuedColorEnum\");\n            Object blue1 = otherEnumClass1.getDeclaredField(\"BLUE\").get(null);\n            Object blue2 = otherEnumClass2.getDeclaredField(\"BLUE\").get(null);\n            assertEquals(true, blue1.equals(blue2));\n        }\n    }\n",
        "begin_line": 137,
        "end_line": 149,
        "comment": "",
        "child_ranges": [
            "(line 138,col 9)-(line 138,col 64)",
            "(line 139,col 9)-(line 148,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testEquals_classloader_different()",
        "snippet": "    public void testEquals_classloader_different() throws Exception {\n        ClassLoader cl = ValuedColorEnum.class.getClassLoader();\n        if (cl instanceof URLClassLoader) {\n            URLClassLoader urlCL = (URLClassLoader) cl;\n            URLClassLoader urlCL1 = new URLClassLoader(urlCL.getURLs(), null);\n            URLClassLoader urlCL2 = new URLClassLoader(urlCL.getURLs(), null);\n            Class otherEnumClass1 = urlCL1.loadClass(\"org.apache.commons.lang.enums.ValuedColorEnum\");\n            Class otherEnumClass2 = urlCL2.loadClass(\"org.apache.commons.lang.enums.ValuedColorEnum\");\n            Object blue1 = otherEnumClass1.getDeclaredField(\"BLUE\").get(null);\n            Object blue2 = otherEnumClass2.getDeclaredField(\"RED\").get(null);\n            assertEquals(false, blue1.equals(blue2));\n        }\n    }\n",
        "begin_line": 151,
        "end_line": 163,
        "comment": "",
        "child_ranges": [
            "(line 152,col 9)-(line 152,col 64)",
            "(line 153,col 9)-(line 162,col 9)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testToString()",
        "snippet": "    public void testToString() {\n        String toString = ValuedColorEnum.RED.toString();\n        assertEquals(\"ValuedColorEnum[Red=1]\", toString);\n        assertSame(toString, ValuedColorEnum.RED.toString());\n    }\n",
        "begin_line": 165,
        "end_line": 169,
        "comment": "",
        "child_ranges": [
            "(line 166,col 9)-(line 166,col 57)",
            "(line 167,col 9)-(line 167,col 57)",
            "(line 168,col 9)-(line 168,col 61)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testIterator()",
        "snippet": "    public void testIterator() {\n        Iterator it = ValuedColorEnum.iterator();\n        assertSame(ValuedColorEnum.RED, it.next());\n        assertSame(ValuedColorEnum.GREEN, it.next());\n        assertSame(ValuedColorEnum.BLUE, it.next());\n    }\n",
        "begin_line": 171,
        "end_line": 176,
        "comment": "",
        "child_ranges": [
            "(line 172,col 9)-(line 172,col 49)",
            "(line 173,col 9)-(line 173,col 51)",
            "(line 174,col 9)-(line 174,col 53)",
            "(line 175,col 9)-(line 175,col 52)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testList()",
        "snippet": "    public void testList() {\n        List list = ValuedColorEnum.getEnumList();\n        \n        assertNotNull(list);\n        \n        assertEquals( list.size(),\n                     ValuedColorEnum.getEnumMap().keySet().size());\n        \n        Iterator it = list.iterator();\n        assertSame(ValuedColorEnum.RED, it.next());\n        assertSame(ValuedColorEnum.GREEN, it.next());\n        assertSame(ValuedColorEnum.BLUE, it.next());\n    }\n",
        "begin_line": 178,
        "end_line": 190,
        "comment": "",
        "child_ranges": [
            "(line 179,col 9)-(line 179,col 50)",
            "(line 181,col 9)-(line 181,col 28)",
            "(line 183,col 9)-(line 184,col 67)",
            "(line 186,col 9)-(line 186,col 38)",
            "(line 187,col 9)-(line 187,col 51)",
            "(line 188,col 9)-(line 188,col 53)",
            "(line 189,col 9)-(line 189,col 52)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testMap()",
        "snippet": "    public void testMap() {\n        Map map = ValuedColorEnum.getEnumMap();\n        \n        assertNotNull(map);\n        \n        assertEquals( map.keySet().size(),\n                     ValuedColorEnum.getEnumList().size());\n                     \n        assertTrue(map.containsValue(ValuedColorEnum.RED));\n        assertTrue(map.containsValue(ValuedColorEnum.GREEN));\n        assertTrue(map.containsValue(ValuedColorEnum.BLUE));\n        assertSame(ValuedColorEnum.RED, map.get(\"Red\"));\n        assertSame(ValuedColorEnum.GREEN, map.get(\"Green\"));\n        assertSame(ValuedColorEnum.BLUE, map.get(\"Blue\"));\n    }\n",
        "begin_line": 192,
        "end_line": 206,
        "comment": "",
        "child_ranges": [
            "(line 193,col 9)-(line 193,col 47)",
            "(line 195,col 9)-(line 195,col 27)",
            "(line 197,col 9)-(line 198,col 59)",
            "(line 200,col 9)-(line 200,col 59)",
            "(line 201,col 9)-(line 201,col 61)",
            "(line 202,col 9)-(line 202,col 60)",
            "(line 203,col 9)-(line 203,col 56)",
            "(line 204,col 9)-(line 204,col 60)",
            "(line 205,col 9)-(line 205,col 58)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testGet()",
        "snippet": "    public void testGet() {\n        assertSame(ValuedColorEnum.RED, ValuedColorEnum.getEnum(\"Red\"));\n        assertSame(ValuedColorEnum.GREEN, ValuedColorEnum.getEnum(\"Green\"));\n        assertSame(ValuedColorEnum.BLUE, ValuedColorEnum.getEnum(\"Blue\"));\n        assertSame(null, ValuedColorEnum.getEnum(\"Pink\"));\n    }\n",
        "begin_line": 208,
        "end_line": 213,
        "comment": "",
        "child_ranges": [
            "(line 209,col 9)-(line 209,col 72)",
            "(line 210,col 9)-(line 210,col 76)",
            "(line 211,col 9)-(line 211,col 74)",
            "(line 212,col 9)-(line 212,col 58)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testGetValue()",
        "snippet": "    public void testGetValue() {\n        assertSame(ValuedColorEnum.RED, ValuedColorEnum.getEnum(1));\n        assertSame(ValuedColorEnum.GREEN, ValuedColorEnum.getEnum(2));\n        assertSame(ValuedColorEnum.BLUE, ValuedColorEnum.getEnum(3));\n        assertSame(null, ValuedColorEnum.getEnum(4));\n    }\n",
        "begin_line": 215,
        "end_line": 220,
        "comment": "",
        "child_ranges": [
            "(line 216,col 9)-(line 216,col 68)",
            "(line 217,col 9)-(line 217,col 70)",
            "(line 218,col 9)-(line 218,col 69)",
            "(line 219,col 9)-(line 219,col 53)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.testSerialization()",
        "snippet": "    public void testSerialization() {\n        assertSame(ValuedColorEnum.RED, SerializationUtils.clone(ValuedColorEnum.RED));\n        assertSame(ValuedColorEnum.GREEN, SerializationUtils.clone(ValuedColorEnum.GREEN));\n        assertSame(ValuedColorEnum.BLUE, SerializationUtils.clone(ValuedColorEnum.BLUE));\n    }\n",
        "begin_line": 222,
        "end_line": 226,
        "comment": "",
        "child_ranges": [
            "(line 223,col 9)-(line 223,col 87)",
            "(line 224,col 9)-(line 224,col 91)",
            "(line 225,col 9)-(line 225,col 89)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.TotallyUnrelatedClass.TotallyUnrelatedClass(int)",
        "snippet": "        public TotallyUnrelatedClass(final int value) {\n            this.value = value;\n        }\n",
        "begin_line": 232,
        "end_line": 234,
        "comment": "",
        "child_ranges": [
            "(line 233,col 13)-(line 233,col 31)"
        ]
    },
    {
        "class_name": "org.apache.commons.lang.enums.ValuedEnumTest",
        "child_classes": [],
        "src_path": "src/test/org/apache/commons/lang/enums/ValuedEnumTest.java",
        "signature": "org.apache.commons.lang.enums.ValuedEnumTest.TotallyUnrelatedClass.getValue()",
        "snippet": "        public int getValue() {\n            return value;\n        }\n",
        "begin_line": 236,
        "end_line": 238,
        "comment": "",
        "child_ranges": [
            "(line 237,col 13)-(line 237,col 25)"
        ]
    }
]