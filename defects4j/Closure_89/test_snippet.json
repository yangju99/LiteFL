[
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.CollapsePropertiesTest()",
        "snippet": "  public CollapsePropertiesTest() {\n    super(EXTERNS);\n  }\n",
        "begin_line": 33,
        "end_line": 35,
        "comment": "",
        "child_ranges": [
            "(line 34,col 5)-(line 34,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.getProcessor(com.google.javascript.jscomp.Compiler)",
        "snippet": "  @Override public CompilerPass getProcessor(Compiler compiler) {\n    return new CollapseProperties(\n        compiler, collapsePropertiesOnExternTypes, true);\n  }\n",
        "begin_line": 37,
        "end_line": 40,
        "comment": "",
        "child_ranges": [
            "(line 38,col 5)-(line 39,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.setUp()",
        "snippet": "  @Override\n  public void setUp() {\n    enableLineNumberCheck(true);\n    enableNormalize(true);\n  }\n",
        "begin_line": 42,
        "end_line": 46,
        "comment": "",
        "child_ranges": [
            "(line 44,col 5)-(line 44,col 32)",
            "(line 45,col 5)-(line 45,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.getNumRepetitions()",
        "snippet": "  @Override public int getNumRepetitions() {\n    return 1;\n  }\n",
        "begin_line": 48,
        "end_line": 50,
        "comment": "",
        "child_ranges": [
            "(line 49,col 5)-(line 49,col 13)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapse()",
        "snippet": "  public void testCollapse() {\n    test(\"var a = {}; a.b = {}; var c = a.b;\",\n         \"var a$b = {}; var c = a$b\");\n  }\n",
        "begin_line": 52,
        "end_line": 55,
        "comment": "",
        "child_ranges": [
            "(line 53,col 5)-(line 54,col 38)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMultiLevelCollapse()",
        "snippet": "  public void testMultiLevelCollapse() {\n    test(\"var a = {}; a.b = {}; a.b.c = {}; var d = a.b.c;\",\n         \"var a$b$c = {}; var d = a$b$c;\");\n  }\n",
        "begin_line": 57,
        "end_line": 60,
        "comment": "",
        "child_ranges": [
            "(line 58,col 5)-(line 59,col 43)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDecrement()",
        "snippet": "  public void testDecrement() {\n    test(\"var a = {}; a.b = 5; a.b--; a.b = 5\",\n         \"var a$b = 5; a$b--; a$b = 5\");\n  }\n",
        "begin_line": 62,
        "end_line": 65,
        "comment": "",
        "child_ranges": [
            "(line 63,col 5)-(line 64,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testIncrement()",
        "snippet": "  public void testIncrement() {\n    test(\"var a = {}; a.b = 5; a.b++; a.b = 5\",\n         \"var a$b = 5; a$b++; a$b = 5\");\n  }\n",
        "begin_line": 67,
        "end_line": 70,
        "comment": "",
        "child_ranges": [
            "(line 68,col 5)-(line 69,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclaration()",
        "snippet": "  public void testObjLitDeclaration() {\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c\");\n  }\n",
        "begin_line": 72,
        "end_line": 75,
        "comment": "",
        "child_ranges": [
            "(line 73,col 5)-(line 74,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationWithDuplicateKeys()",
        "snippet": "  public void testObjLitDeclarationWithDuplicateKeys() {\n    test(\"var a = {b: 0, b: 1}; var c = a.b;\",\n         \"var a$b = 0; var a$b = 1; var c = a$b;\",\n         SyntacticScopeCreator.VAR_MULTIPLY_DECLARED_ERROR);\n  }\n",
        "begin_line": 77,
        "end_line": 81,
        "comment": "",
        "child_ranges": [
            "(line 78,col 5)-(line 80,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth1()",
        "snippet": "  public void testObjLitAssignmentDepth1() {\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c\");\n  }\n",
        "begin_line": 83,
        "end_line": 86,
        "comment": "",
        "child_ranges": [
            "(line 84,col 5)-(line 85,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth2()",
        "snippet": "  public void testObjLitAssignmentDepth2() {\n    test(\"var a = {}; a.b = {c: {}, d: {}}; var e = a.b.c; var f = a.b.d\",\n         \"var a$b$c = {}; var a$b$d = {}; var e = a$b$c; var f = a$b$d\");\n  }\n",
        "begin_line": 88,
        "end_line": 91,
        "comment": "",
        "child_ranges": [
            "(line 89,col 5)-(line 90,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth3()",
        "snippet": "  public void testObjLitAssignmentDepth3() {\n    test(\"var a = {}; a.b = {}; a.b.c = {d: 1, e: 2}; var f = a.b.c.d\",\n         \"var a$b$c$d = 1; var a$b$c$e = 2; var f = a$b$c$d\");\n  }\n",
        "begin_line": 93,
        "end_line": 96,
        "comment": "",
        "child_ranges": [
            "(line 94,col 5)-(line 95,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignmentDepth4()",
        "snippet": "  public void testObjLitAssignmentDepth4() {\n    test(\"var a = {}; a.b = {}; a.b.c = {}; a.b.c.d = {e: 1, f: 2}; \" +\n         \"var g = a.b.c.d.e\",\n         \"var a$b$c$d$e = 1; var a$b$c$d$f = 2; var g = a$b$c$d$e\");\n  }\n",
        "begin_line": 98,
        "end_line": 102,
        "comment": "",
        "child_ranges": [
            "(line 99,col 5)-(line 101,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectDeclaredToPreserveItsPreviousValue1()",
        "snippet": "  public void testGlobalObjectDeclaredToPreserveItsPreviousValue1() {\n    test(\"var a = a ? a : {}; a.c = 1;\",\n         \"var a = a ? a : {}; var a$c = 1;\");\n  }\n",
        "begin_line": 104,
        "end_line": 107,
        "comment": "",
        "child_ranges": [
            "(line 105,col 5)-(line 106,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectDeclaredToPreserveItsPreviousValue2()",
        "snippet": "  public void testGlobalObjectDeclaredToPreserveItsPreviousValue2() {\n    test(\"var a = a || {}; a.c = 1;\",\n         \"var a = a || {}; var a$c = 1;\");\n  }\n",
        "begin_line": 109,
        "end_line": 112,
        "comment": "",
        "child_ranges": [
            "(line 110,col 5)-(line 111,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_1()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_1() {\n    test(\"var a = {b: 0}; a.c = 1; if (a) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; if (a) x();\");\n  }\n",
        "begin_line": 114,
        "end_line": 117,
        "comment": "",
        "child_ranges": [
            "(line 115,col 5)-(line 116,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_2()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_2() {\n    test(\"var a = {b: 0}; a.c = 1; if (!(a && a.c)) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; if (!(a && a$c)) x();\");\n  }\n",
        "begin_line": 119,
        "end_line": 122,
        "comment": "",
        "child_ranges": [
            "(line 120,col 5)-(line 121,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_3()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_3() {\n    test(\"var a = {b: 0}; a.c = 1; while (a || a.c) x();\",\n         \"var a$b = 0; var a = {}; var a$c = 1; while (a || a$c) x();\");\n  }\n",
        "begin_line": 124,
        "end_line": 127,
        "comment": "",
        "child_ranges": [
            "(line 125,col 5)-(line 126,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_4()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_4() {\n    testSame(\"var a = {}; a.c = 1; var d = a || {}; a.c;\");\n  }\n",
        "begin_line": 129,
        "end_line": 131,
        "comment": "",
        "child_ranges": [
            "(line 130,col 5)-(line 130,col 59)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_5()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_5() {\n    testSame(\"var a = {}; a.c = 1; var d = a.c || a; a.c;\");\n  }\n",
        "begin_line": 133,
        "end_line": 135,
        "comment": "",
        "child_ranges": [
            "(line 134,col 5)-(line 134,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth1_6()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth1_6() {\n    test(\"var a = {b: 0}; a.c = 1; var d = !(a.c || a); a.c;\",\n         \"var a$b = 0; var a = {}; var a$c = 1; var d = !(a$c || a); a$c;\");\n  }\n",
        "begin_line": 137,
        "end_line": 140,
        "comment": "",
        "child_ranges": [
            "(line 138,col 5)-(line 139,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth2()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth2() {\n    test(\"var a = {b: {}}; a.b.c = 1; if (a.b) x(a.b.c);\",\n         \"var a$b = {}; var a$b$c = 1; if (a$b) x(a$b$c);\");\n  }\n",
        "begin_line": 142,
        "end_line": 145,
        "comment": "",
        "child_ranges": [
            "(line 143,col 5)-(line 144,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalObjectNameInBooleanExpressionDepth3()",
        "snippet": "  public void testGlobalObjectNameInBooleanExpressionDepth3() {\n    // TODO(user): Make CollapseProperties even more aggressive so that\n    // a$b.z gets collapsed. Right now, it doesn't get collapsed because the\n    // expression (a.b && a.b.c) could return a.b. But since it returns a.b iff\n    // a.b *is* safely collapsible, the boolean logic should be smart enough to\n    // only consider the right side of the && as aliasing.\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \" a.b.z = 1; var d = a.b && a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){};\" +\n         \" a$b.z = 1; var d = a$b && a$b$c;\", null,\n         CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 147,
        "end_line": 158,
        "comment": "",
        "child_ranges": [
            "(line 153,col 5)-(line 157,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionNameInBooleanExpressionDepth1()",
        "snippet": "  public void testGlobalFunctionNameInBooleanExpressionDepth1() {\n    test(\"function a() {} a.c = 1; if (a) x(a.c);\",\n         \"function a() {} var a$c = 1; if (a) x(a$c);\");\n  }\n",
        "begin_line": 160,
        "end_line": 163,
        "comment": "",
        "child_ranges": [
            "(line 161,col 5)-(line 162,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionNameInBooleanExpressionDepth2()",
        "snippet": "  public void testGlobalFunctionNameInBooleanExpressionDepth2() {\n    test(\"var a = {b: function(){}}; a.b.c = 1; if (a.b) x(a.b.c);\",\n         \"var a$b = function(){}; var a$b$c = 1; if (a$b) x(a$b$c);\");\n  }\n",
        "begin_line": 165,
        "end_line": 168,
        "comment": "",
        "child_ranges": [
            "(line 166,col 5)-(line 167,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_1()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_1() {\n    // An object's properties are not collapsed if the object is referenced\n    // in a such a way that an alias is created for it.\n    testSame(\"var a = {b: 0}; var c = a; c.b = 1; a.b == c.b;\");\n  }\n",
        "begin_line": 170,
        "end_line": 174,
        "comment": "",
        "child_ranges": [
            "(line 173,col 5)-(line 173,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_2()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_2() {\n    testSame(\"var a = {b: 0}; f(a); a.b;\");\n  }\n",
        "begin_line": 176,
        "end_line": 178,
        "comment": "",
        "child_ranges": [
            "(line 177,col 5)-(line 177,col 43)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth1_3()",
        "snippet": "  public void testAliasCreatedForObjectDepth1_3() {\n    testSame(\"var a = {b: 0}; new f(a); a.b;\");\n  }\n",
        "begin_line": 180,
        "end_line": 182,
        "comment": "",
        "child_ranges": [
            "(line 181,col 5)-(line 181,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth2_1()",
        "snippet": "  public void testAliasCreatedForObjectDepth2_1() {\n    test(\"var a = {}; a.b = {c: 0}; var d = a.b; a.b.c == d.c;\",\n         \"var a$b = {c: 0}; var d = a$b; a$b.c == d.c;\");\n  }\n",
        "begin_line": 184,
        "end_line": 187,
        "comment": "",
        "child_ranges": [
            "(line 185,col 5)-(line 186,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForObjectDepth2_2()",
        "snippet": "  public void testAliasCreatedForObjectDepth2_2() {\n    test(\"var a = {}; a.b = {c: 0}; for (var p in a.b) { e(a.b[p]); }\",\n         \"var a$b = {c: 0}; for (var p in a$b) { e(a$b[p]); }\");\n  }\n",
        "begin_line": 189,
        "end_line": 192,
        "comment": "",
        "child_ranges": [
            "(line 190,col 5)-(line 191,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_1()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_1() {\n    // An enum's values are always collapsed, even if the enum object is\n    // referenced in a such a way that an alias is created for it.\n    test(\"/** @enum */ var a = {b: 0}; var c = a; c.b = 1; a.b != c.b;\",\n         \"var a$b = 0; var a = {b: a$b}; var c = a; c.b = 1; a$b != c.b;\");\n  }\n",
        "begin_line": 194,
        "end_line": 199,
        "comment": "",
        "child_ranges": [
            "(line 197,col 5)-(line 198,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_2()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_2() {\n    test(\"/** @enum */ var a = {b: 0}; f(a); a.b;\",\n         \"var a$b = 0; var a = {b: a$b}; f(a); a$b;\");\n  }\n",
        "begin_line": 201,
        "end_line": 204,
        "comment": "",
        "child_ranges": [
            "(line 202,col 5)-(line 203,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_3()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_3() {\n    test(\"/** @enum */ var a = {b: 0}; new f(a); a.b;\",\n         \"var a$b = 0; var a = {b: a$b}; new f(a); a$b;\");\n  }\n",
        "begin_line": 206,
        "end_line": 209,
        "comment": "",
        "child_ranges": [
            "(line 207,col 5)-(line 208,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth1_4()",
        "snippet": "  public void testAliasCreatedForEnumDepth1_4() {\n    test(\"/** @enum */ var a = {b: 0}; for (var p in a) { f(a[p]); }\",\n         \"var a$b = 0; var a = {b: a$b}; for (var p in a) { f(a[p]); }\");\n  }\n",
        "begin_line": 211,
        "end_line": 214,
        "comment": "",
        "child_ranges": [
            "(line 212,col 5)-(line 213,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_1()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_1() {\n    test(\"var a = {}; /** @enum */ a.b = {c: 0};\" +\n         \"var d = a.b; d.c = 1; a.b.c != d.c;\",\n         \"var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"var d = a$b; d.c = 1; a$b$c != d.c;\");\n  }\n",
        "begin_line": 216,
        "end_line": 221,
        "comment": "",
        "child_ranges": [
            "(line 217,col 5)-(line 220,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_2()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_2() {\n    test(\"var a = {}; /** @enum */ a.b = {c: 0};\" +\n         \"for (var p in a.b) { f(a.b[p]); }\",\n         \"var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"for (var p in a$b) { f(a$b[p]); }\");\n  }\n",
        "begin_line": 223,
        "end_line": 228,
        "comment": "",
        "child_ranges": [
            "(line 224,col 5)-(line 227,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumDepth2_3()",
        "snippet": "  public void testAliasCreatedForEnumDepth2_3() {\n    test(\"var a = {}; var d = a; /** @enum */ a.b = {c: 0};\" +\n         \"for (var p in a.b) { f(a.b[p]); }\",\n         \"var a = {}; var d = a; var a$b$c = 0; var a$b = {c: a$b$c};\" +\n         \"for (var p in a$b) { f(a$b[p]); }\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 230,
        "end_line": 236,
        "comment": "",
        "child_ranges": [
            "(line 231,col 5)-(line 235,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumOfObjects()",
        "snippet": "  public void testAliasCreatedForEnumOfObjects() {\n    test(\"var a = {}; \" +\n         \"/** @enum {Object} */ a.b = {c: {d: 1}}; a.b.c;\" +\n         \"searchEnum(a.b);\",\n         \"var a$b$c = {d: 1};var a$b = {c: a$b$c}; a$b$c; \" +\n         \"searchEnum(a$b)\");\n  }\n",
        "begin_line": 238,
        "end_line": 244,
        "comment": "",
        "child_ranges": [
            "(line 239,col 5)-(line 243,col 28)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForEnumOfObjects2()",
        "snippet": "  public void testAliasCreatedForEnumOfObjects2() {\n    test(\"var a = {}; \" +\n         \"/** @enum {Object} */ a.b = {c: {d: 1}}; a.b.c.d;\" +\n         \"searchEnum(a.b);\",\n         \"var a$b$c = {d: 1};var a$b = {c: a$b$c}; a$b$c.d; \" +\n         \"searchEnum(a$b)\");\n  }\n",
        "begin_line": 246,
        "end_line": 252,
        "comment": "",
        "child_ranges": [
            "(line 247,col 5)-(line 251,col 28)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForPropertyOfEnumOfObjects()",
        "snippet": "  public void testAliasCreatedForPropertyOfEnumOfObjects() {\n    test(\"var a = {}; \" +\n         \"/** @enum {Object} */ a.b = {c: {d: 1}}; a.b.c;\" +\n         \"searchEnum(a.b.c);\",\n         \"var a$b$c = {d: 1}; a$b$c; searchEnum(a$b$c);\");\n  }\n",
        "begin_line": 254,
        "end_line": 259,
        "comment": "",
        "child_ranges": [
            "(line 255,col 5)-(line 258,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForPropertyOfEnumOfObjects2()",
        "snippet": "  public void testAliasCreatedForPropertyOfEnumOfObjects2() {\n    test(\"var a = {}; \" +\n         \"/** @enum {Object} */ a.b = {c: {d: 1}}; a.b.c.d;\" +\n         \"searchEnum(a.b.c);\",\n         \"var a$b$c = {d: 1}; a$b$c.d; searchEnum(a$b$c);\");\n  }\n",
        "begin_line": 261,
        "end_line": 266,
        "comment": "",
        "child_ranges": [
            "(line 262,col 5)-(line 265,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMisusedEnumTag()",
        "snippet": "  public void testMisusedEnumTag() {\n    testSame(\"var a = {}; var d = a; a.b = function() {};\" +\n             \"/** @enum */ a.b.c = 0; a.b.c;\");\n  }\n",
        "begin_line": 268,
        "end_line": 271,
        "comment": "",
        "child_ranges": [
            "(line 269,col 5)-(line 270,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMisusedConstructorTag()",
        "snippet": "  public void testMisusedConstructorTag() {\n    testSame(\"var a = {}; var d = a; a.b = function() {};\" +\n             \"/** @constructor */ a.b.c = 0; a.b.c;\");\n  }\n",
        "begin_line": 273,
        "end_line": 276,
        "comment": "",
        "child_ranges": [
            "(line 274,col 5)-(line 275,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_1()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_1() {\n    testSame(\"var a = function(){}; a.b = 1; var c = a; c.b = 2; a.b != c.b;\");\n  }\n",
        "begin_line": 278,
        "end_line": 280,
        "comment": "",
        "child_ranges": [
            "(line 279,col 5)-(line 279,col 79)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForCtorDepth1_1()",
        "snippet": "  public void testAliasCreatedForCtorDepth1_1() {\n    // A constructor's properties *are* collapsed even if the function is\n    // referenced in a such a way that an alias is created for it,\n    // since a function with custom properties is considered a class and its\n    // non-prototype properties are considered static methods and variables.\n    // People don't typically iterate through static members of a class or\n    // refer to them using an alias for the class name.\n    test(\"/** @constructor */ var a = function(){}; a.b = 1; \" +\n         \"var c = a; c.b = 2; a.b != c.b;\",\n         \"var a = function(){}; var a$b = 1; var c = a; c.b = 2; a$b != c.b;\");\n  }\n",
        "begin_line": 282,
        "end_line": 292,
        "comment": "",
        "child_ranges": [
            "(line 289,col 5)-(line 291,col 79)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_2()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_2() {\n    testSame(\"var a = function(){}; a.b = 1; f(a); a.b;\");\n  }\n",
        "begin_line": 294,
        "end_line": 296,
        "comment": "",
        "child_ranges": [
            "(line 295,col 5)-(line 295,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForCtorDepth1_2()",
        "snippet": "  public void testAliasCreatedForCtorDepth1_2() {\n    test(\"/** @constructor */ var a = function(){}; a.b = 1; f(a); a.b;\",\n         \"var a = function(){}; var a$b = 1; f(a); a$b;\");\n  }\n",
        "begin_line": 298,
        "end_line": 301,
        "comment": "",
        "child_ranges": [
            "(line 299,col 5)-(line 300,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth1_3()",
        "snippet": "  public void testAliasCreatedForFunctionDepth1_3() {\n    testSame(\"var a = function(){}; a.b = 1; new f(a); a.b;\");\n  }\n",
        "begin_line": 303,
        "end_line": 305,
        "comment": "",
        "child_ranges": [
            "(line 304,col 5)-(line 304,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForCtorDepth1_3()",
        "snippet": "  public void testAliasCreatedForCtorDepth1_3() {\n    test(\"/** @constructor */ var a = function(){}; a.b = 1; new f(a); a.b;\",\n         \"var a = function(){}; var a$b = 1; new f(a); a$b;\");\n  }\n",
        "begin_line": 307,
        "end_line": 310,
        "comment": "",
        "child_ranges": [
            "(line 308,col 5)-(line 309,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForFunctionDepth2()",
        "snippet": "  public void testAliasCreatedForFunctionDepth2() {\n    test(\n        \"var a = {}; a.b = function() {}; a.b.c = 1; var d = a.b;\" +\n        \"a.b.c != d.c;\",\n        \"var a$b = function() {}; a$b.c = 1; var d = a$b;\" +\n        \"a$b.c != d.c;\");\n  }\n",
        "begin_line": 312,
        "end_line": 318,
        "comment": "",
        "child_ranges": [
            "(line 313,col 5)-(line 317,col 25)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForCtorDepth2()",
        "snippet": "  public void testAliasCreatedForCtorDepth2() {\n    test(\"var a = {}; /** @constructor */ a.b = function() {}; \" +\n         \"a.b.c = 1; var d = a.b;\" +\n         \"a.b.c != d.c;\",\n         \"var a$b = function() {}; var a$b$c = 1; var d = a$b;\" +\n         \"a$b$c != d.c;\");\n  }\n",
        "begin_line": 320,
        "end_line": 326,
        "comment": "",
        "child_ranges": [
            "(line 321,col 5)-(line 325,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_1()",
        "snippet": "  public void testAliasCreatedForClassDepth1_1() {\n    // A class's name is always collapsed, even if one of its prefixes is\n    // referenced in a such a way that an alias is created for it.\n    test(\"var a = {}; /** @constructor */ a.b = function(){};\" +\n         \"var c = a; c.b = 0; a.b != c.b;\",\n         \"var a = {}; var a$b = function(){};\" +\n         \"var c = a; c.b = 0; a$b != c.b;\", null,\n         CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 328,
        "end_line": 336,
        "comment": "",
        "child_ranges": [
            "(line 331,col 5)-(line 335,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_2()",
        "snippet": "  public void testAliasCreatedForClassDepth1_2() {\n    test(\"var a = {}; /** @constructor */ a.b = function(){}; f(a); a.b;\",\n         \"var a = {}; var a$b = function(){}; f(a); a$b;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 338,
        "end_line": 342,
        "comment": "",
        "child_ranges": [
            "(line 339,col 5)-(line 341,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth1_3()",
        "snippet": "  public void testAliasCreatedForClassDepth1_3() {\n    test(\"var a = {}; /** @constructor */ a.b = function(){}; new f(a); a.b;\",\n         \"var a = {}; var a$b = function(){}; new f(a); a$b;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 344,
        "end_line": 348,
        "comment": "",
        "child_ranges": [
            "(line 345,col 5)-(line 347,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_1()",
        "snippet": "  public void testAliasCreatedForClassDepth2_1() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"var d = a.b; a.b.c != d.c;\",\n         \"var a$b = {}; var a$b$c = function(){};\" +\n         \"var d = a$b; a$b$c != d.c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 350,
        "end_line": 356,
        "comment": "",
        "child_ranges": [
            "(line 351,col 5)-(line 355,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_2()",
        "snippet": "  public void testAliasCreatedForClassDepth2_2() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"f(a.b); a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){}; f(a$b); a$b$c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 358,
        "end_line": 363,
        "comment": "",
        "child_ranges": [
            "(line 359,col 5)-(line 362,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassDepth2_3()",
        "snippet": "  public void testAliasCreatedForClassDepth2_3() {\n    test(\"var a = {}; a.b = {}; /** @constructor */ a.b.c = function(){};\" +\n         \"new f(a.b); a.b.c;\",\n         \"var a$b = {}; var a$b$c = function(){}; new f(a$b); a$b$c;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 365,
        "end_line": 370,
        "comment": "",
        "child_ranges": [
            "(line 366,col 5)-(line 369,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAliasCreatedForClassProperty()",
        "snippet": "  public void testAliasCreatedForClassProperty() {\n    test(\"var a = {}; /** @constructor */ a.b = function(){};\" +\n         \"a.b.c = {d: 3}; new f(a.b.c); a.b.c.d;\",\n         \"var a$b = function(){}; var a$b$c = {d:3}; new f(a$b$c); a$b$c.d;\");\n  }\n",
        "begin_line": 372,
        "end_line": 376,
        "comment": "",
        "child_ranges": [
            "(line 373,col 5)-(line 375,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNestedObjLit()",
        "snippet": "  public void testNestedObjLit() {\n    test(\"var a = {}; a.b = {f: 0, c: {d: 1}}; var e = a.b.c.d\",\n         \"var a$b$f = 0; var a$b$c$d = 1; var e = a$b$c$d;\");\n  }\n",
        "begin_line": 378,
        "end_line": 381,
        "comment": "",
        "child_ranges": [
            "(line 379,col 5)-(line 380,col 61)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDeclarationUsedInSameVarList()",
        "snippet": "  public void testObjLitDeclarationUsedInSameVarList() {\n    // The collapsed properties must defined in the same place in the var list\n    // where they were originally defined (and not, for example, at the end).\n    test(\"var a = {b: {}, c: {}}; var d = a.b; var e = a.c;\",\n         \"var a$b = {}; var a$c = {}; var d = a$b; var e = a$c;\");\n  }\n",
        "begin_line": 383,
        "end_line": 388,
        "comment": "",
        "child_ranges": [
            "(line 386,col 5)-(line 387,col 66)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropGetInsideAnObjLit()",
        "snippet": "  public void testPropGetInsideAnObjLit() {\n    test(\"var x = {}; x.y = 1; var a = {}; a.b = {c: x.y}\",\n         \"var x$y = 1; var a$b$c = x$y;\");\n  }\n",
        "begin_line": 390,
        "end_line": 393,
        "comment": "",
        "child_ranges": [
            "(line 391,col 5)-(line 392,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithQuotedKeyThatDoesNotGetRead()",
        "snippet": "  public void testObjLitWithQuotedKeyThatDoesNotGetRead() {\n    test(\"var a = {}; a.b = {c: 0, 'd': 1}; var e = a.b.c;\",\n         \"var a$b$c = 0; var a$b$d = 1; var e = a$b$c;\");\n  }\n",
        "begin_line": 395,
        "end_line": 398,
        "comment": "",
        "child_ranges": [
            "(line 396,col 5)-(line 397,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithQuotedKeyThatGetsRead()",
        "snippet": "  public void testObjLitWithQuotedKeyThatGetsRead() {\n    test(\"var a = {}; a.b = {c: 0, 'd': 1}; var e = a.b['d'];\",\n         \"var a$b = {c: 0, 'd': 1}; var e = a$b['d'];\");\n  }\n",
        "begin_line": 400,
        "end_line": 403,
        "comment": "",
        "child_ranges": [
            "(line 401,col 5)-(line 402,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionWithQuotedPropertyThatDoesNotGetRead()",
        "snippet": "  public void testFunctionWithQuotedPropertyThatDoesNotGetRead() {\n    test(\"var a = {}; a.b = function() {}; a.b['d'] = 1;\",\n         \"var a$b = function() {}; a$b['d'] = 1;\");\n  }\n",
        "begin_line": 405,
        "end_line": 408,
        "comment": "",
        "child_ranges": [
            "(line 406,col 5)-(line 407,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionWithQuotedPropertyThatGetsRead()",
        "snippet": "  public void testFunctionWithQuotedPropertyThatGetsRead() {\n    test(\"var a = {}; a.b = function() {}; a.b['d'] = 1; f(a.b['d']);\",\n         \"var a$b = function() {}; a$b['d'] = 1; f(a$b['d']);\");\n  }\n",
        "begin_line": 410,
        "end_line": 413,
        "comment": "",
        "child_ranges": [
            "(line 411,col 5)-(line 412,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedToMultipleNames1()",
        "snippet": "  public void testObjLitAssignedToMultipleNames1() {\n    // An object literal that's assigned to multiple names isn't collapsed.\n    testSame(\"var a = b = {c: 0, d: 1}; var e = a.c; var f = b.d;\");\n  }\n",
        "begin_line": 415,
        "end_line": 418,
        "comment": "",
        "child_ranges": [
            "(line 417,col 5)-(line 417,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedToMultipleNames2()",
        "snippet": "  public void testObjLitAssignedToMultipleNames2() {\n    testSame(\"a = b = {c: 0, d: 1}; var e = a.c; var f = b.d;\");\n  }\n",
        "begin_line": 420,
        "end_line": 422,
        "comment": "",
        "child_ranges": [
            "(line 421,col 5)-(line 421,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitRedefinedInGlobalScope()",
        "snippet": "  public void testObjLitRedefinedInGlobalScope() {\n    testSame(\"a = {b: 0}; a = {c: 1}; var d = a.b; var e = a.c;\");\n  }\n",
        "begin_line": 424,
        "end_line": 426,
        "comment": "",
        "child_ranges": [
            "(line 425,col 5)-(line 425,col 66)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitRedefinedInLocalScope()",
        "snippet": "  public void testObjLitRedefinedInLocalScope() {\n    test(\"var a = {}; a.b = {c: 0}; function d() { a.b = {c: 1}; } e(a.b.c);\",\n         \"var a$b = {c: 0}; function d() { a$b = {c: 1}; } e(a$b.c);\");\n  }\n",
        "begin_line": 428,
        "end_line": 431,
        "comment": "",
        "child_ranges": [
            "(line 429,col 5)-(line 430,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedInTernaryExpression1()",
        "snippet": "  public void testObjLitAssignedInTernaryExpression1() {\n    testSame(\"a = x ? {b: 0} : d; var c = a.b;\");\n  }\n",
        "begin_line": 433,
        "end_line": 435,
        "comment": "",
        "child_ranges": [
            "(line 434,col 5)-(line 434,col 49)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitAssignedInTernaryExpression2()",
        "snippet": "  public void testObjLitAssignedInTernaryExpression2() {\n    testSame(\"a = x ? {b: 0} : {b: 1}; var c = a.b;\");\n  }\n",
        "begin_line": 437,
        "end_line": 439,
        "comment": "",
        "child_ranges": [
            "(line 438,col 5)-(line 438,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally1()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally1() {\n    testSame(\"var a; if (x) a = {b: 0}; var c = x ? a.b : 0;\");\n  }\n",
        "begin_line": 441,
        "end_line": 443,
        "comment": "",
        "child_ranges": [
            "(line 442,col 5)-(line 442,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally1b()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally1b() {\n    test(\"if (x) var a = {b: 0}; var c = x ? a.b : 0;\",\n         \"if (x) var a$b = 0; var c = x ? a$b : 0;\");\n  }\n",
        "begin_line": 445,
        "end_line": 448,
        "comment": "",
        "child_ranges": [
            "(line 446,col 5)-(line 447,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally2()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally2() {\n    test(\"if (x) var a = {b: 0}; var c = a.b; var d = a.c;\",\n         \"if (x){ var a$b = 0; var a = {}; }var c = a$b; var d = a.c;\");\n  }\n",
        "begin_line": 450,
        "end_line": 453,
        "comment": "",
        "child_ranges": [
            "(line 451,col 5)-(line 452,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalVarSetToObjLitConditionally3()",
        "snippet": "  public void testGlobalVarSetToObjLitConditionally3() {\n    testSame(\"var a; if (x) a = {b: 0}; else a = {b: 1}; var c = a.b;\");\n  }\n",
        "begin_line": 455,
        "end_line": 457,
        "comment": "",
        "child_ranges": [
            "(line 456,col 5)-(line 456,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectPropertySetToObjLitConditionally()",
        "snippet": "  public void testObjectPropertySetToObjLitConditionally() {\n    test(\"var a = {}; if (x) a.b = {c: 0}; var d = a.b ? a.b.c : 0;\",\n         \"if (x){ var a$b$c = 0; var a$b = {} } var d = a$b ? a$b$c : 0;\");\n  }\n",
        "begin_line": 459,
        "end_line": 462,
        "comment": "",
        "child_ranges": [
            "(line 460,col 5)-(line 461,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionPropertySetToObjLitConditionally()",
        "snippet": "  public void testFunctionPropertySetToObjLitConditionally() {\n    test(\"function a() {} if (x) a.b = {c: 0}; var d = a.b ? a.b.c : 0;\",\n         \"function a() {} if (x){ var a$b$c = 0; var a$b = {} }\" +\n         \"var d = a$b ? a$b$c : 0;\");\n  }\n",
        "begin_line": 464,
        "end_line": 468,
        "comment": "",
        "child_ranges": [
            "(line 465,col 5)-(line 467,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPrototypePropertySetToAnObjectLiteral()",
        "snippet": "  public void testPrototypePropertySetToAnObjectLiteral() {\n    test(\"var a = {b: function(){}}; a.b.prototype.c = {d: 0};\",\n         \"var a$b = function(){}; a$b.prototype.c = {d: 0};\");\n  }\n",
        "begin_line": 470,
        "end_line": 473,
        "comment": "",
        "child_ranges": [
            "(line 471,col 5)-(line 472,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectPropertyResetInLocalScope()",
        "snippet": "  public void testObjectPropertyResetInLocalScope() {\n    test(\"var z = {}; z.a = 0; function f() {z.a = 5; return z.a}\",\n         \"var z$a = 0; function f() {z$a = 5; return z$a}\");\n  }\n",
        "begin_line": 475,
        "end_line": 478,
        "comment": "",
        "child_ranges": [
            "(line 476,col 5)-(line 477,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionPropertyResetInLocalScope()",
        "snippet": "  public void testFunctionPropertyResetInLocalScope() {\n    test(\"function z() {} z.a = 0; function f() {z.a = 5; return z.a}\",\n         \"function z() {} var z$a = 0; function f() {z$a = 5; return z$a}\");\n  }\n",
        "begin_line": 480,
        "end_line": 483,
        "comment": "",
        "child_ranges": [
            "(line 481,col 5)-(line 482,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInGlobalScope1()",
        "snippet": "  public void testNamespaceResetInGlobalScope1() {\n    test(\"var a = {}; /** @constructor */a.b = function() {}; a = {};\",\n         \"var a = {}; var a$b = function() {}; a = {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 485,
        "end_line": 489,
        "comment": "",
        "child_ranges": [
            "(line 486,col 5)-(line 488,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInGlobalScope2()",
        "snippet": "  public void testNamespaceResetInGlobalScope2() {\n    test(\"var a = {}; a = {}; /** @constructor */a.b = function() {};\",\n         \"var a = {}; a = {}; var a$b = function() {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 491,
        "end_line": 495,
        "comment": "",
        "child_ranges": [
            "(line 492,col 5)-(line 494,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInLocalScope1()",
        "snippet": "  public void testNamespaceResetInLocalScope1() {\n    test(\"var a = {}; /** @constructor */a.b = function() {};\" +\n         \" function f() { a = {}; }\",\n         \"var a = {};var a$b = function() {};\" +\n         \" function f() { a = {}; }\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 497,
        "end_line": 503,
        "comment": "",
        "child_ranges": [
            "(line 498,col 5)-(line 502,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceResetInLocalScope2()",
        "snippet": "  public void testNamespaceResetInLocalScope2() {\n    test(\"var a = {}; function f() { a = {}; }\" +\n         \" /** @constructor */a.b = function() {};\",\n         \"var a = {}; function f() { a = {}; }\" +\n         \" var a$b = function() {};\",\n         null, CollapseProperties.NAMESPACE_REDEFINED_WARNING);\n  }\n",
        "begin_line": 505,
        "end_line": 511,
        "comment": "",
        "child_ranges": [
            "(line 506,col 5)-(line 510,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNamespaceDefinedInLocalScope()",
        "snippet": "  public void testNamespaceDefinedInLocalScope() {\n    test(\"var a = {}; (function() { a.b = {}; })();\" +\n         \" /** @constructor */a.b.c = function() {};\",\n         \"var a$b; (function() { a$b = {}; })(); var a$b$c = function() {};\");\n  }\n",
        "begin_line": 513,
        "end_line": 517,
        "comment": "",
        "child_ranges": [
            "(line 514,col 5)-(line 516,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToObjectInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToObjectInLocalScopeDepth1() {\n    test(\"var a = {b: 0}; function f() { a.c = 5; return a.c; }\",\n         \"var a$b = 0; var a$c; function f() { a$c = 5; return a$c; }\");\n  }\n",
        "begin_line": 519,
        "end_line": 522,
        "comment": "",
        "child_ranges": [
            "(line 520,col 5)-(line 521,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToObjectInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToObjectInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = {}; (function() {a.b.c = 0;})(); x = a.b.c;\",\n         \"var a$b$c; (function() {a$b$c = 0;})(); x = a$b$c;\");\n  }\n",
        "begin_line": 524,
        "end_line": 527,
        "comment": "",
        "child_ranges": [
            "(line 525,col 5)-(line 526,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToFunctionInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToFunctionInLocalScopeDepth1() {\n    test(\"function a() {} function f() { a.c = 5; return a.c; }\",\n         \"function a() {} var a$c; function f() { a$c = 5; return a$c; }\");\n  }\n",
        "begin_line": 529,
        "end_line": 532,
        "comment": "",
        "child_ranges": [
            "(line 530,col 5)-(line 531,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToFunctionInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToFunctionInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = function() {}; function f() {a.b.c = 0;}\",\n         \"var a$b = function() {}; var a$b$c; function f() {a$b$c = 0;}\");\n  }\n",
        "begin_line": 534,
        "end_line": 537,
        "comment": "",
        "child_ranges": [
            "(line 535,col 5)-(line 536,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleObjectInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleObjectInLocalScopeDepth1() {\n    testSame(\"var a = {}; var c = a; (function() {a.b = 0;})(); a.b;\");\n  }\n",
        "begin_line": 539,
        "end_line": 541,
        "comment": "",
        "child_ranges": [
            "(line 540,col 5)-(line 540,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleFunctionInLocalScopeDepth1() {\n    testSame(\"function a() {} var c = a; (function() {a.b = 0;})(); a.b;\");\n  }\n",
        "begin_line": 543,
        "end_line": 545,
        "comment": "",
        "child_ranges": [
            "(line 544,col 5)-(line 544,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleNamedCtorInLocalScopeDepth1() {\n    // This technically should be collapsed, according to the rules.\n    // We don't collapse named constructors for legacy reasons\n    // (this pass has been around too long, and we don't know who's\n    // depending on this behavior).\n    testSame(\n          \"/** @constructor */ function a() {} var c = a; \" +\n          \"(function() {a.b = 0;})(); a.b;\");\n  }\n",
        "begin_line": 547,
        "end_line": 555,
        "comment": "",
        "child_ranges": [
            "(line 552,col 5)-(line 554,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleCtorInLocalScopeDepth1()",
        "snippet": "  public void testAddPropertyToUncollapsibleCtorInLocalScopeDepth1() {\n    test(\"/** @constructor */ var a = function() {}; var c = a; \" +\n         \"(function() {a.b = 0;})(); a.b;\",\n         \"var a = function() {}; var a$b; \" +\n         \"var c = a; (function() {a$b = 0;})(); a$b;\");\n  }\n",
        "begin_line": 557,
        "end_line": 562,
        "comment": "",
        "child_ranges": [
            "(line 558,col 5)-(line 561,col 55)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleObjectInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToUncollapsibleObjectInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = {}; var d = a.b;\" +\n         \"(function() {a.b.c = 0;})(); a.b.c;\",\n         \"var a$b = {}; var d = a$b;\" +\n         \"(function() {a$b.c = 0;})(); a$b.c;\");\n  }\n",
        "begin_line": 564,
        "end_line": 569,
        "comment": "",
        "child_ranges": [
            "(line 565,col 5)-(line 568,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToUncollapsibleFunctionInLocalScopeDepth2() {\n    test(\"var a = {}; a.b = function (){}; var d = a.b;\" +\n         \"(function() {a.b.c = 0;})(); a.b.c;\",\n         \"var a$b = function (){}; var d = a$b;\" +\n         \"(function() {a$b.c = 0;})(); a$b.c;\");\n  }\n",
        "begin_line": 571,
        "end_line": 576,
        "comment": "",
        "child_ranges": [
            "(line 572,col 5)-(line 575,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToUncollapsibleCtorInLocalScopeDepth2()",
        "snippet": "  public void testAddPropertyToUncollapsibleCtorInLocalScopeDepth2() {\n    test(\"var a = {}; /** @constructor */ a.b = function (){}; var d = a.b;\" +\n         \"(function() {a.b.c = 0;})(); a.b.c;\",\n         \"var a$b = function (){}; var a$b$c; var d = a$b;\" +\n         \"(function() {a$b$c = 0;})(); a$b$c;\");\n  }\n",
        "begin_line": 578,
        "end_line": 583,
        "comment": "",
        "child_ranges": [
            "(line 579,col 5)-(line 582,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfChildFuncOfUncollapsibleObjectDepth1()",
        "snippet": "  public void testPropertyOfChildFuncOfUncollapsibleObjectDepth1() {\n    testSame(\"var a = {}; var c = a; a.b = function (){}; a.b.x = 0; a.b.x;\");\n  }\n",
        "begin_line": 585,
        "end_line": 587,
        "comment": "",
        "child_ranges": [
            "(line 586,col 5)-(line 586,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfChildFuncOfUncollapsibleObjectDepth2()",
        "snippet": "  public void testPropertyOfChildFuncOfUncollapsibleObjectDepth2() {\n    test(\"var a = {}; a.b = {}; var c = a.b;\" +\n         \"a.b.c = function (){}; a.b.c.x = 0; a.b.c.x;\",\n         \"var a$b = {}; var c = a$b;\" +\n         \"a$b.c = function (){}; a$b.c.x = 0; a$b.c.x;\");\n  }\n",
        "begin_line": 589,
        "end_line": 594,
        "comment": "",
        "child_ranges": [
            "(line 590,col 5)-(line 593,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildFuncOfUncollapsibleObjectInLocalScope()",
        "snippet": "  public void testAddPropertyToChildFuncOfUncollapsibleObjectInLocalScope() {\n    testSame(\"var a = {}; a.b = function (){}; a.b.x = 0;\" +\n             \"var c = a; (function() {a.b.y = 1;})(); a.b.x; a.b.y;\");\n  }\n",
        "begin_line": 596,
        "end_line": 599,
        "comment": "",
        "child_ranges": [
            "(line 597,col 5)-(line 598,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildTypeOfUncollapsibleObjectInLocalScope()",
        "snippet": "  public void testAddPropertyToChildTypeOfUncollapsibleObjectInLocalScope() {\n    test(\"var a = {}; /** @constructor */ a.b = function (){}; a.b.x = 0;\" +\n         \"var c = a; (function() {a.b.y = 1;})(); a.b.x; a.b.y;\",\n         \"var a = {}; var a$b = function (){}; var a$b$y; var a$b$x = 0;\" +\n         \"var c = a; (function() {a$b$y = 1;})(); a$b$x; a$b$y;\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 601,
        "end_line": 607,
        "comment": "",
        "child_ranges": [
            "(line 602,col 5)-(line 606,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleFunctionInLocalScope()",
        "snippet": "  public void testAddPropertyToChildOfUncollapsibleFunctionInLocalScope() {\n    testSame(\n        \"function a() {} a.b = {x: 0}; var c = a;\" +\n        \"(function() {a.b.y = 0;})(); a.b.y;\");\n  }\n",
        "begin_line": 609,
        "end_line": 613,
        "comment": "",
        "child_ranges": [
            "(line 610,col 5)-(line 612,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testAddPropertyToChildOfUncollapsibleCtorInLocalScope()",
        "snippet": "  public void testAddPropertyToChildOfUncollapsibleCtorInLocalScope() {\n    test(\"/** @constructor */ var a = function() {}; a.b = {x: 0}; var c = a;\" +\n         \"(function() {a.b.y = 0;})(); a.b.y;\",\n         \"var a = function() {}; var a$b$x = 0; var a$b$y; var c = a;\" +\n         \"(function() {a$b$y = 0;})(); a$b$y;\");\n  }\n",
        "begin_line": 615,
        "end_line": 620,
        "comment": "",
        "child_ranges": [
            "(line 616,col 5)-(line 619,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testResetObjectPropertyInLocalScope()",
        "snippet": "  public void testResetObjectPropertyInLocalScope() {\n    test(\"var a = {b: 0}; a.c = 1; function f() { a.c = 5; }\",\n         \"var a$b = 0; var a$c = 1; function f() { a$c = 5; }\");\n  }\n",
        "begin_line": 622,
        "end_line": 625,
        "comment": "",
        "child_ranges": [
            "(line 623,col 5)-(line 624,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testResetFunctionPropertyInLocalScope()",
        "snippet": "  public void testResetFunctionPropertyInLocalScope() {\n    test(\"function a() {}; a.c = 1; function f() { a.c = 5; }\",\n         \"function a() {}; var a$c = 1; function f() { a$c = 5; }\");\n  }\n",
        "begin_line": 627,
        "end_line": 630,
        "comment": "",
        "child_ranges": [
            "(line 628,col 5)-(line 629,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalNameReferencedInLocalScopeBeforeDefined1()",
        "snippet": "  public void testGlobalNameReferencedInLocalScopeBeforeDefined1() {\n    // Because referencing global names earlier in the source code than they're\n    // defined is such a common practice, we collapse them even though a runtime\n    // exception could result (in the off-chance that the function gets called\n    // before the alias variable is defined).\n    test(\"var a = {b: 0}; function f() { a.c = 5; } a.c = 1;\",\n         \"var a$b = 0; function f() { a$c = 5; } var a$c = 1;\");\n  }\n",
        "begin_line": 632,
        "end_line": 639,
        "comment": "",
        "child_ranges": [
            "(line 637,col 5)-(line 638,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalNameReferencedInLocalScopeBeforeDefined2()",
        "snippet": "  public void testGlobalNameReferencedInLocalScopeBeforeDefined2() {\n    test(\"var a = {b: 0}; function f() { return a.c; } a.c = 1;\",\n         \"var a$b = 0; function f() { return a$c; } var a$c = 1;\");\n  }\n",
        "begin_line": 641,
        "end_line": 644,
        "comment": "",
        "child_ranges": [
            "(line 642,col 5)-(line 643,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth1_1()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth1_1() {\n    testSame(\"var a = {}; function f() { a.b(); }\" +\n             \"a = function() {}; a.b = function() {};\");\n  }\n",
        "begin_line": 646,
        "end_line": 649,
        "comment": "",
        "child_ranges": [
            "(line 647,col 5)-(line 648,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth1_2()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth1_2() {\n    testSame(\"var a = {}; /** @constructor */ a = function() {};\" +\n             \"a.b = {}; a.b.c = 0; function f() { a.b.d = 1; }\");\n  }\n",
        "begin_line": 651,
        "end_line": 654,
        "comment": "",
        "child_ranges": [
            "(line 652,col 5)-(line 653,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwiceDefinedGlobalNameDepth2()",
        "snippet": "  public void testTwiceDefinedGlobalNameDepth2() {\n    test(\"var a = {}; a.b = {}; function f() { a.b.c(); }\" +\n         \"a.b = function() {}; a.b.c = function() {};\",\n         \"var a$b = {}; function f() { a$b.c(); }\" +\n         \"a$b = function() {}; a$b.c = function() {};\");\n  }\n",
        "begin_line": 656,
        "end_line": 661,
        "comment": "",
        "child_ranges": [
            "(line 657,col 5)-(line 660,col 56)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionCallDepth1()",
        "snippet": "  public void testFunctionCallDepth1() {\n    test(\"var a = {}; a.b = function(){}; var c = a.b();\",\n         \"var a$b = function(){}; var c = a$b()\");\n  }\n",
        "begin_line": 663,
        "end_line": 666,
        "comment": "",
        "child_ranges": [
            "(line 664,col 5)-(line 665,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionCallDepth2()",
        "snippet": "  public void testFunctionCallDepth2() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; a.b.c();\",\n         \"var a$b$c = function(){}; a$b$c();\");\n  }\n",
        "begin_line": 668,
        "end_line": 671,
        "comment": "",
        "child_ranges": [
            "(line 669,col 5)-(line 670,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionAlias()",
        "snippet": "  public void testFunctionAlias() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; a.b.d = a.b.c;\",\n         \"var a$b$c = function(){}; var a$b$d = a$b$c;\");\n  }\n",
        "begin_line": 673,
        "end_line": 676,
        "comment": "",
        "child_ranges": [
            "(line 674,col 5)-(line 675,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallToRedefinedFunction()",
        "snippet": "  public void testCallToRedefinedFunction() {\n    test(\"var a = {}; a.b = function(){}; a.b = function(){}; a.b();\",\n         \"var a$b = function(){}; a$b = function(){}; a$b();\");\n  }\n",
        "begin_line": 678,
        "end_line": 681,
        "comment": "",
        "child_ranges": [
            "(line 679,col 5)-(line 680,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapsePrototypeName()",
        "snippet": "  public void testCollapsePrototypeName() {\n    test(\"var a = {}; a.b = {}; a.b.c = function(){}; \" +\n         \"a.b.c.prototype.d = function(){}; (new a.b.c()).d();\",\n         \"var a$b$c = function(){}; a$b$c.prototype.d = function(){}; \" +\n         \"new a$b$c().d();\");\n  }\n",
        "begin_line": 683,
        "end_line": 688,
        "comment": "",
        "child_ranges": [
            "(line 684,col 5)-(line 687,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferencedPrototypeProperty()",
        "snippet": "  public void testReferencedPrototypeProperty() {\n    test(\"var a = {b: {}}; a.b.c = function(){}; a.b.c.prototype.d = {};\" +\n         \"e = a.b.c.prototype.d;\",\n         \"var a$b$c = function(){}; a$b$c.prototype.d = {};\" +\n         \"e = a$b$c.prototype.d;\");\n  }\n",
        "begin_line": 690,
        "end_line": 695,
        "comment": "",
        "child_ranges": [
            "(line 691,col 5)-(line 694,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testSetStaticAndPrototypePropertiesOnFunction()",
        "snippet": "  public void testSetStaticAndPrototypePropertiesOnFunction() {\n    test(\"var a = {}; a.b = function(){}; a.b.prototype.d = 0; a.b.c = 1;\",\n         \"var a$b = function(){}; a$b.prototype.d = 0; var a$b$c = 1;\");\n  }\n",
        "begin_line": 697,
        "end_line": 700,
        "comment": "",
        "child_ranges": [
            "(line 698,col 5)-(line 699,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReadUndefinedPropertyDepth1()",
        "snippet": "  public void testReadUndefinedPropertyDepth1() {\n    test(\"var a = {b: 0}; var c = a.d;\",\n         \"var a$b = 0; var a = {}; var c = a.d;\");\n  }\n",
        "begin_line": 702,
        "end_line": 705,
        "comment": "",
        "child_ranges": [
            "(line 703,col 5)-(line 704,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReadUndefinedPropertyDepth2()",
        "snippet": "  public void testReadUndefinedPropertyDepth2() {\n    test(\"var a = {b: {c: 0}}; f(a.b.c); f(a.b.d);\",\n         \"var a$b$c = 0; var a$b = {}; f(a$b$c); f(a$b.d);\");\n  }\n",
        "begin_line": 707,
        "end_line": 710,
        "comment": "",
        "child_ranges": [
            "(line 708,col 5)-(line 709,col 61)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallUndefinedMethodOnObjLitDepth1()",
        "snippet": "  public void testCallUndefinedMethodOnObjLitDepth1() {\n    test(\"var a = {b: 0}; a.c();\",\n         \"var a$b = 0; var a = {}; a.c();\");\n  }\n",
        "begin_line": 712,
        "end_line": 715,
        "comment": "",
        "child_ranges": [
            "(line 713,col 5)-(line 714,col 44)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallUndefinedMethodOnObjLitDepth2()",
        "snippet": "  public void testCallUndefinedMethodOnObjLitDepth2() {\n    test(\"var a = {b: {}}; a.b.c = function() {}; a.b.c(); a.b.d();\",\n         \"var a$b = {}; var a$b$c = function() {}; a$b$c(); a$b.d();\");\n  }\n",
        "begin_line": 717,
        "end_line": 720,
        "comment": "",
        "child_ranges": [
            "(line 718,col 5)-(line 719,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertiesOfAnUndefinedVar()",
        "snippet": "  public void testPropertiesOfAnUndefinedVar() {\n    testSame(\"a.document = d; f(a.document.innerHTML);\");\n  }\n",
        "begin_line": 722,
        "end_line": 724,
        "comment": "",
        "child_ranges": [
            "(line 723,col 5)-(line 723,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertyOfAnObjectThatIsNeitherFunctionNorObjLit()",
        "snippet": "  public void testPropertyOfAnObjectThatIsNeitherFunctionNorObjLit() {\n    testSame(\"var a = window; a.document = d; f(a.document)\");\n  }\n",
        "begin_line": 726,
        "end_line": 728,
        "comment": "",
        "child_ranges": [
            "(line 727,col 5)-(line 727,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis1()",
        "snippet": "  public void testStaticFunctionReferencingThis1() {\n    // Note: Google's Javascript Style Guide says to avoid using the 'this'\n    // keyword in a static function.\n    test(\"var a = {}; a.b = function() {this.c}; var d = a.b;\",\n         \"var a$b = function() {this.c}; var d = a$b;\", null, UNSAFE_THIS);\n  }\n",
        "begin_line": 730,
        "end_line": 735,
        "comment": "",
        "child_ranges": [
            "(line 733,col 5)-(line 734,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis2()",
        "snippet": "  public void testStaticFunctionReferencingThis2() {\n    // This gives no warning, because \"this\" is in a scope whose name is not\n    // getting collapsed.\n    test(\"var a = {}; \" +\n         \"a.b = function() { return function(){ return this; }; };\",\n         \"var a$b = function() { return function(){ return this; }; };\");\n  }\n",
        "begin_line": 737,
        "end_line": 743,
        "comment": "",
        "child_ranges": [
            "(line 740,col 5)-(line 742,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis3()",
        "snippet": "  public void testStaticFunctionReferencingThis3() {\n    test(\"var a = {b: function() {this.c}};\",\n         \"var a$b = function() { this.c };\", null, UNSAFE_THIS);\n  }\n",
        "begin_line": 745,
        "end_line": 748,
        "comment": "",
        "child_ranges": [
            "(line 746,col 5)-(line 747,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testStaticFunctionReferencingThis4()",
        "snippet": "  public void testStaticFunctionReferencingThis4() {\n    test(\"var a = {/** @this {Element} */ b: function() {this.c}};\",\n         \"var a$b = function() { this.c };\");\n  }\n",
        "begin_line": 750,
        "end_line": 753,
        "comment": "",
        "child_ranges": [
            "(line 751,col 5)-(line 752,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPrototypeMethodReferencingThis()",
        "snippet": "  public void testPrototypeMethodReferencingThis() {\n    testSame(\"var A = function(){}; A.prototype = {b: function() {this.c}};\");\n  }\n",
        "begin_line": 755,
        "end_line": 757,
        "comment": "",
        "child_ranges": [
            "(line 756,col 5)-(line 756,col 78)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testConstructorReferencingThis()",
        "snippet": "  public void testConstructorReferencingThis() {\n    test(\"var a = {}; \" +\n         \"/** @constructor */ a.b = function() { this.a = 3; };\",\n         \"var a$b = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 759,
        "end_line": 763,
        "comment": "",
        "child_ranges": [
            "(line 760,col 5)-(line 762,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testSafeReferenceOfThis()",
        "snippet": "  public void testSafeReferenceOfThis() {\n    test(\"var a = {}; \" +\n         \"/** @this {Object} */ a.b = function() { this.a = 3; };\",\n         \"var a$b = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 765,
        "end_line": 769,
        "comment": "",
        "child_ranges": [
            "(line 766,col 5)-(line 768,col 50)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalFunctionReferenceOfThis()",
        "snippet": "  public void testGlobalFunctionReferenceOfThis() {\n    testSame(\"var a = function() { this.a = 3; };\");\n  }\n",
        "begin_line": 771,
        "end_line": 773,
        "comment": "",
        "child_ranges": [
            "(line 772,col 5)-(line 772,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testFunctionGivenTwoNames()",
        "snippet": "  public void testFunctionGivenTwoNames() {\n    // It's okay to collapse f's properties because g is not added to the\n    // global scope as an alias for f. (Try it in your browser.)\n    test(\"var f = function g() {}; f.a = 1; h(f.a);\",\n         \"var f = function g() {}; var f$a = 1; h(f$a);\");\n  }\n",
        "begin_line": 775,
        "end_line": 780,
        "comment": "",
        "child_ranges": [
            "(line 778,col 5)-(line 779,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithUsedNumericKey()",
        "snippet": "  public void testObjLitWithUsedNumericKey() {\n    testSame(\"a = {40: {}, c: {}}; var d = a[40]; var e = a.c;\");\n  }\n",
        "begin_line": 782,
        "end_line": 784,
        "comment": "",
        "child_ranges": [
            "(line 783,col 5)-(line 783,col 65)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithUnusedNumericKey()",
        "snippet": "  public void testObjLitWithUnusedNumericKey() {\n    test(\"var a = {40: {}, c: {}}; var e = a.c;\",\n         \"var a$1 = {}; var a$c = {}; var e = a$c\");\n  }\n",
        "begin_line": 786,
        "end_line": 789,
        "comment": "",
        "child_ranges": [
            "(line 787,col 5)-(line 788,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitWithNonIdentifierKeys()",
        "snippet": "  public void testObjLitWithNonIdentifierKeys() {\n    testSame(\"a = {' ': 0, ',': 1}; var c = a[' '];\");\n  }\n",
        "begin_line": 791,
        "end_line": 793,
        "comment": "",
        "child_ranges": [
            "(line 792,col 5)-(line 792,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments1()",
        "snippet": "  public void testChainedAssignments1() {\n    test(\"var x = {}; x.y = a = 0;\",\n         \"var x$y = a = 0;\");\n  }\n",
        "begin_line": 795,
        "end_line": 798,
        "comment": "",
        "child_ranges": [
            "(line 796,col 5)-(line 797,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments2()",
        "snippet": "  public void testChainedAssignments2() {\n    test(\"var x = {}; x.y = a = b = c();\",\n         \"var x$y = a = b = c();\");\n  }\n",
        "begin_line": 800,
        "end_line": 803,
        "comment": "",
        "child_ranges": [
            "(line 801,col 5)-(line 802,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments3()",
        "snippet": "  public void testChainedAssignments3() {\n    test(\"var x = {y: 1}; a = b = x.y;\",\n         \"var x$y = 1; a = b = x$y;\");\n  }\n",
        "begin_line": 805,
        "end_line": 808,
        "comment": "",
        "child_ranges": [
            "(line 806,col 5)-(line 807,col 38)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments4()",
        "snippet": "  public void testChainedAssignments4() {\n    test(\"var x = {}; a = b = x.y;\",\n         \"var x = {}; a = b = x.y;\");\n  }\n",
        "begin_line": 810,
        "end_line": 813,
        "comment": "",
        "child_ranges": [
            "(line 811,col 5)-(line 812,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments5()",
        "snippet": "  public void testChainedAssignments5() {\n    test(\"var x = {}; a = x.y = 0;\", \"var x$y; a = x$y = 0;\");\n  }\n",
        "begin_line": 815,
        "end_line": 817,
        "comment": "",
        "child_ranges": [
            "(line 816,col 5)-(line 816,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments6()",
        "snippet": "  public void testChainedAssignments6() {\n    test(\"var x = {}; a = x.y = b = c();\",\n         \"var x$y; a = x$y = b = c();\");\n  }\n",
        "begin_line": 819,
        "end_line": 822,
        "comment": "",
        "child_ranges": [
            "(line 820,col 5)-(line 821,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedAssignments7()",
        "snippet": "  public void testChainedAssignments7() {\n    test(\"var x = {}; a = x.y = {}; /** @constructor */ x.y.z = function() {};\",\n         \"var x$y; a = x$y = {}; var x$y$z = function() {};\",\n         null, CollapseProperties.UNSAFE_NAMESPACE_WARNING);\n  }\n",
        "begin_line": 824,
        "end_line": 828,
        "comment": "",
        "child_ranges": [
            "(line 825,col 5)-(line 827,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments1()",
        "snippet": "  public void testChainedVarAssignments1() {\n    test(\"var x = {y: 1}; var a = x.y = 0;\",\n         \"var x$y = 1; var a = x$y = 0;\");\n  }\n",
        "begin_line": 830,
        "end_line": 833,
        "comment": "",
        "child_ranges": [
            "(line 831,col 5)-(line 832,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments2()",
        "snippet": "  public void testChainedVarAssignments2() {\n    test(\"var x = {y: 1}; var a = x.y = b = 0;\",\n         \"var x$y = 1; var a = x$y = b = 0;\");\n  }\n",
        "begin_line": 835,
        "end_line": 838,
        "comment": "",
        "child_ranges": [
            "(line 836,col 5)-(line 837,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments3()",
        "snippet": "  public void testChainedVarAssignments3() {\n    test(\"var x = {y: {z: 1}}; var b = 0; var a = x.y.z = 1; var c = 2;\",\n         \"var x$y$z = 1; var b = 0; var a = x$y$z = 1; var c = 2;\");\n  }\n",
        "begin_line": 840,
        "end_line": 843,
        "comment": "",
        "child_ranges": [
            "(line 841,col 5)-(line 842,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments4()",
        "snippet": "  public void testChainedVarAssignments4() {\n    test(\"var x = {}; var a = b = x.y = 0;\",\n         \"var x$y; var a = b = x$y = 0;\");\n  }\n",
        "begin_line": 845,
        "end_line": 848,
        "comment": "",
        "child_ranges": [
            "(line 846,col 5)-(line 847,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testChainedVarAssignments5()",
        "snippet": "  public void testChainedVarAssignments5() {\n    test(\"var x = {y: {}}; var a = b = x.y.z = 0;\",\n         \"var x$y$z; var a = b = x$y$z = 0;\");\n  }\n",
        "begin_line": 850,
        "end_line": 853,
        "comment": "",
        "child_ranges": [
            "(line 851,col 5)-(line 852,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPeerAndSubpropertyOfUncollapsibleProperty()",
        "snippet": "  public void testPeerAndSubpropertyOfUncollapsibleProperty() {\n    test(\"var x = {}; var a = x.y = 0; x.w = 1; x.y.z = 2;\" +\n         \"b = x.w; c = x.y.z;\",\n         \"var x$y; var a = x$y = 0; var x$w = 1; x$y.z = 2;\" +\n         \"b = x$w; c = x$y.z;\");\n  }\n",
        "begin_line": 855,
        "end_line": 860,
        "comment": "",
        "child_ranges": [
            "(line 856,col 5)-(line 859,col 32)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testComplexAssignmentAfterInitialAssignment()",
        "snippet": "  public void testComplexAssignmentAfterInitialAssignment() {\n    test(\"var d = {}; d.e = {}; d.e.f = 0; a = b = d.e.f = 1;\",\n         \"var d$e$f = 0; a = b = d$e$f = 1;\");\n  }\n",
        "begin_line": 862,
        "end_line": 865,
        "comment": "",
        "child_ranges": [
            "(line 863,col 5)-(line 864,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testRenamePrefixOfUncollapsibleProperty()",
        "snippet": "  public void testRenamePrefixOfUncollapsibleProperty() {\n    test(\"var d = {}; d.e = {}; a = b = d.e.f = 0;\",\n         \"var d$e$f; a = b = d$e$f = 0;\");\n  }\n",
        "begin_line": 867,
        "end_line": 870,
        "comment": "",
        "child_ranges": [
            "(line 868,col 5)-(line 869,col 42)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNewOperator()",
        "snippet": "  public void testNewOperator() {\n    // Using the new operator on a name doesn't prevent its (static) properties\n    // from getting collapsed.\n    test(\"var a = {}; a.b = function() {}; a.b.c = 1; var d = new a.b();\",\n         \"var a$b = function() {}; var a$b$c = 1; var d = new a$b();\");\n  }\n",
        "begin_line": 872,
        "end_line": 877,
        "comment": "",
        "child_ranges": [
            "(line 875,col 5)-(line 876,col 71)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testMethodCall()",
        "snippet": "  public void testMethodCall() {\n    test(\"var a = {}; a.b = function() {}; var d = a.b();\",\n         \"var a$b = function() {}; var d = a$b();\");\n  }\n",
        "begin_line": 879,
        "end_line": 882,
        "comment": "",
        "child_ranges": [
            "(line 880,col 5)-(line 881,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjLitDefinedInLocalScopeIsLeftAlone()",
        "snippet": "  public void testObjLitDefinedInLocalScopeIsLeftAlone() {\n    test(\"var a = {}; a.b = function() {};\" +\n         \"a.b.prototype.f_ = function() {\" +\n         \"  var x = { p: '', q: '', r: ''}; var y = x.q;\" +\n         \"};\",\n         \"var a$b = function() {};\" +\n         \"a$b.prototype.f_ = function() {\" +\n         \"  var x = { p: '', q: '', r: ''}; var y = x.q;\" +\n         \"};\");\n  }\n",
        "begin_line": 884,
        "end_line": 893,
        "comment": "",
        "child_ranges": [
            "(line 885,col 5)-(line 892,col 15)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropertiesOnBothSidesOfAssignment()",
        "snippet": "  public void testPropertiesOnBothSidesOfAssignment() {\n    // This verifies that replacements are done in the right order. Collapsing\n    // the lvalue in an assignment affects the parse tree immediately above\n    // the rvalue, so we update all rvalues before any lvalues.\n    test(\"var a = {b: 0}; a.c = a.b;\", \"var a$b = 0; var a$c = a$b;\");\n  }\n",
        "begin_line": 895,
        "end_line": 900,
        "comment": "",
        "child_ranges": [
            "(line 899,col 5)-(line 899,col 70)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCallOnUndefinedProperty()",
        "snippet": "  public void testCallOnUndefinedProperty() {\n    // The \"inherits\" property is not explicitly defined on a.b anywhere, but\n    // it is accessed as though it certainly exists (it is called), so we infer\n    // that it must be an uncollapsible property that has come into existence\n    // some other way.\n    test(\"var a = {}; a.b = function(){}; a.b.inherits(x);\",\n         \"var a$b = function(){}; a$b.inherits(x);\");\n  }\n",
        "begin_line": 902,
        "end_line": 909,
        "comment": "",
        "child_ranges": [
            "(line 907,col 5)-(line 908,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGetPropOnUndefinedProperty()",
        "snippet": "  public void testGetPropOnUndefinedProperty() {\n    // The \"superClass_\" property is not explicitly defined on a.b anywhere,\n    // but it is accessed as though it certainly exists (a subproperty of it\n    // is accessed), so we infer that it must be an uncollapsible property that\n    // has come into existence some other way.\n    test(\"var a = {b: function(){}}; a.b.prototype.c =\" +\n         \"function() { a.b.superClass_.c.call(this); }\",\n         \"var a$b = function(){}; a$b.prototype.c =\" +\n         \"function() { a$b.superClass_.c.call(this); }\");\n  }\n",
        "begin_line": 911,
        "end_line": 920,
        "comment": "",
        "child_ranges": [
            "(line 916,col 5)-(line 919,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias1()",
        "snippet": "  public void testLocalAlias1() {\n    test(\"var a = {b: 3}; function f() { var x = a; f(x.b); }\",\n         \"var a$b = 3; function f() { var x = null; f(a$b); }\");\n  }\n",
        "begin_line": 922,
        "end_line": 925,
        "comment": "",
        "child_ranges": [
            "(line 923,col 5)-(line 924,col 64)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias2()",
        "snippet": "  public void testLocalAlias2() {\n    test(\"var a = {b: 3, c: 4}; function f() { var x = a; f(x.b); f(x.c);}\",\n         \"var a$b = 3; var a$c = 4; \" +\n         \"function f() { var x = null; f(a$b); f(a$c);}\");\n  }\n",
        "begin_line": 927,
        "end_line": 931,
        "comment": "",
        "child_ranges": [
            "(line 928,col 5)-(line 930,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias3()",
        "snippet": "  public void testLocalAlias3() {\n    test(\"var a = {b: 3, c: {d: 5}}; \" +\n         \"function f() { var x = a; f(x.b); f(x.c); f(x.c.d); }\",\n         \"var a$b = 3; var a$c = {d: 5}; \" +\n         \"function f() { var x = null; f(a$b); f(a$c); f(a$c.d);}\");\n  }\n",
        "begin_line": 933,
        "end_line": 938,
        "comment": "",
        "child_ranges": [
            "(line 934,col 5)-(line 937,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias4()",
        "snippet": "  public void testLocalAlias4() {\n    test(\"var a = {b: 3}; var c = {d: 5}; \" +\n         \"function f() { var x = a; var y = c; f(x.b); f(y.d); }\",\n         \"var a$b = 3; var c$d = 5; \" +\n         \"function f() { var x = null; var y = null; f(a$b); f(c$d);}\");\n  }\n",
        "begin_line": 940,
        "end_line": 945,
        "comment": "",
        "child_ranges": [
            "(line 941,col 5)-(line 944,col 72)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias5()",
        "snippet": "  public void testLocalAlias5() {\n    test(\"var a = {b: {c: 5}}; \" +\n         \"function f() { var x = a; var y = x.b; f(a.b.c); f(y.c); }\",\n         \"var a$b$c = 5; \" +\n         \"function f() { var x = null; var y = null; f(a$b$c); f(a$b$c);}\");\n  }\n",
        "begin_line": 947,
        "end_line": 952,
        "comment": "",
        "child_ranges": [
            "(line 948,col 5)-(line 951,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias6()",
        "snippet": "  public void testLocalAlias6() {\n    test(\"var a = {b: 3}; function f() { var x = a; if (x.b) { f(x.b); } }\",\n         \"var a$b = 3; function f() { var x = null; if (a$b) { f(a$b); } }\");\n  }\n",
        "begin_line": 954,
        "end_line": 957,
        "comment": "",
        "child_ranges": [
            "(line 955,col 5)-(line 956,col 77)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAlias7()",
        "snippet": "  public void testLocalAlias7() {\n    test(\"var a = {b: {c: 5}}; function f() { var x = a.b; f(x.c); }\",\n         \"var a$b$c = 5; function f() { var x = null; f(a$b$c); }\");\n  }\n",
        "begin_line": 959,
        "end_line": 962,
        "comment": "",
        "child_ranges": [
            "(line 960,col 5)-(line 961,col 68)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalWriteToAncestor()",
        "snippet": "  public void testGlobalWriteToAncestor() {\n    testSame(\"var a = {b: 3}; function f() { var x = a; f(a.b); } a = 5;\");\n  }\n",
        "begin_line": 964,
        "end_line": 966,
        "comment": "",
        "child_ranges": [
            "(line 965,col 5)-(line 965,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalWriteToNonAncestor()",
        "snippet": "  public void testGlobalWriteToNonAncestor() {\n    test(\"var a = {b: 3}; function f() { var x = a; f(a.b); } a.b = 5;\",\n         \"var a$b = 3; function f() { var x = null; f(a$b); } a$b = 5;\");\n  }\n",
        "begin_line": 968,
        "end_line": 971,
        "comment": "",
        "child_ranges": [
            "(line 969,col 5)-(line 970,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalWriteToAncestor()",
        "snippet": "  public void testLocalWriteToAncestor() {\n    testSame(\"var a = {b: 3}; function f() { a = 5; var x = a; f(a.b); } \");\n  }\n",
        "begin_line": 973,
        "end_line": 975,
        "comment": "",
        "child_ranges": [
            "(line 974,col 5)-(line 974,col 76)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalWriteToNonAncestor()",
        "snippet": "  public void testLocalWriteToNonAncestor() {\n    test(\"var a = {b: 3}; \" +\n         \"function f() { a.b = 5; var x = a; f(a.b); }\",\n         \"var a$b = 3; function f() { a$b = 5; var x = null; f(a$b); } \");\n  }\n",
        "begin_line": 977,
        "end_line": 981,
        "comment": "",
        "child_ranges": [
            "(line 978,col 5)-(line 980,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNonWellformedAlias1()",
        "snippet": "  public void testNonWellformedAlias1() {\n    testSame(\"var a = {b: 3}; function f() { f(x); var x = a; f(x.b); }\");\n  }\n",
        "begin_line": 983,
        "end_line": 985,
        "comment": "",
        "child_ranges": [
            "(line 984,col 5)-(line 984,col 74)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNonWellformedAlias2()",
        "snippet": "  public void testNonWellformedAlias2() {\n    testSame(\"var a = {b: 3}; \" +\n             \"function f() { if (false) { var x = a; f(x.b); } f(x); }\");\n  }\n",
        "begin_line": 987,
        "end_line": 990,
        "comment": "",
        "child_ranges": [
            "(line 988,col 5)-(line 989,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfAncestor()",
        "snippet": "  public void testLocalAliasOfAncestor() {\n    testSame(\"var a = {b: {c: 5}}; function g() { f(a); } \" +\n             \"function f() { var x = a.b; f(x.c); }\");\n  }\n",
        "begin_line": 992,
        "end_line": 995,
        "comment": "",
        "child_ranges": [
            "(line 993,col 5)-(line 994,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testGlobalAliasOfAncestor()",
        "snippet": "  public void testGlobalAliasOfAncestor() {\n    testSame(\"var a = {b: {c: 5}}; var y = a; \" +\n             \"function f() { var x = a.b; f(x.c); }\");\n  }\n",
        "begin_line": 997,
        "end_line": 1000,
        "comment": "",
        "child_ranges": [
            "(line 998,col 5)-(line 999,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfOtherName()",
        "snippet": "  public void testLocalAliasOfOtherName() {\n    testSame(\"var foo = function() { return {b: 3}; };\" +\n             \"var a = foo(); a.b = 5; \" +\n             \"function f() { var x = a.b; f(x); }\");\n  }\n",
        "begin_line": 1002,
        "end_line": 1006,
        "comment": "",
        "child_ranges": [
            "(line 1003,col 5)-(line 1005,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testLocalAliasOfFunction()",
        "snippet": "  public void testLocalAliasOfFunction() {\n    test(\"var a = function() {}; a.b = 5; \" +\n         \"function f() { var x = a.b; f(x); }\",\n         \"var a = function() {}; var a$b = 5; \" +\n         \"function f() { var x = null; f(a$b); }\");\n  }\n",
        "begin_line": 1008,
        "end_line": 1013,
        "comment": "",
        "child_ranges": [
            "(line 1009,col 5)-(line 1012,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNoInlineGetpropIntoCall()",
        "snippet": "  public void testNoInlineGetpropIntoCall() {\n    test(\"var b = x; function f() { var a = b; a(); }\",\n         \"var b = x; function f() { var a = null; b(); }\");\n    test(\"var b = {}; b.c = x; function f() { var a = b.c; a(); }\",\n         \"var b$c = x; function f() { var a = null; b$c(); }\");\n  }\n",
        "begin_line": 1015,
        "end_line": 1020,
        "comment": "",
        "child_ranges": [
            "(line 1016,col 5)-(line 1017,col 59)",
            "(line 1018,col 5)-(line 1019,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapsePropertyOnExternType()",
        "snippet": "  public void testCollapsePropertyOnExternType() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"String.myFunc = function() {}; String.myFunc();\",\n         \"var String$myFunc = function() {}; String$myFunc()\");\n  }\n",
        "begin_line": 1022,
        "end_line": 1026,
        "comment": "",
        "child_ranges": [
            "(line 1023,col 5)-(line 1023,col 43)",
            "(line 1024,col 5)-(line 1025,col 63)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCollapseForEachWithoutExterns()",
        "snippet": "  public void testCollapseForEachWithoutExterns() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"/** @constructor */function Array(){};\\n\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\",\n         \"if (!Array$forEach) {\\n\" +\n         \"  var Array$forEach = function() {};\\n\" +\n         \"}\", null, null);\n  }\n",
        "begin_line": 1028,
        "end_line": 1037,
        "comment": "",
        "child_ranges": [
            "(line 1029,col 5)-(line 1029,col 43)",
            "(line 1030,col 5)-(line 1036,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testNoCollapseForEachInExterns()",
        "snippet": "  public void testNoCollapseForEachInExterns() {\n    collapsePropertiesOnExternTypes = true;\n    test(\"/** @constructor */ function Array() {}\" +\n         \"Array.forEach = function() {}\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\",\n         \"if (!Array.forEach) {\\n\" +\n         \"  Array.forEach = function() {};\\n\" +\n         \"}\", null, null);\n  }\n",
        "begin_line": 1039,
        "end_line": 1049,
        "comment": "",
        "child_ranges": [
            "(line 1040,col 5)-(line 1040,col 43)",
            "(line 1041,col 5)-(line 1048,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testDoNotCollapsePropertyOnExternType()",
        "snippet": "  public void testDoNotCollapsePropertyOnExternType() {\n    collapsePropertiesOnExternTypes = false;\n    test(\"String.myFunc = function() {}; String.myFunc()\",\n         \"String.myFunc = function() {}; String.myFunc()\");\n  }\n",
        "begin_line": 1051,
        "end_line": 1055,
        "comment": "",
        "child_ranges": [
            "(line 1052,col 5)-(line 1052,col 44)",
            "(line 1053,col 5)-(line 1054,col 59)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1704733()",
        "snippet": "  public void testBug1704733() {\n    String prelude =\n        \"function protect(x) { return x; }\" +\n        \"function O() {}\" +\n        \"protect(O).m1 = function() {};\" +\n        \"protect(O).m2 = function() {};\" +\n        \"protect(O).m3 = function() {};\";\n\n    testSame(prelude +\n        \"alert(O.m1); alert(O.m2()); alert(!O.m3);\");\n  }\n",
        "begin_line": 1057,
        "end_line": 1067,
        "comment": "",
        "child_ranges": [
            "(line 1058,col 5)-(line 1063,col 41)",
            "(line 1065,col 5)-(line 1066,col 53)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1956277()",
        "snippet": "  public void testBug1956277() {\n    test(\"var CONST = {}; CONST.URL = 3;\",\n         \"var CONST$URL = 3;\");\n  }\n",
        "begin_line": 1069,
        "end_line": 1072,
        "comment": "",
        "child_ranges": [
            "(line 1070,col 5)-(line 1071,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testBug1974371()",
        "snippet": "  public void testBug1974371() {\n    test(\n        \"/** @enum {Object} */ var Foo = {A: {c: 2}, B: {c: 3}};\" +\n        \"for (var key in Foo) {}\",\n        \"var Foo$A = {c: 2}; var Foo$B = {c: 3};\" +\n        \"var Foo = {A: Foo$A, B: Foo$B};\" +\n         \"for (var key in Foo) {}\");\n  }\n",
        "begin_line": 1074,
        "end_line": 1081,
        "comment": "",
        "child_ranges": [
            "(line 1075,col 5)-(line 1080,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects1()",
        "snippet": "  public void testEnumOfObjects1() {\n    test(\n        COMMON_ENUM +\n        \"for (var key in Foo.A) {}\",\n         \"var Foo$A = {c: 2}; var Foo$B$c = 3; for (var key in Foo$A) {}\");\n  }\n",
        "begin_line": 1086,
        "end_line": 1091,
        "comment": "",
        "child_ranges": [
            "(line 1087,col 5)-(line 1090,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects2()",
        "snippet": "  public void testEnumOfObjects2() {\n    test(\n        COMMON_ENUM +\n        \"foo(Foo.A.c);\",\n         \"var Foo$A$c = 2; var Foo$B$c = 3; foo(Foo$A$c);\");\n  }\n",
        "begin_line": 1093,
        "end_line": 1098,
        "comment": "",
        "child_ranges": [
            "(line 1094,col 5)-(line 1097,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects3()",
        "snippet": "  public void testEnumOfObjects3() {\n    test(\n        \"var x = {c: 2}; var y = {c: 3};\" +\n        \"/** @enum {Object} */ var Foo = {A: x, B: y};\" +\n        \"for (var key in Foo) {}\",\n        \"var x = {c: 2}; var y = {c: 3};\" +\n        \"var Foo$A = x; var Foo$B = y; var Foo = {A: Foo$A, B: Foo$B};\" +\n        \"for (var key in Foo) {}\");\n  }\n",
        "begin_line": 1100,
        "end_line": 1108,
        "comment": "",
        "child_ranges": [
            "(line 1101,col 5)-(line 1107,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testEnumOfObjects4()",
        "snippet": "  public void testEnumOfObjects4() {\n    // Note that this produces bad code, but that's OK, because\n    // checkConsts will yell at you for reassigning an enum value.\n    // (enum values have to be constant).\n    test(\n        COMMON_ENUM +\n        \"for (var key in Foo) {} Foo.A = 3; alert(Foo.A);\",\n        \"var Foo$A = {c: 2}; var Foo$B = {c: 3};\" +\n        \"var Foo = {A: Foo$A, B: Foo$B};\" +\n        \"for (var key in Foo) {} Foo$A = 3; alert(Foo$A);\");\n  }\n",
        "begin_line": 1110,
        "end_line": 1120,
        "comment": "",
        "child_ranges": [
            "(line 1114,col 5)-(line 1119,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testObjectOfObjects1()",
        "snippet": "  public void testObjectOfObjects1() {\n    // Basically the same as testEnumOfObjects4, but without the\n    // constant enum values.\n    testSame(\n        \"var Foo = {a: {c: 2}, b: {c: 3}};\" +\n        \"for (var key in Foo) {} Foo.a = 3; alert(Foo.a);\");\n  }\n",
        "begin_line": 1122,
        "end_line": 1128,
        "comment": "",
        "child_ranges": [
            "(line 1125,col 5)-(line 1127,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject0()",
        "snippet": "  public void testReferenceInAnonymousObject0() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"var d = a.b.prototype.c;\",\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var d = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1130,
        "end_line": 1138,
        "comment": "",
        "child_ranges": [
            "(line 1131,col 5)-(line 1137,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject1()",
        "snippet": "  public void testReferenceInAnonymousObject1() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"var d = a.b.prototype.c;\",\n         \"var a$b = function(){};\" +\n         \"var d = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1140,
        "end_line": 1146,
        "comment": "",
        "child_ranges": [
            "(line 1141,col 5)-(line 1145,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject2()",
        "snippet": "  public void testReferenceInAnonymousObject2() {\n    test(\"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"var d = {c: a.b.prototype.c};\",\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var d$c = a$b.prototype.c;\");\n  }\n",
        "begin_line": 1148,
        "end_line": 1156,
        "comment": "",
        "child_ranges": [
            "(line 1149,col 5)-(line 1155,col 39)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject3()",
        "snippet": "  public void testReferenceInAnonymousObject3() {\n    test(\"function CreateClass(a$$1) {}\" +\n         \"var a = {};\" +\n         \"a.b = function(){};\" +\n         \"a.b.prototype.c = function(){};\" +\n         \"a.d = CreateClass({c: a.b.prototype.c});\",\n         \"function CreateClass(a$$1) {}\" +\n         \"var a$b = function(){};\" +\n         \"a$b.prototype.c = function(){};\" +\n         \"var a$d = CreateClass({c: a$b.prototype.c});\");\n  }\n",
        "begin_line": 1158,
        "end_line": 1168,
        "comment": "",
        "child_ranges": [
            "(line 1159,col 5)-(line 1167,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject4()",
        "snippet": "  public void testReferenceInAnonymousObject4() {\n    test(\"function CreateClass(a) {}\" +\n         \"var a = {};\" +\n         \"a.b = CreateClass({c: function() {}});\" +\n         \"a.d = CreateClass({c: a.b.c});\",\n         \"function CreateClass(a$$1) {}\" +\n         \"var a$b = CreateClass({c: function() {}});\" +\n         \"var a$d = CreateClass({c: a$b.c});\");\n  }\n",
        "begin_line": 1170,
        "end_line": 1178,
        "comment": "",
        "child_ranges": [
            "(line 1171,col 5)-(line 1177,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testReferenceInAnonymousObject5()",
        "snippet": "  public void testReferenceInAnonymousObject5() {\n    test(\"function CreateClass(a) {}\" +\n         \"var a = {};\" +\n         \"a.b = CreateClass({c: function() {}});\" +\n         \"a.d = CreateClass({c: a.b.prototype.c});\",\n         \"function CreateClass(a$$1) {}\" +\n         \"var a$b = CreateClass({c: function() {}});\" +\n         \"var a$d = CreateClass({c: a$b.prototype.c});\");\n  }\n",
        "begin_line": 1180,
        "end_line": 1188,
        "comment": "",
        "child_ranges": [
            "(line 1181,col 5)-(line 1187,col 57)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCrashInCommaOperator()",
        "snippet": "  public void testCrashInCommaOperator() {\n    test(\"var a = {}; a.b = function() {},a.b();\",\n         \"var a$b; a$b=function() {},a$b();\");\n  }\n",
        "begin_line": 1190,
        "end_line": 1193,
        "comment": "",
        "child_ranges": [
            "(line 1191,col 5)-(line 1192,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testCrashInNestedAssign()",
        "snippet": "  public void testCrashInNestedAssign() {\n    test(\"var a = {}; if (a.b = function() {}) a.b();\",\n         \"var a$b; if (a$b=function() {}) { a$b(); }\");\n  }\n",
        "begin_line": 1195,
        "end_line": 1198,
        "comment": "",
        "child_ranges": [
            "(line 1196,col 5)-(line 1197,col 55)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testTwinReferenceCancelsChildCollapsing()",
        "snippet": "  public void testTwinReferenceCancelsChildCollapsing() {\n    test(\"var a = {}; if (a.b = function() {}) { a.b.c = 3; a.b(a.b.c); }\",\n         \"var a$b; if (a$b = function() {}) { a$b.c = 3; a$b(a$b.c); }\");\n  }\n",
        "begin_line": 1200,
        "end_line": 1203,
        "comment": "",
        "child_ranges": [
            "(line 1201,col 5)-(line 1202,col 73)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign()",
        "snippet": "  public void testPropWithDollarSign() {\n    test(\"var a = {$: 3}\", \"var a$$0 = 3;\");\n  }\n",
        "begin_line": 1205,
        "end_line": 1207,
        "comment": "",
        "child_ranges": [
            "(line 1206,col 5)-(line 1206,col 44)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign2()",
        "snippet": "  public void testPropWithDollarSign2() {\n    test(\"var a = {$: function(){}}\", \"var a$$0 = function(){};\");\n  }\n",
        "begin_line": 1209,
        "end_line": 1211,
        "comment": "",
        "child_ranges": [
            "(line 1210,col 5)-(line 1210,col 66)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign3()",
        "snippet": "  public void testPropWithDollarSign3() {\n    test(\"var a = {b: {c: 3}, b$c: function(){}}\",\n         \"var a$b$c = 3; var a$b$0c = function(){};\");\n  }\n",
        "begin_line": 1213,
        "end_line": 1216,
        "comment": "",
        "child_ranges": [
            "(line 1214,col 5)-(line 1215,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign4()",
        "snippet": "  public void testPropWithDollarSign4() {\n    test(\"var a = {$$: {$$$: 3}};\", \"var a$$0$0$$0$0$0 = 3;\");\n  }\n",
        "begin_line": 1218,
        "end_line": 1220,
        "comment": "",
        "child_ranges": [
            "(line 1219,col 5)-(line 1219,col 62)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testPropWithDollarSign5()",
        "snippet": "  public void testPropWithDollarSign5() {\n    test(\"var a = {b: {$0c: true}, b$0c: false};\",\n         \"var a$b$$00c = true; var a$b$00c = false;\");\n  }\n",
        "begin_line": 1222,
        "end_line": 1225,
        "comment": "",
        "child_ranges": [
            "(line 1223,col 5)-(line 1224,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CollapsePropertiesTest",
        "child_classes": [],
        "src_path": "test/com/google/javascript/jscomp/CollapsePropertiesTest.java",
        "signature": "com.google.javascript.jscomp.CollapsePropertiesTest.testConstKey()",
        "snippet": "  public void testConstKey() {\n    test(\"var foo = {A: 3};\", \"var foo$A = 3;\");\n  }\n",
        "begin_line": 1227,
        "end_line": 1229,
        "comment": "",
        "child_ranges": [
            "(line 1228,col 5)-(line 1228,col 48)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase(java.lang.String, boolean)",
        "snippet": "  protected CompilerTestCase(String externs, boolean compareAsTree) {\n    this.externsInputs = new JSSourceFile[] {\n        JSSourceFile.fromCode(\"externs\", externs)\n    };\n    this.compareAsTree = compareAsTree;\n    this.parseTypeInfo = false;\n  }\n",
        "begin_line": 101,
        "end_line": 107,
        "comment": "\n   * Constructs a test.\n   *\n   * @param externs Externs JS as a string\n   * @param compareAsTree True to compare output & expected as a node tree.\n   *     99% of the time you want to compare as a tree. There are a few\n   *     special cases where you don't, like if you want to test the code\n   *     printing of \"unnatural\" syntax trees. For example,\n   *\n   * <pre>\n   * IF\n   *   IF\n   *     STATEMENT\n   * ELSE\n   *   STATEMENT\n   * </pre>\n   ",
        "child_ranges": [
            "(line 102,col 5)-(line 104,col 6)",
            "(line 105,col 5)-(line 105,col 39)",
            "(line 106,col 5)-(line 106,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase(java.lang.String)",
        "snippet": "  protected CompilerTestCase(String externs) {\n    this(externs, true);\n  }\n",
        "begin_line": 113,
        "end_line": 115,
        "comment": "\n   * Constructs a test. Uses AST comparison.\n   * @param externs Externs JS as a string\n   ",
        "child_ranges": [
            "(line 114,col 5)-(line 114,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.CompilerTestCase()",
        "snippet": "  protected CompilerTestCase() {\n    this(\"\", true);\n  }\n",
        "begin_line": 120,
        "end_line": 122,
        "comment": "\n   * Constructs a test. Uses AST comparison and no externs.\n   ",
        "child_ranges": [
            "(line 121,col 5)-(line 121,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getProcessor(com.google.javascript.jscomp.Compiler)",
        "snippet": "  protected abstract CompilerPass getProcessor(Compiler compiler);\n",
        "begin_line": 130,
        "end_line": 130,
        "comment": "\n   * Gets the compiler pass instance to use for a test.\n   *\n   * @param compiler The compiler\n   * @return The pass to test\n   ",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getOptions()",
        "snippet": "  protected CompilerOptions getOptions() {\n    CompilerOptions options = new CompilerOptions();\n\n    // This doesn't affect whether checkSymbols is run--it just affects\n    // whether variable warnings are filtered.\n    options.checkSymbols = true;\n\n    options.setWarningLevel(\n        DiagnosticGroups.MISSING_PROPERTIES, CheckLevel.WARNING);\n    options.setCodingConvention(getCodingConvention());\n    return options;\n  }\n",
        "begin_line": 139,
        "end_line": 150,
        "comment": "\n   * Gets the compiler options to use for this test. Defaults to do nothing\n   * options.\n   *\n   * This is really only for configuring warnings guards. Use getProcessor\n   * to determine what passes should be run.\n   ",
        "child_ranges": [
            "(line 140,col 5)-(line 140,col 52)",
            "(line 144,col 5)-(line 144,col 32)",
            "(line 146,col 5)-(line 147,col 65)",
            "(line 148,col 5)-(line 148,col 55)",
            "(line 149,col 5)-(line 149,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getCodingConvention()",
        "snippet": "  protected CodingConvention getCodingConvention() {\n    return new GoogleCodingConvention();\n  }\n",
        "begin_line": 152,
        "end_line": 154,
        "comment": "",
        "child_ranges": [
            "(line 153,col 5)-(line 153,col 40)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getNumRepetitions()",
        "snippet": "  protected int getNumRepetitions() {\n    // Since most compiler passes should be idempotent, we run each pass twice\n    // by default.\n    return 2;\n  }\n",
        "begin_line": 160,
        "end_line": 164,
        "comment": "\n   * Returns the number of times the pass should be run before results are\n   * verified.\n   ",
        "child_ranges": [
            "(line 163,col 5)-(line 163,col 13)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.allowSourcelessWarnings()",
        "snippet": "  void allowSourcelessWarnings() {\n    allowSourcelessWarnings = true;\n  }\n",
        "begin_line": 167,
        "end_line": 169,
        "comment": " Expect warnings without source information. ",
        "child_ranges": [
            "(line 168,col 5)-(line 168,col 35)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.getLastCompiler()",
        "snippet": "  Compiler getLastCompiler() {\n    return lastCompiler;\n  }\n",
        "begin_line": 172,
        "end_line": 174,
        "comment": " The most recently used JSComp instance. ",
        "child_ranges": [
            "(line 173,col 5)-(line 173,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableTypeCheck(com.google.javascript.jscomp.CheckLevel)",
        "snippet": "  public void enableTypeCheck(CheckLevel level) {\n    typeCheckEnabled  = true;\n    typeCheckLevel = level;\n  }\n",
        "begin_line": 184,
        "end_line": 187,
        "comment": "\n   * Perform type checking before running the test pass. This will check\n   * for type errors and annotate nodes with type information.\n   *\n   * @param level the level of severity to report for type errors\n   *\n   * @see TypeCheck\n   ",
        "child_ranges": [
            "(line 185,col 5)-(line 185,col 29)",
            "(line 186,col 5)-(line 186,col 27)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableLineNumberCheck(boolean)",
        "snippet": "  public void enableLineNumberCheck(boolean newVal) {\n    checkLineNumbers = newVal;\n  }\n",
        "begin_line": 192,
        "end_line": 194,
        "comment": "\n   * Check to make sure that line numbers were preserved.\n   ",
        "child_ranges": [
            "(line 193,col 5)-(line 193,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.disableTypeCheck()",
        "snippet": "  void disableTypeCheck() {\n    typeCheckEnabled  = false;\n  }\n",
        "begin_line": 201,
        "end_line": 203,
        "comment": "\n   * Do not run type checking before running the test pass.\n   *\n   * @see TypeCheck\n   ",
        "child_ranges": [
            "(line 202,col 5)-(line 202,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableNormalize()",
        "snippet": "  protected void enableNormalize() {\n    enableNormalize(true);\n  }\n",
        "begin_line": 211,
        "end_line": 213,
        "comment": "\n   * Perform AST normalization before running the test pass, and anti-normalize\n   * after running it.\n   *\n   * @see Normalize\n   ",
        "child_ranges": [
            "(line 212,col 5)-(line 212,col 26)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableNormalize(boolean)",
        "snippet": "  protected void enableNormalize(boolean normalizeExpected) {\n    normalizeEnabled = true;\n    this.normalizeExpected = normalizeExpected;\n  }\n",
        "begin_line": 223,
        "end_line": 226,
        "comment": "\n   * Perform AST normalization before running the test pass, and anti-normalize\n   * after running it.\n   *\n   * @param normalizeExpected Whether to perform normalization on the\n   * expected js result.\n   * @see Normalize\n   ",
        "child_ranges": [
            "(line 224,col 5)-(line 224,col 28)",
            "(line 225,col 5)-(line 225,col 47)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.disableNormalize()",
        "snippet": "  protected void disableNormalize() {\n    normalizeEnabled = false;\n  }\n",
        "begin_line": 232,
        "end_line": 234,
        "comment": "\n   * Don't perform AST normalization before running the test pass.\n   * @see Normalize\n   ",
        "child_ranges": [
            "(line 233,col 5)-(line 233,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.enableMarkNoSideEffects()",
        "snippet": "  void enableMarkNoSideEffects() {\n    markNoSideEffects  = true;\n  }\n",
        "begin_line": 241,
        "end_line": 243,
        "comment": "\n   * Run the MarkSideEffectCalls pass before running the test pass.\n   *\n   * @see MarkNoSideEffectCalls\n   ",
        "child_ranges": [
            "(line 242,col 5)-(line 242,col 30)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createTypeCheck(com.google.javascript.jscomp.Compiler, com.google.javascript.jscomp.CheckLevel)",
        "snippet": "  private static TypeCheck createTypeCheck(Compiler compiler,\n      CheckLevel level) {\n    ReverseAbstractInterpreter rai =\n        new SemanticReverseAbstractInterpreter(compiler.getCodingConvention(),\n            compiler.getTypeRegistry());\n\n    return new TypeCheck(compiler, rai, compiler.getTypeRegistry(),\n        level, CheckLevel.OFF);\n  }\n",
        "begin_line": 246,
        "end_line": 254,
        "comment": " Returns a newly created TypeCheck. ",
        "child_ranges": [
            "(line 248,col 5)-(line 250,col 40)",
            "(line 252,col 5)-(line 253,col 31)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String)",
        "snippet": "  public void test(String js, String expected) {\n    test(js, expected, (DiagnosticType) null);\n  }\n",
        "begin_line": 262,
        "end_line": 264,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param js Input\n   * @param expected Expected JS output\n   ",
        "child_ranges": [
            "(line 263,col 5)-(line 263,col 46)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String js, String expected, DiagnosticType error) {\n    test(js, expected, error, null);\n  }\n",
        "begin_line": 274,
        "end_line": 276,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 275,col 5)-(line 275,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String js, String expected, DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    test(externsInputs, js, expected, error, warning, description);\n  }\n",
        "begin_line": 289,
        "end_line": 292,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The content of the error expected\n   ",
        "child_ranges": [
            "(line 291,col 5)-(line 291,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String js, String expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    test(externsInputs, js, expected, error, warning, null);\n  }\n",
        "begin_line": 304,
        "end_line": 307,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 306,col 5)-(line 306,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String externs, String js, String expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    test(externs, js, expected, error, warning, null);\n  }\n",
        "begin_line": 320,
        "end_line": 323,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs input\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 322,col 5)-(line 322,col 54)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String, java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String externs, String js, String expected,\n                   DiagnosticType error, DiagnosticType warning,\n                   String description) {\n    JSSourceFile[] externsInputs = new JSSourceFile[]{\n        JSSourceFile.fromCode(\"externs\", externs)\n    };\n    test(externsInputs, js, expected, error, warning, description);\n  }\n",
        "begin_line": 339,
        "end_line": 346,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs input\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 342,col 5)-(line 344,col 6)",
            "(line 345,col 5)-(line 345,col 67)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSSourceFile[], java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(JSSourceFile[] externs, String js, String expected,\n                   DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    CompilerOptions options = getOptions();\n    // Note that in this context, turning on the checkTypes option won't\n    // actually cause the type check to run.\n    options.checkTypes = parseTypeInfo;\n    compiler.init(externs, new JSSourceFile[] {\n        JSSourceFile.fromCode(\"testcode\", js) }, options);\n\n    BaseJSTypeTestCase.addNativeProperties(compiler.getTypeRegistry());\n\n    test(compiler, new String[] { expected }, error, warning, description);\n  }\n",
        "begin_line": 362,
        "end_line": 378,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param externs Externs inputs\n   * @param js Input\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 365,col 5)-(line 365,col 41)",
            "(line 366,col 5)-(line 366,col 28)",
            "(line 368,col 5)-(line 368,col 43)",
            "(line 371,col 5)-(line 371,col 39)",
            "(line 372,col 5)-(line 373,col 58)",
            "(line 375,col 5)-(line 375,col 71)",
            "(line 377,col 5)-(line 377,col 75)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[])",
        "snippet": "  public void test(String[] js, String[] expected) {\n    test(js, expected, null);\n  }\n",
        "begin_line": 386,
        "end_line": 388,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   ",
        "child_ranges": [
            "(line 387,col 5)-(line 387,col 29)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error) {\n    test(js, expected, error, null);\n  }\n",
        "begin_line": 398,
        "end_line": 400,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 399,col 5)-(line 399,col 36)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error,\n                   DiagnosticType warning) {\n    test(js, expected, error, warning, null);\n  }\n",
        "begin_line": 412,
        "end_line": 415,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 414,col 5)-(line 414,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(java.lang.String[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void test(String[] js, String[] expected, DiagnosticType error,\n                   DiagnosticType warning, String description) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    JSSourceFile[] inputs = new JSSourceFile[js.length];\n    for (int i = 0; i < js.length; i++) {\n      inputs[i] = JSSourceFile.fromCode(\"input\" + i, js[i]);\n    }\n    compiler.init(externsInputs, inputs, getOptions());\n    test(compiler, expected, error, warning, description);\n  }\n",
        "begin_line": 430,
        "end_line": 441,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param js Inputs\n   * @param expected Expected JS output\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 432,col 5)-(line 432,col 41)",
            "(line 433,col 5)-(line 433,col 28)",
            "(line 435,col 5)-(line 435,col 56)",
            "(line 436,col 5)-(line 438,col 5)",
            "(line 439,col 5)-(line 439,col 55)",
            "(line 440,col 5)-(line 440,col 58)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[])",
        "snippet": "  public void test(JSModule[] modules, String[] expected) {\n    test(modules, expected, null);\n  }\n",
        "begin_line": 449,
        "end_line": 451,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   ",
        "child_ranges": [
            "(line 450,col 5)-(line 450,col 34)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(JSModule[] modules, String[] expected,\n      DiagnosticType error) {\n    test(modules, expected, error, null);\n  }\n",
        "begin_line": 461,
        "end_line": 464,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output,\n   * or that an expected error is encountered.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 463,col 5)-(line 463,col 41)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.JSModule[], java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void test(JSModule[] modules, String[] expected,\n                   DiagnosticType error, DiagnosticType warning) {\n    Compiler compiler = createCompiler();\n    lastCompiler = compiler;\n\n    compiler.init(externsInputs, modules, getOptions());\n    test(compiler, expected, error, warning);\n  }\n",
        "begin_line": 476,
        "end_line": 483,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param modules Module inputs\n   * @param expected Expected JS outputs (one per module)\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 478,col 5)-(line 478,col 41)",
            "(line 479,col 5)-(line 479,col 28)",
            "(line 481,col 5)-(line 481,col 56)",
            "(line 482,col 5)-(line 482,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String)",
        "snippet": "  public void testSame(String js) {\n    test(js, js);\n  }\n",
        "begin_line": 490,
        "end_line": 492,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input.\n   *\n   * @param js Input and output\n   ",
        "child_ranges": [
            "(line 491,col 5)-(line 491,col 17)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String js, DiagnosticType warning) {\n    test(js, js, null, warning);\n  }\n",
        "begin_line": 501,
        "end_line": 503,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 502,col 5)-(line 502,col 32)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, com.google.javascript.jscomp.DiagnosticType, boolean)",
        "snippet": "  public void testSame(String js, DiagnosticType diag, boolean error) {\n    if (error) {\n      test(js, js, diag);\n    } else {\n      test(js, js, null, diag);\n    }\n  }\n",
        "begin_line": 513,
        "end_line": 519,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param js Input and output\n   * @param diag Expected error or warning, or null if none is expected\n   * @param error true if diag is an error, false if it is a warning\n   ",
        "child_ranges": [
            "(line 514,col 5)-(line 518,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String externs, String js, DiagnosticType warning) {\n    testSame(externs, js, warning, null);\n  }\n",
        "begin_line": 529,
        "end_line": 531,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param externs Externs input\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 530,col 5)-(line 530,col 41)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, boolean)",
        "snippet": "  public void testSame(\n      String externs, String js, DiagnosticType diag, boolean error) {\n    if (error) {\n      test(externs, js, js, diag, null);\n    } else {\n      test(externs, js, js, null, diag);\n    }\n  }\n",
        "begin_line": 542,
        "end_line": 549,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning is issued.\n   *\n   * @param externs Externs input\n   * @param js Input and output\n   * @param diag Expected error or warning, or null if none is expected\n   * @param error true if diag is an error, false if it is a warning\n   ",
        "child_ranges": [
            "(line 544,col 5)-(line 548,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String, java.lang.String, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  public void testSame(String externs, String js, DiagnosticType warning,\n                       String description) {\n    JSSourceFile[] externsInputs = new JSSourceFile[]{\n        JSSourceFile.fromCode(\"externs\", externs)\n    };\n    test(externsInputs, js, js, null, warning, description);\n  }\n",
        "begin_line": 562,
        "end_line": 568,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input\n   * and (optionally) that an expected warning and description is issued.\n   *\n   * @param externs Externs input\n   * @param js Input and output\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 564,col 5)-(line 566,col 6)",
            "(line 567,col 5)-(line 567,col 60)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[])",
        "snippet": "  public void testSame(String[] js) {\n    test(js, js);\n  }\n",
        "begin_line": 575,
        "end_line": 577,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input.\n   *\n   * @param js Inputs and outputs\n   ",
        "child_ranges": [
            "(line 576,col 5)-(line 576,col 17)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String[] js, DiagnosticType error) {\n    test(js, js, error);\n  }\n",
        "begin_line": 586,
        "end_line": 588,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input,\n   * and emits the given error.\n   *\n   * @param js Inputs and outputs\n   * @param error Expected error, or null if no error is expected\n   ",
        "child_ranges": [
            "(line 587,col 5)-(line 587,col 24)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(String[] js, DiagnosticType error, DiagnosticType warning) {\n    test(js, js, error, warning);\n  }\n",
        "begin_line": 598,
        "end_line": 600,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as its input,\n   * and emits the given error and warning.\n   *\n   * @param js Inputs and outputs\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 599,col 5)-(line 599,col 33)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(com.google.javascript.jscomp.JSModule[])",
        "snippet": "  public void testSame(JSModule[] modules) {\n    testSame(modules, null);\n  }\n",
        "begin_line": 607,
        "end_line": 609,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as the input.\n   *\n   * @param modules Module inputs\n   ",
        "child_ranges": [
            "(line 608,col 5)-(line 608,col 28)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.testSame(com.google.javascript.jscomp.JSModule[], com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  public void testSame(JSModule[] modules, DiagnosticType warning) {\n    try {\n      String[] expected = new String[modules.length];\n      for (int i = 0; i < modules.length; i++) {\n        expected[i] = \"\";\n        for (CompilerInput input : modules[i].getInputs()) {\n          expected[i] += input.getSourceFile().getCode();\n        }\n      }\n      test(modules, expected, null, warning);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n",
        "begin_line": 617,
        "end_line": 630,
        "comment": "\n   * Verifies that the compiler pass's JS output is the same as the input.\n   *\n   * @param modules Module inputs\n   * @param warning A warning, or null for no expected warning.\n   ",
        "child_ranges": [
            "(line 618,col 5)-(line 629,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.Compiler, java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  protected void test(Compiler compiler, String[] expected,\n                      DiagnosticType error, DiagnosticType warning) {\n    test(compiler, expected, error, warning, null);\n  }\n",
        "begin_line": 643,
        "end_line": 646,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param compiler A compiler that has been initialized via\n   *     {@link Compiler#init}\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   ",
        "child_ranges": [
            "(line 645,col 5)-(line 645,col 51)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.test(com.google.javascript.jscomp.Compiler, java.lang.String[], com.google.javascript.jscomp.DiagnosticType, com.google.javascript.jscomp.DiagnosticType, java.lang.String)",
        "snippet": "  private void test(Compiler compiler, String[] expected,\n                    DiagnosticType error, DiagnosticType warning,\n                    String description) {\n    RecentChange recentChange = new RecentChange();\n    compiler.addChangeHandler(recentChange);\n\n    Node root = compiler.parseInputs();\n    assertTrue(\"Unexpected parse error(s): \" +\n        Joiner.on(\"\\n\").join(compiler.getErrors()), root != null);\n\n    Node externsRoot = root.getFirstChild();\n    Node mainRoot = root.getLastChild();\n\n    // Save the tree for later comparison.\n    Node rootClone = root.cloneTree();\n    Node externsRootClone = rootClone.getFirstChild();\n    Node mainRootClone = rootClone.getLastChild();\n\n    int numRepetitions = getNumRepetitions();\n    ErrorManager[] errorManagers = new ErrorManager[numRepetitions];\n    int aggregateWarningCount = 0;\n    List<JSError> aggregateWarnings = Lists.newArrayList();\n    boolean hasCodeChanged = false;\n\n    assertFalse(\"Code should not change before processing\",\n        recentChange.hasCodeChanged());\n\n    for (int i = 0; i < numRepetitions; ++i) {\n      if (compiler.getErrorCount() == 0) {\n        errorManagers[i] = new BlackHoleErrorManager(compiler);\n\n        // Only run the type checking pass once, if asked.\n        // Running it twice can cause unpredictable behavior because duplicate\n        // objects for the same type are created, and the type system\n        // uses reference equality to compare many types.\n        if (typeCheckEnabled && i == 0) {\n          TypeCheck check = createTypeCheck(compiler, typeCheckLevel);\n          check.processForTesting(externsRoot, mainRoot);\n        }\n\n        // Only run the normalize pass once, if asked.\n        if (normalizeEnabled && i == 0) {\n          normalizeActualCode(compiler, externsRoot, mainRoot);\n        }\n\n        if (markNoSideEffects && i == 0) {\n          MarkNoSideEffectCalls mark = new MarkNoSideEffectCalls(compiler);\n          mark.process(externsRoot, mainRoot);\n        }\n\n        recentChange.reset();\n\n        getProcessor(compiler).process(externsRoot, mainRoot);\n        if (checkLineNumbers) {\n          (new LineNumberCheck(compiler)).process(externsRoot, mainRoot);\n        }\n\n        hasCodeChanged = hasCodeChanged || recentChange.hasCodeChanged();\n        aggregateWarningCount += errorManagers[i].getWarningCount();\n        aggregateWarnings.addAll(Lists.newArrayList(compiler.getWarnings()));\n\n        if (normalizeEnabled) {\n          boolean verifyDeclaredConstants = true;\n          new Normalize.VerifyConstants(compiler, verifyDeclaredConstants)\n              .process(externsRoot, mainRoot);\n        }\n      }\n    }\n\n    if (error == null) {\n      assertEquals(\n          \"Unexpected error(s): \" + Joiner.on(\"\\n\").join(compiler.getErrors()),\n          0, compiler.getErrorCount());\n\n      // Verify the symbol table.\n      ErrorManager symbolTableErrorManager =\n          new BlackHoleErrorManager(compiler);\n      Node expectedRoot = parseExpectedJs(expected);\n      expectedRoot.detachFromParent();\n\n      JSError[] stErrors = symbolTableErrorManager.getErrors();\n      if (expectedSymbolTableError != null) {\n        assertEquals(\"There should be one error.\", 1, stErrors.length);\n        assertEquals(expectedSymbolTableError, stErrors[0].getType());\n      } else {\n        assertEquals(\"Unexpected symbol table error(s): \" +\n            Joiner.on(\"\\n\").join(stErrors),\n            0, stErrors.length);\n      }\n\n      if (warning == null) {\n        assertEquals(\n            \"Unexpected warning(s): \" + Joiner.on(\"\\n\").join(aggregateWarnings),\n            0, aggregateWarningCount);\n      } else {\n        assertEquals(\"There should be one warning, repeated \" + numRepetitions +\n            \" time(s).\", numRepetitions, aggregateWarningCount);\n        for (int i = 0; i < numRepetitions; ++i) {\n          JSError[] warnings = errorManagers[i].getWarnings();\n          JSError actual = warnings[0];\n          assertEquals(warning, actual.getType());\n\n          // Make sure that source information is always provided.\n          if (!allowSourcelessWarnings) {\n            assertTrue(\"Missing source file name in warning\",\n                actual.sourceName != null && !actual.sourceName.isEmpty());\n            assertTrue(\"Missing line number in warning\",\n                -1 != actual.lineNumber);\n            assertTrue(\"Missing char number in warning\",\n                -1 != actual.getCharno());\n          }\n\n          if (description != null) {\n            assertEquals(description, actual.description);\n          }\n        }\n      }\n\n      if (normalizeEnabled) {\n        normalizeActualCode(compiler, externsRootClone, mainRootClone);\n      }\n\n      if (mainRootClone.checkTreeEqualsSilent(mainRoot)) {\n        assertFalse(\n            \"compiler.reportCodeChange() was called \" +\n            \"even though nothing changed\",\n            hasCodeChanged);\n      } else {\n        assertTrue(\"compiler.reportCodeChange() should have been called\",\n            hasCodeChanged);\n      }\n\n      if (compareAsTree) {\n        String explanation = expectedRoot.checkTreeEquals(mainRoot);\n        assertNull(\"\\nExpected: \" + compiler.toSource(expectedRoot) +\n            \"\\nResult: \" + compiler.toSource(mainRoot) +\n            \"\\n\" + explanation, explanation);\n      } else if (expected != null) {\n        assertEquals(\n            Joiner.on(\"\").join(expected), compiler.toSource(mainRoot));\n      }\n\n      // Verify normalization is not invalidated.\n      Node normalizeCheckRootClone = root.cloneTree();\n      Node normalizeCheckExternsRootClone = root.getFirstChild();\n      Node normalizeCheckMainRootClone = root.getLastChild();\n      new PrepareAst(compiler).process(\n          normalizeCheckExternsRootClone, normalizeCheckMainRootClone);\n      String explanation =\n          normalizeCheckMainRootClone.checkTreeEquals(mainRoot);\n      assertNull(\"Node structure normalization invalidated.\\nExpected: \" +\n          compiler.toSource(normalizeCheckMainRootClone) +\n          \"\\nResult: \" + compiler.toSource(mainRoot) +\n          \"\\n\" + explanation, explanation);\n\n      // TODO(johnlenz): enable this for most test cases.\n      // Currently, this invalidates test for while-loops, for-loop\n      // initializers, and other naming.  However, a set of code\n      // (FoldConstants, etc) runs before the Normalize pass, so this can't be\n      // force on everywhere.\n      if (normalizeEnabled) {\n        new Normalize(compiler, true).process(\n            normalizeCheckExternsRootClone, normalizeCheckMainRootClone);\n        explanation =  normalizeCheckMainRootClone.checkTreeEquals(mainRoot);\n        assertNull(\"Normalization invalidated.\\nExpected: \" +\n            compiler.toSource(normalizeCheckMainRootClone) +\n            \"\\nResult: \" + compiler.toSource(mainRoot) +\n            \"\\n\" + explanation, explanation);\n      }\n    } else {\n      String errors = \"\";\n      for (JSError actualError : compiler.getErrors()) {\n        errors += actualError.description + \"\\n\";\n      }\n      assertEquals(\"There should be one error. \" + errors,\n          1, compiler.getErrorCount());\n      assertEquals(errors, error, compiler.getErrors()[0].getType());\n\n      if (warning != null) {\n        String warnings = \"\";\n        for (JSError actualError : compiler.getWarnings()) {\n          warnings += actualError.description + \"\\n\";\n        }\n        assertEquals(\"There should be one warning. \" + warnings,\n            1, compiler.getWarningCount());\n        assertEquals(warnings, warning, compiler.getWarnings()[0].getType());\n      }\n    }\n  }\n",
        "begin_line": 663,
        "end_line": 851,
        "comment": "\n   * Verifies that the compiler pass's JS output matches the expected output\n   * and (optionally) that an expected warning is issued. Or, if an error is\n   * expected, this method just verifies that the error is encountered.\n   *\n   * @param compiler A compiler that has been initialized via\n   *     {@link Compiler#init}\n   * @param expected Expected output, or null if an error is expected\n   * @param error Expected error, or null if no error is expected\n   * @param warning Expected warning, or null if no warning is expected\n   * @param description The description of the expected warning,\n   *      or null if no warning is expected or if the warning's description\n   *      should not be examined\n   ",
        "child_ranges": [
            "(line 666,col 5)-(line 666,col 51)",
            "(line 667,col 5)-(line 667,col 44)",
            "(line 669,col 5)-(line 669,col 39)",
            "(line 670,col 5)-(line 671,col 66)",
            "(line 673,col 5)-(line 673,col 44)",
            "(line 674,col 5)-(line 674,col 40)",
            "(line 677,col 5)-(line 677,col 38)",
            "(line 678,col 5)-(line 678,col 54)",
            "(line 679,col 5)-(line 679,col 50)",
            "(line 681,col 5)-(line 681,col 45)",
            "(line 682,col 5)-(line 682,col 68)",
            "(line 683,col 5)-(line 683,col 34)",
            "(line 684,col 5)-(line 684,col 59)",
            "(line 685,col 5)-(line 685,col 35)",
            "(line 687,col 5)-(line 688,col 39)",
            "(line 690,col 5)-(line 730,col 5)",
            "(line 732,col 5)-(line 850,col 5)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.normalizeActualCode(com.google.javascript.jscomp.Compiler, com.google.javascript.rhino.Node, com.google.javascript.rhino.Node)",
        "snippet": "  private void normalizeActualCode(\n      Compiler compiler, Node externsRoot, Node mainRoot) {\n    Normalize normalize = new Normalize(compiler, false);\n    normalize.process(externsRoot, mainRoot);\n  }\n",
        "begin_line": 853,
        "end_line": 857,
        "comment": "",
        "child_ranges": [
            "(line 855,col 5)-(line 855,col 57)",
            "(line 856,col 5)-(line 856,col 45)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.parseExpectedJs(java.lang.String[])",
        "snippet": "  protected Node parseExpectedJs(String[] expected) {\n    Compiler compiler = createCompiler();\n    JSSourceFile[] inputs = new JSSourceFile[expected.length];\n    for (int i = 0; i < expected.length; i++) {\n      inputs[i] = JSSourceFile.fromCode(\"expected\" + i, expected[i]);\n    }\n    compiler.init(externsInputs, inputs, getOptions());\n    Node root = compiler.parseInputs();\n    assertTrue(\"Unexpected parse error(s): \" +\n        Joiner.on(\"\\n\").join(compiler.getErrors()), root != null);\n    Node externsRoot = root.getFirstChild();\n    Node mainRoot = externsRoot.getNext();\n    // Only run the normalize pass, if asked.\n    if (normalizeEnabled && normalizeExpected && !compiler.hasErrors()) {\n      Normalize normalize = new Normalize(compiler, false);\n      normalize.process(externsRoot, mainRoot);\n    }\n    return mainRoot;\n  }\n",
        "begin_line": 862,
        "end_line": 880,
        "comment": "\n   * Parses expected js inputs and returns the root of the parse tree.\n   ",
        "child_ranges": [
            "(line 863,col 5)-(line 863,col 41)",
            "(line 864,col 5)-(line 864,col 62)",
            "(line 865,col 5)-(line 867,col 5)",
            "(line 868,col 5)-(line 868,col 55)",
            "(line 869,col 5)-(line 869,col 39)",
            "(line 870,col 5)-(line 871,col 66)",
            "(line 872,col 5)-(line 872,col 44)",
            "(line 873,col 5)-(line 873,col 42)",
            "(line 875,col 5)-(line 878,col 5)",
            "(line 879,col 5)-(line 879,col 20)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.parseExpectedJs(java.lang.String)",
        "snippet": "  protected Node parseExpectedJs(String expected) {\n    return parseExpectedJs(new String[] {expected});\n  }\n",
        "begin_line": 882,
        "end_line": 884,
        "comment": "",
        "child_ranges": [
            "(line 883,col 5)-(line 883,col 52)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleChain(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleChain(String... inputs) {\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[i - 1]);\n    }\n    return modules;\n  }\n",
        "begin_line": 890,
        "end_line": 896,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that each module\n   * depends on the module before it.\n   ",
        "child_ranges": [
            "(line 891,col 5)-(line 891,col 47)",
            "(line 892,col 5)-(line 894,col 5)",
            "(line 895,col 5)-(line 895,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleStar(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleStar(String... inputs) {\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[0]);\n    }\n    return modules;\n  }\n",
        "begin_line": 902,
        "end_line": 908,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that each module\n   * depends on the first module.\n   ",
        "child_ranges": [
            "(line 903,col 5)-(line 903,col 47)",
            "(line 904,col 5)-(line 906,col 5)",
            "(line 907,col 5)-(line 907,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleBush(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleBush(String ... inputs) {\n    Preconditions.checkState(inputs.length > 2);\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[i == 1 ? 0 : 1]);\n    }\n    return modules;\n  }\n",
        "begin_line": 915,
        "end_line": 922,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that modules\n   * form a bush formation. In a bush formation, module 2 depends\n   * on module 1, and all other modules depend on module 2.\n   ",
        "child_ranges": [
            "(line 916,col 5)-(line 916,col 48)",
            "(line 917,col 5)-(line 917,col 47)",
            "(line 918,col 5)-(line 920,col 5)",
            "(line 921,col 5)-(line 921,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModuleTree(java.lang.String...)",
        "snippet": "  static JSModule[] createModuleTree(String ... inputs) {\n    JSModule[] modules = createModules(inputs);\n    for (int i = 1; i < modules.length; i++) {\n      modules[i].addDependency(modules[(i - 1) / 2]);\n    }\n    return modules;\n  }\n",
        "begin_line": 929,
        "end_line": 935,
        "comment": "\n   * Generates a list of modules from a list of inputs, such that modules\n   * form a tree formation. In a tree formation, module N depends on\n   * module `floor(N/2)`, So the modules form a balanced binary tree.\n   ",
        "child_ranges": [
            "(line 930,col 5)-(line 930,col 47)",
            "(line 931,col 5)-(line 933,col 5)",
            "(line 934,col 5)-(line 934,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createModules(java.lang.String...)",
        "snippet": "  static JSModule[] createModules(String... inputs) {\n    JSModule[] modules = new JSModule[inputs.length];\n    for (int i = 0; i < inputs.length; i++) {\n      JSModule module = modules[i] = new JSModule(\"m\" + i);\n      module.add(JSSourceFile.fromCode(\"i\" + i, inputs[i]));\n    }\n    return modules;\n  }\n",
        "begin_line": 941,
        "end_line": 948,
        "comment": "\n   * Generates a list of modules from a list of inputs. Does not generate any\n   * dependencies between the modules.\n   ",
        "child_ranges": [
            "(line 942,col 5)-(line 942,col 53)",
            "(line 943,col 5)-(line 946,col 5)",
            "(line 947,col 5)-(line 947,col 19)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.BlackHoleErrorManager(com.google.javascript.jscomp.Compiler)",
        "snippet": "    private BlackHoleErrorManager(Compiler compiler) {\n      compiler.setErrorManager(this);\n    }\n",
        "begin_line": 951,
        "end_line": 953,
        "comment": "",
        "child_ranges": [
            "(line 952,col 7)-(line 952,col 37)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.println(com.google.javascript.jscomp.CheckLevel, com.google.javascript.jscomp.JSError)",
        "snippet": "    @Override\n    public void println(CheckLevel level, JSError error) {}\n",
        "begin_line": 955,
        "end_line": 956,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.BlackHoleErrorManager.printSummary()",
        "snippet": "    @Override\n    public void printSummary() {}\n",
        "begin_line": 958,
        "end_line": 959,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.createCompiler()",
        "snippet": "  Compiler createCompiler() {\n    Compiler compiler = new Compiler();\n    return compiler;\n  }\n",
        "begin_line": 962,
        "end_line": 965,
        "comment": "",
        "child_ranges": [
            "(line 963,col 5)-(line 963,col 39)",
            "(line 964,col 5)-(line 964,col 20)"
        ]
    },
    {
        "class_name": "com.google.javascript.jscomp.CompilerTestCase",
        "child_classes": [
            "com.google.javascript.jscomp.CollapsePropertiesTest"
        ],
        "src_path": "test/com/google/javascript/jscomp/CompilerTestCase.java",
        "signature": "com.google.javascript.jscomp.CompilerTestCase.setExpectedSymbolTableError(com.google.javascript.jscomp.DiagnosticType)",
        "snippet": "  protected void setExpectedSymbolTableError(DiagnosticType type) {\n    this.expectedSymbolTableError = type;\n  }\n",
        "begin_line": 967,
        "end_line": 969,
        "comment": "",
        "child_ranges": [
            "(line 968,col 5)-(line 968,col 41)"
        ]
    }
]