[
    {
        "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
        "src_path": "source/org/jfree/chart/plot/DatasetRenderingOrder.java",
        "signature": "org.jfree.chart.plot.DatasetRenderingOrder.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -600593412366385072L;    ",
        "begin_line": 55,
        "end_line": 55,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
        "src_path": "source/org/jfree/chart/plot/DatasetRenderingOrder.java",
        "signature": "org.jfree.chart.plot.DatasetRenderingOrder.FORWARD",
        "snippet": "    public static final DatasetRenderingOrder FORWARD\n        = new DatasetRenderingOrder(\"DatasetRenderingOrder.FORWARD\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " \r\n     * Render datasets in the order 0, 1, 2, ..., N-1, where N is the number \r\n     * of datasets. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
        "src_path": "source/org/jfree/chart/plot/DatasetRenderingOrder.java",
        "signature": "org.jfree.chart.plot.DatasetRenderingOrder.REVERSE",
        "snippet": "    public static final DatasetRenderingOrder REVERSE\n        = new DatasetRenderingOrder(\"DatasetRenderingOrder.REVERSE\");",
        "begin_line": 68,
        "end_line": 69,
        "comment": " \r\n     * Render datasets in the order N-1, N-2, ..., 2, 1, 0, where N is the \r\n     * number of datasets. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.DatasetRenderingOrder",
        "src_path": "source/org/jfree/chart/plot/DatasetRenderingOrder.java",
        "signature": "org.jfree.chart.plot.DatasetRenderingOrder.name",
        "snippet": "    private String name;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.data.general.DatasetChangeEvent",
        "src_path": "source/org/jfree/data/general/DatasetChangeEvent.java",
        "signature": "org.jfree.data.general.DatasetChangeEvent.dataset",
        "snippet": "    private Dataset dataset;",
        "begin_line": 58,
        "end_line": 58,
        "comment": "\r\n     * The dataset that generated the change event.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3045058380983401544L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.TOP_LEFT",
        "snippet": "    public static final TextBlockAnchor TOP_LEFT \n            = new TextBlockAnchor(\"TextBlockAnchor.TOP_LEFT\");",
        "begin_line": 57,
        "end_line": 58,
        "comment": " Top/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.TOP_CENTER",
        "snippet": "    public static final TextBlockAnchor TOP_CENTER = new TextBlockAnchor(\n            \"TextBlockAnchor.TOP_CENTER\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " Top/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.TOP_RIGHT",
        "snippet": "    public static final TextBlockAnchor TOP_RIGHT = new TextBlockAnchor(\n           \"TextBlockAnchor.TOP_RIGHT\");",
        "begin_line": 65,
        "end_line": 66,
        "comment": " Top/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.CENTER_LEFT",
        "snippet": "    public static final TextBlockAnchor CENTER_LEFT = new TextBlockAnchor(\n            \"TextBlockAnchor.CENTER_LEFT\");",
        "begin_line": 69,
        "end_line": 70,
        "comment": " Middle/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.CENTER",
        "snippet": "    public static final TextBlockAnchor CENTER = new TextBlockAnchor(\n            \"TextBlockAnchor.CENTER\");",
        "begin_line": 73,
        "end_line": 74,
        "comment": " Middle/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.CENTER_RIGHT",
        "snippet": "    public static final TextBlockAnchor CENTER_RIGHT = new TextBlockAnchor(\n            \"TextBlockAnchor.CENTER_RIGHT\");",
        "begin_line": 77,
        "end_line": 78,
        "comment": " Middle/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.BOTTOM_LEFT",
        "snippet": "    public static final TextBlockAnchor BOTTOM_LEFT \n        = new TextBlockAnchor(\"TextBlockAnchor.BOTTOM_LEFT\");",
        "begin_line": 81,
        "end_line": 82,
        "comment": " Bottom/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.BOTTOM_CENTER",
        "snippet": "    public static final TextBlockAnchor BOTTOM_CENTER \n            = new TextBlockAnchor(\"TextBlockAnchor.BOTTOM_CENTER\");",
        "begin_line": 85,
        "end_line": 86,
        "comment": " Bottom/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.BOTTOM_RIGHT",
        "snippet": "    public static final TextBlockAnchor BOTTOM_RIGHT \n            = new TextBlockAnchor(\"TextBlockAnchor.BOTTOM_RIGHT\");",
        "begin_line": 89,
        "end_line": 90,
        "comment": " Bottom/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextBlockAnchor",
        "src_path": "source/org/jfree/chart/text/TextBlockAnchor.java",
        "signature": "org.jfree.chart.text.TextBlockAnchor.name",
        "snippet": "    private String name;",
        "begin_line": 93,
        "end_line": 93,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2604142742210173810L;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.START",
        "snippet": "    public static final CategoryAnchor START \n        = new CategoryAnchor(\"CategoryAnchor.START\");",
        "begin_line": 56,
        "end_line": 57,
        "comment": " Start of period. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.MIDDLE",
        "snippet": "    public static final CategoryAnchor MIDDLE \n        = new CategoryAnchor(\"CategoryAnchor.MIDDLE\");",
        "begin_line": 60,
        "end_line": 61,
        "comment": " Middle of period. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.END",
        "snippet": "    public static final CategoryAnchor END \n        = new CategoryAnchor(\"CategoryAnchor.END\");",
        "begin_line": 64,
        "end_line": 65,
        "comment": " End of period. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAnchor",
        "src_path": "source/org/jfree/chart/axis/CategoryAnchor.java",
        "signature": "org.jfree.chart.axis.CategoryAnchor.name",
        "snippet": "    private String name;",
        "begin_line": 68,
        "end_line": 68,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberTickUnit",
        "src_path": "source/org/jfree/chart/axis/NumberTickUnit.java",
        "signature": "org.jfree.chart.axis.NumberTickUnit.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 3849459506627654442L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberTickUnit",
        "src_path": "source/org/jfree/chart/axis/NumberTickUnit.java",
        "signature": "org.jfree.chart.axis.NumberTickUnit.formatter",
        "snippet": "    private NumberFormat formatter;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " A formatter for the tick unit. "
    },
    {
        "class_name": "org.jfree.chart.plot.ValueMarker",
        "src_path": "source/org/jfree/chart/plot/ValueMarker.java",
        "signature": "org.jfree.chart.plot.ValueMarker.value",
        "snippet": "    private double value;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " The value. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3276922179323563410L;",
        "begin_line": 58,
        "end_line": 58,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.TOP_OR_LEFT",
        "snippet": "    public static final AxisLocation TOP_OR_LEFT = new AxisLocation(\n            \"AxisLocation.TOP_OR_LEFT\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " Axis at the top or left. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.TOP_OR_RIGHT",
        "snippet": "    public static final AxisLocation TOP_OR_RIGHT = new AxisLocation(\n            \"AxisLocation.TOP_OR_RIGHT\");",
        "begin_line": 65,
        "end_line": 66,
        "comment": " Axis at the top or right. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.BOTTOM_OR_LEFT",
        "snippet": "    public static final AxisLocation BOTTOM_OR_LEFT = new AxisLocation(\n            \"AxisLocation.BOTTOM_OR_LEFT\");",
        "begin_line": 69,
        "end_line": 70,
        "comment": " Axis at the bottom or left. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.BOTTOM_OR_RIGHT",
        "snippet": "    public static final AxisLocation BOTTOM_OR_RIGHT = new AxisLocation(\n            \"AxisLocation.BOTTOM_OR_RIGHT\");",
        "begin_line": 73,
        "end_line": 74,
        "comment": " Axis at the bottom or right. "
    },
    {
        "class_name": "org.jfree.chart.axis.AxisLocation",
        "src_path": "source/org/jfree/chart/axis/AxisLocation.java",
        "signature": "org.jfree.chart.axis.AxisLocation.name",
        "snippet": "    private String name;",
        "begin_line": 77,
        "end_line": 77,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8831571430103671324L;",
        "begin_line": 190,
        "end_line": 190,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.ZERO",
        "snippet": "    public static final Number ZERO = new Integer(0);",
        "begin_line": 193,
        "end_line": 193,
        "comment": " Useful constant representing zero. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_INSETS",
        "snippet": "    public static final RectangleInsets DEFAULT_INSETS \n            = new RectangleInsets(4.0, 8.0, 4.0, 8.0);",
        "begin_line": 196,
        "end_line": 197,
        "comment": " The default insets. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE",
        "snippet": "    public static final Stroke DEFAULT_OUTLINE_STROKE = new BasicStroke(0.5f);",
        "begin_line": 200,
        "end_line": 200,
        "comment": " The default outline stroke. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT",
        "snippet": "    public static final Paint DEFAULT_OUTLINE_PAINT = Color.gray;",
        "begin_line": 203,
        "end_line": 203,
        "comment": " The default outline color. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_FOREGROUND_ALPHA",
        "snippet": "    public static final float DEFAULT_FOREGROUND_ALPHA = 1.0f;",
        "begin_line": 206,
        "end_line": 206,
        "comment": " The default foreground alpha transparency. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_ALPHA",
        "snippet": "    public static final float DEFAULT_BACKGROUND_ALPHA = 1.0f;",
        "begin_line": 209,
        "end_line": 209,
        "comment": " The default background alpha transparency. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT",
        "snippet": "    public static final Paint DEFAULT_BACKGROUND_PAINT = Color.LIGHT_GRAY;",
        "begin_line": 212,
        "end_line": 212,
        "comment": " The default background color. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.MINIMUM_WIDTH_TO_DRAW",
        "snippet": "    public static final int MINIMUM_WIDTH_TO_DRAW = 10;",
        "begin_line": 215,
        "end_line": 215,
        "comment": " The minimum width at which the plot should be drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.MINIMUM_HEIGHT_TO_DRAW",
        "snippet": "    public static final int MINIMUM_HEIGHT_TO_DRAW = 10;",
        "begin_line": 218,
        "end_line": 218,
        "comment": " The minimum height at which the plot should be drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_BOX",
        "snippet": "    public static final Shape DEFAULT_LEGEND_ITEM_BOX \n        = new Rectangle2D.Double(-4.0, -4.0, 8.0, 8.0);",
        "begin_line": 221,
        "end_line": 222,
        "comment": " A default box shape for legend items. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.DEFAULT_LEGEND_ITEM_CIRCLE",
        "snippet": "    public static final Shape DEFAULT_LEGEND_ITEM_CIRCLE \n        = new Ellipse2D.Double(-4.0, -4.0, 8.0, 8.0);",
        "begin_line": 225,
        "end_line": 226,
        "comment": " A default circle shape for legend items. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.parent",
        "snippet": "    private Plot parent;",
        "begin_line": 229,
        "end_line": 229,
        "comment": " The parent plot (<code>null</code> if this is the root plot). "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.datasetGroup",
        "snippet": "    private DatasetGroup datasetGroup;",
        "begin_line": 232,
        "end_line": 232,
        "comment": " The dataset group (to be used for thread synchronisation). "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessage",
        "snippet": "    private String noDataMessage;",
        "begin_line": 235,
        "end_line": 235,
        "comment": " The message to display if no data is available. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessageFont",
        "snippet": "    private Font noDataMessageFont;",
        "begin_line": 238,
        "end_line": 238,
        "comment": " The font used to display the 'no data' message. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.noDataMessagePaint",
        "snippet": "    private transient Paint noDataMessagePaint;",
        "begin_line": 241,
        "end_line": 241,
        "comment": " The paint used to draw the 'no data' message. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.insets",
        "snippet": "    private RectangleInsets insets;",
        "begin_line": 244,
        "end_line": 244,
        "comment": " Amount of blank space around the plot area. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlineVisible",
        "snippet": "    private boolean outlineVisible;",
        "begin_line": 251,
        "end_line": 251,
        "comment": " \r\n     * A flag that controls whether or not the plot outline is drawn. \r\n     *\r\n     * @since 1.0.6\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlineStroke",
        "snippet": "    private transient Stroke outlineStroke;",
        "begin_line": 254,
        "end_line": 254,
        "comment": " The Stroke used to draw an outline around the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.outlinePaint",
        "snippet": "    private transient Paint outlinePaint;",
        "begin_line": 257,
        "end_line": 257,
        "comment": " The Paint used to draw an outline around the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundPaint",
        "snippet": "    private transient Paint backgroundPaint;",
        "begin_line": 260,
        "end_line": 260,
        "comment": " An optional color used to fill the plot background. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImage",
        "snippet": "    private transient Image backgroundImage;  // not currently serialized",
        "begin_line": 263,
        "end_line": 263,
        "comment": " not currently serialized"
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImageAlignment",
        "snippet": "    private int backgroundImageAlignment = Align.FIT;",
        "begin_line": 266,
        "end_line": 266,
        "comment": " The alignment for the background image. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundImageAlpha",
        "snippet": "    private float backgroundImageAlpha = 0.5f;",
        "begin_line": 269,
        "end_line": 269,
        "comment": " The alpha value used to draw the background image. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.foregroundAlpha",
        "snippet": "    private float foregroundAlpha;",
        "begin_line": 272,
        "end_line": 272,
        "comment": " The alpha-transparency for the plot. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.backgroundAlpha",
        "snippet": "    private float backgroundAlpha;",
        "begin_line": 275,
        "end_line": 275,
        "comment": " The alpha transparency for the background paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.drawingSupplier",
        "snippet": "    private DrawingSupplier drawingSupplier;",
        "begin_line": 278,
        "end_line": 278,
        "comment": " The drawing supplier. "
    },
    {
        "class_name": "org.jfree.chart.plot.Plot",
        "src_path": "source/org/jfree/chart/plot/Plot.java",
        "signature": "org.jfree.chart.plot.Plot.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 281,
        "end_line": 281,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_RED",
        "snippet": "    public static final Color VERY_DARK_RED = new Color(0x80, 0x00, 0x00);",
        "begin_line": 59,
        "end_line": 59,
        "comment": " A very dark red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_RED",
        "snippet": "    public static final Color DARK_RED = new Color(0xc0, 0x00, 0x00);",
        "begin_line": 62,
        "end_line": 62,
        "comment": " A dark red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_RED",
        "snippet": "    public static final Color LIGHT_RED = new Color(0xFF, 0x40, 0x40);",
        "begin_line": 65,
        "end_line": 65,
        "comment": " A light red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_RED",
        "snippet": "    public static final Color VERY_LIGHT_RED = new Color(0xFF, 0x80, 0x80);",
        "begin_line": 68,
        "end_line": 68,
        "comment": " A very light red color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_YELLOW",
        "snippet": "    public static final Color VERY_DARK_YELLOW = new Color(0x80, 0x80, 0x00);",
        "begin_line": 71,
        "end_line": 71,
        "comment": " A very dark yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_YELLOW",
        "snippet": "    public static final Color DARK_YELLOW = new Color(0xC0, 0xC0, 0x00);",
        "begin_line": 74,
        "end_line": 74,
        "comment": " A dark yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_YELLOW",
        "snippet": "    public static final Color LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x40);",
        "begin_line": 77,
        "end_line": 77,
        "comment": " A light yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_YELLOW",
        "snippet": "    public static final Color VERY_LIGHT_YELLOW = new Color(0xFF, 0xFF, 0x80);",
        "begin_line": 80,
        "end_line": 80,
        "comment": " A very light yellow color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_GREEN",
        "snippet": "    public static final Color VERY_DARK_GREEN = new Color(0x00, 0x80, 0x00);",
        "begin_line": 83,
        "end_line": 83,
        "comment": " A very dark green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_GREEN",
        "snippet": "    public static final Color DARK_GREEN = new Color(0x00, 0xC0, 0x00);",
        "begin_line": 86,
        "end_line": 86,
        "comment": " A dark green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_GREEN",
        "snippet": "    public static final Color LIGHT_GREEN = new Color(0x40, 0xFF, 0x40);",
        "begin_line": 89,
        "end_line": 89,
        "comment": " A light green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_GREEN",
        "snippet": "    public static final Color VERY_LIGHT_GREEN = new Color(0x80, 0xFF, 0x80);",
        "begin_line": 92,
        "end_line": 92,
        "comment": " A very light green color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_CYAN",
        "snippet": "    public static final Color VERY_DARK_CYAN = new Color(0x00, 0x80, 0x80);",
        "begin_line": 95,
        "end_line": 95,
        "comment": " A very dark cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_CYAN",
        "snippet": "    public static final Color DARK_CYAN = new Color(0x00, 0xC0, 0xC0);",
        "begin_line": 98,
        "end_line": 98,
        "comment": " A dark cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_CYAN",
        "snippet": "    public static final Color LIGHT_CYAN = new Color(0x40, 0xFF, 0xFF);",
        "begin_line": 101,
        "end_line": 101,
        "comment": " A light cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_CYAN",
        "snippet": "    public static final Color VERY_LIGHT_CYAN = new Color(0x80, 0xFF, 0xFF);",
        "begin_line": 104,
        "end_line": 104,
        "comment": " Aa very light cyan color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_BLUE",
        "snippet": "    public static final Color VERY_DARK_BLUE = new Color(0x00, 0x00, 0x80);",
        "begin_line": 107,
        "end_line": 107,
        "comment": " A very dark blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_BLUE",
        "snippet": "    public static final Color DARK_BLUE = new Color(0x00, 0x00, 0xC0);",
        "begin_line": 110,
        "end_line": 110,
        "comment": " A dark blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_BLUE",
        "snippet": "    public static final Color LIGHT_BLUE = new Color(0x40, 0x40, 0xFF);",
        "begin_line": 113,
        "end_line": 113,
        "comment": " A light blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_BLUE",
        "snippet": "    public static final Color VERY_LIGHT_BLUE = new Color(0x80, 0x80, 0xFF);",
        "begin_line": 116,
        "end_line": 116,
        "comment": " A very light blue color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_DARK_MAGENTA",
        "snippet": "    public static final Color VERY_DARK_MAGENTA = new Color(0x80, 0x00, 0x80);",
        "begin_line": 119,
        "end_line": 119,
        "comment": " A very dark magenta/purple color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.DARK_MAGENTA",
        "snippet": "    public static final Color DARK_MAGENTA = new Color(0xC0, 0x00, 0xC0);",
        "begin_line": 122,
        "end_line": 122,
        "comment": " A dark magenta color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.LIGHT_MAGENTA",
        "snippet": "    public static final Color LIGHT_MAGENTA = new Color(0xFF, 0x40, 0xFF);",
        "begin_line": 125,
        "end_line": 125,
        "comment": " A light magenta color. "
    },
    {
        "class_name": "org.jfree.chart.ChartColor",
        "src_path": "source/org/jfree/chart/ChartColor.java",
        "signature": "org.jfree.chart.ChartColor.VERY_LIGHT_MAGENTA",
        "snippet": "    public static final Color VERY_LIGHT_MAGENTA = new Color(0xFF, 0x80, 0xFF);",
        "begin_line": 128,
        "end_line": 128,
        "comment": " A very light magenta color. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPosition",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPosition.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPosition.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5168681143844183864L;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPosition",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPosition.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPosition.categoryAnchor",
        "snippet": "    private RectangleAnchor categoryAnchor;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " The category anchor point. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPosition",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPosition.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPosition.labelAnchor",
        "snippet": "    private TextBlockAnchor labelAnchor;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " The text block anchor. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPosition",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPosition.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPosition.rotationAnchor",
        "snippet": "    private TextAnchor rotationAnchor;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The rotation anchor. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPosition",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPosition.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPosition.angle",
        "snippet": "    private double angle;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " The rotation angle (in radians). "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPosition",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPosition.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPosition.widthType",
        "snippet": "    private CategoryLabelWidthType widthType;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The width calculation type. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPosition",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPosition.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPosition.widthRatio",
        "snippet": "    private float widthRatio;",
        "begin_line": 84,
        "end_line": 84,
        "comment": " \r\n     * The maximum label width as a percentage of the category space or the \r\n     * range space. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -7339847061039422538L;",
        "begin_line": 80,
        "end_line": 80,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_PAINT_SEQUENCE \n            = ChartColor.createDefaultPaintArray();",
        "begin_line": 83,
        "end_line": 84,
        "comment": " The default fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_OUTLINE_PAINT_SEQUENCE = new Paint[] {\n            Color.lightGray};",
        "begin_line": 87,
        "end_line": 88,
        "comment": " The default outline paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE",
        "snippet": "    public static final Paint[] DEFAULT_FILL_PAINT_SEQUENCE = new Paint[] {\n            Color.white};",
        "begin_line": 91,
        "end_line": 92,
        "comment": " The default fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_STROKE_SEQUENCE",
        "snippet": "    public static final Stroke[] DEFAULT_STROKE_SEQUENCE = new Stroke[] {\n            new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, \n                    BasicStroke.JOIN_BEVEL)};",
        "begin_line": 95,
        "end_line": 97,
        "comment": " The default stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_OUTLINE_STROKE_SEQUENCE",
        "snippet": "    public static final Stroke[] DEFAULT_OUTLINE_STROKE_SEQUENCE \n            = new Stroke[] {new BasicStroke(1.0f, BasicStroke.CAP_SQUARE, \n                    BasicStroke.JOIN_BEVEL)};",
        "begin_line": 100,
        "end_line": 102,
        "comment": " The default outline stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.DEFAULT_SHAPE_SEQUENCE",
        "snippet": "    public static final Shape[] DEFAULT_SHAPE_SEQUENCE \n            = createStandardSeriesShapes();",
        "begin_line": 105,
        "end_line": 106,
        "comment": " The default shape sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.paintSequence",
        "snippet": "    private transient Paint[] paintSequence;",
        "begin_line": 109,
        "end_line": 109,
        "comment": " The paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.paintIndex",
        "snippet": "    private int paintIndex;",
        "begin_line": 112,
        "end_line": 112,
        "comment": " The current paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlinePaintSequence",
        "snippet": "    private transient Paint[] outlinePaintSequence;",
        "begin_line": 115,
        "end_line": 115,
        "comment": " The outline paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlinePaintIndex",
        "snippet": "    private int outlinePaintIndex;",
        "begin_line": 118,
        "end_line": 118,
        "comment": " The current outline paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.fillPaintSequence",
        "snippet": "    private transient Paint[] fillPaintSequence;",
        "begin_line": 121,
        "end_line": 121,
        "comment": " The fill paint sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.fillPaintIndex",
        "snippet": "    private int fillPaintIndex;",
        "begin_line": 124,
        "end_line": 124,
        "comment": " The current fill paint index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.strokeSequence",
        "snippet": "    private transient Stroke[] strokeSequence;",
        "begin_line": 127,
        "end_line": 127,
        "comment": " The stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.strokeIndex",
        "snippet": "    private int strokeIndex;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " The current stroke index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlineStrokeSequence",
        "snippet": "    private transient Stroke[] outlineStrokeSequence;",
        "begin_line": 133,
        "end_line": 133,
        "comment": " The outline stroke sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.outlineStrokeIndex",
        "snippet": "    private int outlineStrokeIndex;",
        "begin_line": 136,
        "end_line": 136,
        "comment": " The current outline stroke index. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.shapeSequence",
        "snippet": "    private transient Shape[] shapeSequence;",
        "begin_line": 139,
        "end_line": 139,
        "comment": " The shape sequence. "
    },
    {
        "class_name": "org.jfree.chart.plot.DefaultDrawingSupplier",
        "src_path": "source/org/jfree/chart/plot/DefaultDrawingSupplier.java",
        "signature": "org.jfree.chart.plot.DefaultDrawingSupplier.shapeIndex",
        "snippet": "    private int shapeIndex;",
        "begin_line": 142,
        "end_line": 142,
        "comment": " The current shape index. "
    },
    {
        "class_name": "org.jfree.chart.axis.TickUnit",
        "src_path": "source/org/jfree/chart/axis/TickUnit.java",
        "signature": "org.jfree.chart.axis.TickUnit.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 510179855057013974L;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.TickUnit",
        "src_path": "source/org/jfree/chart/axis/TickUnit.java",
        "signature": "org.jfree.chart.axis.TickUnit.size",
        "snippet": "    private double size;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " The size of the tick unit. "
    },
    {
        "class_name": "org.jfree.chart.axis.TickUnit",
        "src_path": "source/org/jfree/chart/axis/TickUnit.java",
        "signature": "org.jfree.chart.axis.TickUnit.minorTickCount",
        "snippet": "    private int minorTickCount;",
        "begin_line": 76,
        "end_line": 76,
        "comment": "\r\n     * The number of minor ticks.\r\n     * \r\n     * @since 1.0.7\r\n     "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8219158940496719660L;",
        "begin_line": 55,
        "end_line": 55,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.TOP_LEFT",
        "snippet": "    public static final TextAnchor TOP_LEFT = new TextAnchor(\n            \"TextAnchor.TOP_LEFT\");",
        "begin_line": 58,
        "end_line": 59,
        "comment": " Top/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.TOP_CENTER",
        "snippet": "    public static final TextAnchor TOP_CENTER = new TextAnchor(\n            \"TextAnchor.TOP_CENTER\");",
        "begin_line": 62,
        "end_line": 63,
        "comment": " Top/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.TOP_RIGHT",
        "snippet": "    public static final TextAnchor TOP_RIGHT = new TextAnchor(\n            \"TextAnchor.TOP_RIGHT\");",
        "begin_line": 66,
        "end_line": 67,
        "comment": " Top/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_LEFT",
        "snippet": "    public static final TextAnchor HALF_ASCENT_LEFT = new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_LEFT\");",
        "begin_line": 70,
        "end_line": 71,
        "comment": " Half-ascent/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_CENTER",
        "snippet": "    public static final TextAnchor HALF_ASCENT_CENTER = new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_CENTER\");",
        "begin_line": 74,
        "end_line": 75,
        "comment": " Half-ascent/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.HALF_ASCENT_RIGHT",
        "snippet": "    public static final TextAnchor HALF_ASCENT_RIGHT = new TextAnchor(\n            \"TextAnchor.HALF_ASCENT_RIGHT\");",
        "begin_line": 78,
        "end_line": 79,
        "comment": " Half-ascent/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.CENTER_LEFT",
        "snippet": "    public static final TextAnchor CENTER_LEFT = new TextAnchor(\n            \"TextAnchor.CENTER_LEFT\");",
        "begin_line": 82,
        "end_line": 83,
        "comment": " Middle/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.CENTER",
        "snippet": "    public static final TextAnchor CENTER = new TextAnchor(\"TextAnchor.CENTER\");",
        "begin_line": 86,
        "end_line": 86,
        "comment": " Middle/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.CENTER_RIGHT",
        "snippet": "    public static final TextAnchor CENTER_RIGHT = new TextAnchor(\n            \"TextAnchor.CENTER_RIGHT\");",
        "begin_line": 89,
        "end_line": 90,
        "comment": " Middle/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BASELINE_LEFT",
        "snippet": "    public static final TextAnchor BASELINE_LEFT = new TextAnchor(\n            \"TextAnchor.BASELINE_LEFT\");",
        "begin_line": 93,
        "end_line": 94,
        "comment": " Baseline/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BASELINE_CENTER",
        "snippet": "    public static final TextAnchor BASELINE_CENTER = new TextAnchor(\n            \"TextAnchor.BASELINE_CENTER\");",
        "begin_line": 97,
        "end_line": 98,
        "comment": " Baseline/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BASELINE_RIGHT",
        "snippet": "    public static final TextAnchor BASELINE_RIGHT = new TextAnchor(\n            \"TextAnchor.BASELINE_RIGHT\");",
        "begin_line": 101,
        "end_line": 102,
        "comment": " Baseline/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_LEFT",
        "snippet": "    public static final TextAnchor BOTTOM_LEFT = new TextAnchor(\n            \"TextAnchor.BOTTOM_LEFT\");",
        "begin_line": 105,
        "end_line": 106,
        "comment": " Bottom/left. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_CENTER",
        "snippet": "    public static final TextAnchor BOTTOM_CENTER = new TextAnchor(\n            \"TextAnchor.BOTTOM_CENTER\");",
        "begin_line": 109,
        "end_line": 110,
        "comment": " Bottom/center. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.BOTTOM_RIGHT",
        "snippet": "    public static final TextAnchor BOTTOM_RIGHT = new TextAnchor(\n            \"TextAnchor.BOTTOM_RIGHT\");",
        "begin_line": 113,
        "end_line": 114,
        "comment": " Bottom/right. "
    },
    {
        "class_name": "org.jfree.chart.text.TextAnchor",
        "src_path": "source/org/jfree/chart/text/TextAnchor.java",
        "signature": "org.jfree.chart.text.TextAnchor.name",
        "snippet": "    private String name;",
        "begin_line": 117,
        "end_line": 117,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 2805933088476185789L;",
        "begin_line": 139,
        "end_line": 139,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.DEFAULT_AUTO_RANGE_INCLUDES_ZERO",
        "snippet": "    public static final boolean DEFAULT_AUTO_RANGE_INCLUDES_ZERO = true;",
        "begin_line": 142,
        "end_line": 142,
        "comment": " The default value for the autoRangeIncludesZero flag. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.DEFAULT_AUTO_RANGE_STICKY_ZERO",
        "snippet": "    public static final boolean DEFAULT_AUTO_RANGE_STICKY_ZERO = true;",
        "begin_line": 145,
        "end_line": 145,
        "comment": " The default value for the autoRangeStickyZero flag. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.DEFAULT_TICK_UNIT",
        "snippet": "    public static final NumberTickUnit DEFAULT_TICK_UNIT = new NumberTickUnit(\n            1.0, new DecimalFormat(\"0\"));",
        "begin_line": 148,
        "end_line": 149,
        "comment": " The default tick unit. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.DEFAULT_VERTICAL_TICK_LABELS",
        "snippet": "    public static final boolean DEFAULT_VERTICAL_TICK_LABELS = false;",
        "begin_line": 152,
        "end_line": 152,
        "comment": " The default setting for the vertical tick labels flag. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.rangeType",
        "snippet": "    private RangeType rangeType;",
        "begin_line": 158,
        "end_line": 158,
        "comment": " \r\n     * The range type (can be used to force the axis to display only positive\r\n     * values or only negative values).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.autoRangeIncludesZero",
        "snippet": "    private boolean autoRangeIncludesZero;",
        "begin_line": 165,
        "end_line": 165,
        "comment": "\r\n     * A flag that affects the axis range when the range is determined\r\n     * automatically.  If the auto range does NOT include zero and this flag\r\n     * is TRUE, then the range is changed to include zero.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.autoRangeStickyZero",
        "snippet": "    private boolean autoRangeStickyZero;",
        "begin_line": 172,
        "end_line": 172,
        "comment": "\r\n     * A flag that affects the size of the margins added to the axis range when\r\n     * the range is determined automatically.  If the value 0 falls within the\r\n     * margin and this flag is TRUE, then the margin is truncated at zero.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.tickUnit",
        "snippet": "    private NumberTickUnit tickUnit;",
        "begin_line": 175,
        "end_line": 175,
        "comment": " The tick unit for the axis. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.numberFormatOverride",
        "snippet": "    private NumberFormat numberFormatOverride;",
        "begin_line": 178,
        "end_line": 178,
        "comment": " The override number format. "
    },
    {
        "class_name": "org.jfree.chart.axis.NumberAxis",
        "src_path": "source/org/jfree/chart/axis/NumberAxis.java",
        "signature": "org.jfree.chart.axis.NumberAxis.markerBand",
        "snippet": "    private MarkerAxisBand markerBand;",
        "begin_line": 181,
        "end_line": 181,
        "comment": " An optional band for marking regions on the axis. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5886554608114265863L;",
        "begin_line": 134,
        "end_line": 134,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.DEFAULT_AXIS_MARGIN",
        "snippet": "    public static final double DEFAULT_AXIS_MARGIN = 0.05;",
        "begin_line": 139,
        "end_line": 139,
        "comment": " \r\n     * The default margin for the axis (used for both lower and upper margins).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.DEFAULT_CATEGORY_MARGIN",
        "snippet": "    public static final double DEFAULT_CATEGORY_MARGIN = 0.20;",
        "begin_line": 145,
        "end_line": 145,
        "comment": " \r\n     * The default margin between categories (a percentage of the overall axis\r\n     * length). \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.lowerMargin",
        "snippet": "    private double lowerMargin;",
        "begin_line": 148,
        "end_line": 148,
        "comment": " The amount of space reserved at the start of the axis. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.upperMargin",
        "snippet": "    private double upperMargin;",
        "begin_line": 151,
        "end_line": 151,
        "comment": " The amount of space reserved at the end of the axis. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.categoryMargin",
        "snippet": "    private double categoryMargin;",
        "begin_line": 154,
        "end_line": 154,
        "comment": " The amount of space reserved between categories. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.maximumCategoryLabelLines",
        "snippet": "    private int maximumCategoryLabelLines;",
        "begin_line": 157,
        "end_line": 157,
        "comment": " The maximum number of lines for category labels. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.maximumCategoryLabelWidthRatio",
        "snippet": "    private float maximumCategoryLabelWidthRatio;",
        "begin_line": 163,
        "end_line": 163,
        "comment": " \r\n     * A ratio that is multiplied by the width of one category to determine the \r\n     * maximum label width. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.categoryLabelPositionOffset",
        "snippet": "    private int categoryLabelPositionOffset; ",
        "begin_line": 166,
        "end_line": 166,
        "comment": " The category label offset. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.categoryLabelPositions",
        "snippet": "    private CategoryLabelPositions categoryLabelPositions;",
        "begin_line": 172,
        "end_line": 172,
        "comment": " \r\n     * A structure defining the category label positions for each axis \r\n     * location. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.tickLabelFontMap",
        "snippet": "    private Map tickLabelFontMap;",
        "begin_line": 175,
        "end_line": 175,
        "comment": " Storage for tick label font overrides (if any). "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.tickLabelPaintMap",
        "snippet": "    private transient Map tickLabelPaintMap;",
        "begin_line": 178,
        "end_line": 178,
        "comment": " Storage for tick label paint overrides (if any). "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryAxis",
        "src_path": "source/org/jfree/chart/axis/CategoryAxis.java",
        "signature": "org.jfree.chart.axis.CategoryAxis.categoryLabelToolTips",
        "snippet": "    private Map categoryLabelToolTips;",
        "begin_line": 181,
        "end_line": 181,
        "comment": " Storage for the category label tooltips (if any). "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3537691700434728188L;",
        "begin_line": 227,
        "end_line": 227,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_DOMAIN_GRIDLINES_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_DOMAIN_GRIDLINES_VISIBLE = false;",
        "begin_line": 233,
        "end_line": 233,
        "comment": " \r\n     * The default visibility of the grid lines plotted against the domain \r\n     * axis. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_RANGE_GRIDLINES_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_RANGE_GRIDLINES_VISIBLE = true;",
        "begin_line": 239,
        "end_line": 239,
        "comment": " \r\n     * The default visibility of the grid lines plotted against the range \r\n     * axis. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE",
        "snippet": "    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,\n            BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0.0f, new float[] \n            {2.0f, 2.0f}, 0.0f);",
        "begin_line": 242,
        "end_line": 244,
        "comment": " The default grid line stroke. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_PAINT",
        "snippet": "    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.WHITE;",
        "begin_line": 247,
        "end_line": 247,
        "comment": " The default grid line paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_VALUE_LABEL_FONT",
        "snippet": "    public static final Font DEFAULT_VALUE_LABEL_FONT = new Font(\"SansSerif\", \n            Font.PLAIN, 10);",
        "begin_line": 250,
        "end_line": 251,
        "comment": " The default value label font. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;",
        "begin_line": 258,
        "end_line": 258,
        "comment": " \r\n     * The default crosshair visibility. \r\n     * \r\n     * @since 1.0.5\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE",
        "snippet": "    public static final Stroke DEFAULT_CROSSHAIR_STROKE\n            = DEFAULT_GRIDLINE_STROKE;",
        "begin_line": 265,
        "end_line": 266,
        "comment": " \r\n     * The default crosshair stroke. \r\n     * \r\n     * @since 1.0.5\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT",
        "snippet": "    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.blue;",
        "begin_line": 273,
        "end_line": 273,
        "comment": " \r\n     * The default crosshair paint. \r\n     * \r\n     * @since 1.0.5\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.localizationResources",
        "snippet": "    protected static ResourceBundle localizationResources \n            = ResourceBundle.getBundle(\n            \"org.jfree.chart.plot.LocalizationBundle\");",
        "begin_line": 276,
        "end_line": 278,
        "comment": " The resourceBundle for the localization. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.orientation",
        "snippet": "    private PlotOrientation orientation;",
        "begin_line": 281,
        "end_line": 281,
        "comment": " The plot orientation. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.axisOffset",
        "snippet": "    private RectangleInsets axisOffset;",
        "begin_line": 284,
        "end_line": 284,
        "comment": " The offset between the data area and the axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainAxes",
        "snippet": "    private ObjectList domainAxes;",
        "begin_line": 287,
        "end_line": 287,
        "comment": " Storage for the domain axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainAxisLocations",
        "snippet": "    private ObjectList domainAxisLocations;",
        "begin_line": 290,
        "end_line": 290,
        "comment": " Storage for the domain axis locations. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.drawSharedDomainAxis",
        "snippet": "    private boolean drawSharedDomainAxis;",
        "begin_line": 296,
        "end_line": 296,
        "comment": "\r\n     * A flag that controls whether or not the shared domain axis is drawn \r\n     * (only relevant when the plot is being used as a subplot).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeAxes",
        "snippet": "    private ObjectList rangeAxes;",
        "begin_line": 299,
        "end_line": 299,
        "comment": " Storage for the range axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeAxisLocations",
        "snippet": "    private ObjectList rangeAxisLocations;",
        "begin_line": 302,
        "end_line": 302,
        "comment": " Storage for the range axis locations. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.datasets",
        "snippet": "    private ObjectList datasets;",
        "begin_line": 305,
        "end_line": 305,
        "comment": " Storage for the datasets. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.datasetToDomainAxisMap",
        "snippet": "    private ObjectList datasetToDomainAxisMap;",
        "begin_line": 308,
        "end_line": 308,
        "comment": " Storage for keys that map datasets to domain axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.datasetToRangeAxisMap",
        "snippet": "    private ObjectList datasetToRangeAxisMap;",
        "begin_line": 311,
        "end_line": 311,
        "comment": " Storage for keys that map datasets to range axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.renderers",
        "snippet": "    private ObjectList renderers;",
        "begin_line": 314,
        "end_line": 314,
        "comment": " Storage for the renderers. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.renderingOrder",
        "snippet": "    private DatasetRenderingOrder renderingOrder \n            = DatasetRenderingOrder.REVERSE;",
        "begin_line": 317,
        "end_line": 318,
        "comment": " The dataset rendering order. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.columnRenderingOrder",
        "snippet": "    private SortOrder columnRenderingOrder = SortOrder.ASCENDING;",
        "begin_line": 324,
        "end_line": 324,
        "comment": " \r\n     * Controls the order in which the columns are traversed when rendering the \r\n     * data items. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rowRenderingOrder",
        "snippet": "    private SortOrder rowRenderingOrder = SortOrder.ASCENDING;",
        "begin_line": 330,
        "end_line": 330,
        "comment": " \r\n     * Controls the order in which the rows are traversed when rendering the \r\n     * data items. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinesVisible",
        "snippet": "    private boolean domainGridlinesVisible;",
        "begin_line": 336,
        "end_line": 336,
        "comment": " \r\n     * A flag that controls whether the grid-lines for the domain axis are \r\n     * visible. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinePosition",
        "snippet": "    private CategoryAnchor domainGridlinePosition;",
        "begin_line": 339,
        "end_line": 339,
        "comment": " The position of the domain gridlines relative to the category. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlineStroke",
        "snippet": "    private transient Stroke domainGridlineStroke;",
        "begin_line": 342,
        "end_line": 342,
        "comment": " The stroke used to draw the domain grid-lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.domainGridlinePaint",
        "snippet": "    private transient Paint domainGridlinePaint;",
        "begin_line": 345,
        "end_line": 345,
        "comment": " The paint used to draw the domain  grid-lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlinesVisible",
        "snippet": "    private boolean rangeGridlinesVisible;",
        "begin_line": 351,
        "end_line": 351,
        "comment": " \r\n     * A flag that controls whether the grid-lines for the range axis are \r\n     * visible. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlineStroke",
        "snippet": "    private transient Stroke rangeGridlineStroke;",
        "begin_line": 354,
        "end_line": 354,
        "comment": " The stroke used to draw the range axis grid-lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeGridlinePaint",
        "snippet": "    private transient Paint rangeGridlinePaint;",
        "begin_line": 357,
        "end_line": 357,
        "comment": " The paint used to draw the range axis grid-lines. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.anchorValue",
        "snippet": "    private double anchorValue;",
        "begin_line": 360,
        "end_line": 360,
        "comment": " The anchor value. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairVisible",
        "snippet": "    private boolean rangeCrosshairVisible;",
        "begin_line": 363,
        "end_line": 363,
        "comment": " A flag that controls whether or not a range crosshair is drawn. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairValue",
        "snippet": "    private double rangeCrosshairValue;",
        "begin_line": 366,
        "end_line": 366,
        "comment": " The range crosshair value. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairStroke",
        "snippet": "    private transient Stroke rangeCrosshairStroke;",
        "begin_line": 369,
        "end_line": 369,
        "comment": " The pen/brush used to draw the crosshair (if any). "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairPaint",
        "snippet": "    private transient Paint rangeCrosshairPaint;",
        "begin_line": 372,
        "end_line": 372,
        "comment": " The color used to draw the crosshair (if any). "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.rangeCrosshairLockedOnData",
        "snippet": "    private boolean rangeCrosshairLockedOnData = true;",
        "begin_line": 378,
        "end_line": 378,
        "comment": " \r\n     * A flag that controls whether or not the crosshair locks onto actual \r\n     * data points. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.foregroundDomainMarkers",
        "snippet": "    private Map foregroundDomainMarkers;",
        "begin_line": 381,
        "end_line": 381,
        "comment": " A map containing lists of markers for the domain axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.backgroundDomainMarkers",
        "snippet": "    private Map backgroundDomainMarkers;",
        "begin_line": 384,
        "end_line": 384,
        "comment": " A map containing lists of markers for the domain axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.foregroundRangeMarkers",
        "snippet": "    private Map foregroundRangeMarkers;",
        "begin_line": 387,
        "end_line": 387,
        "comment": " A map containing lists of markers for the range axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.backgroundRangeMarkers",
        "snippet": "    private Map backgroundRangeMarkers;",
        "begin_line": 390,
        "end_line": 390,
        "comment": " A map containing lists of markers for the range axes. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.annotations",
        "snippet": "    private List annotations;",
        "begin_line": 397,
        "end_line": 397,
        "comment": " \r\n     * A (possibly empty) list of annotations for the plot.  The list should\r\n     * be initialised in the constructor and never allowed to be \r\n     * <code>null</code>.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.weight",
        "snippet": "    private int weight;",
        "begin_line": 403,
        "end_line": 403,
        "comment": "\r\n     * The weight for the plot (only relevant when the plot is used as a subplot\r\n     * within a combined plot).\r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.fixedDomainAxisSpace",
        "snippet": "    private AxisSpace fixedDomainAxisSpace;",
        "begin_line": 406,
        "end_line": 406,
        "comment": " The fixed space for the domain axis. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.fixedRangeAxisSpace",
        "snippet": "    private AxisSpace fixedRangeAxisSpace;",
        "begin_line": 409,
        "end_line": 409,
        "comment": " The fixed space for the range axis. "
    },
    {
        "class_name": "org.jfree.chart.plot.CategoryPlot",
        "src_path": "source/org/jfree/chart/plot/CategoryPlot.java",
        "signature": "org.jfree.chart.plot.CategoryPlot.fixedLegendItems",
        "snippet": "    private LegendItemCollection fixedLegendItems;",
        "begin_line": 415,
        "end_line": 415,
        "comment": " \r\n     * An optional collection of legend items that can be returned by the \r\n     * getLegendItems() method. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.PlotOrientation",
        "src_path": "source/org/jfree/chart/plot/PlotOrientation.java",
        "signature": "org.jfree.chart.plot.PlotOrientation.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2508771828190337782L;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.PlotOrientation",
        "src_path": "source/org/jfree/chart/plot/PlotOrientation.java",
        "signature": "org.jfree.chart.plot.PlotOrientation.HORIZONTAL",
        "snippet": "    public static final PlotOrientation HORIZONTAL\n        = new PlotOrientation(\"PlotOrientation.HORIZONTAL\");",
        "begin_line": 56,
        "end_line": 57,
        "comment": " For a plot where the range axis is horizontal. "
    },
    {
        "class_name": "org.jfree.chart.plot.PlotOrientation",
        "src_path": "source/org/jfree/chart/plot/PlotOrientation.java",
        "signature": "org.jfree.chart.plot.PlotOrientation.VERTICAL",
        "snippet": "    public static final PlotOrientation VERTICAL\n        = new PlotOrientation(\"PlotOrientation.VERTICAL\");",
        "begin_line": 60,
        "end_line": 61,
        "comment": " For a plot where the range axis is vertical. "
    },
    {
        "class_name": "org.jfree.chart.plot.PlotOrientation",
        "src_path": "source/org/jfree/chart/plot/PlotOrientation.java",
        "signature": "org.jfree.chart.plot.PlotOrientation.name",
        "snippet": "    private String name;",
        "begin_line": 64,
        "end_line": 64,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.event.PlotChangeEvent",
        "src_path": "source/org/jfree/chart/event/PlotChangeEvent.java",
        "signature": "org.jfree.chart.event.PlotChangeEvent.plot",
        "snippet": "    private Plot plot;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " The plot that generated the event. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2457494205644416327L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.CENTER",
        "snippet": "    public static final RectangleAnchor CENTER \n        = new RectangleAnchor(\"RectangleAnchor.CENTER\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " Center. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.TOP",
        "snippet": "    public static final RectangleAnchor TOP \n        = new RectangleAnchor(\"RectangleAnchor.TOP\");",
        "begin_line": 67,
        "end_line": 68,
        "comment": " Top. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.TOP_LEFT",
        "snippet": "    public static final RectangleAnchor TOP_LEFT \n        = new RectangleAnchor(\"RectangleAnchor.TOP_LEFT\");",
        "begin_line": 71,
        "end_line": 72,
        "comment": " Top-Left. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.TOP_RIGHT",
        "snippet": "    public static final RectangleAnchor TOP_RIGHT \n        = new RectangleAnchor(\"RectangleAnchor.TOP_RIGHT\");",
        "begin_line": 75,
        "end_line": 76,
        "comment": " Top-Right. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM",
        "snippet": "    public static final RectangleAnchor BOTTOM \n        = new RectangleAnchor(\"RectangleAnchor.BOTTOM\");",
        "begin_line": 79,
        "end_line": 80,
        "comment": " Bottom. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM_LEFT",
        "snippet": "    public static final RectangleAnchor BOTTOM_LEFT \n        = new RectangleAnchor(\"RectangleAnchor.BOTTOM_LEFT\");",
        "begin_line": 83,
        "end_line": 84,
        "comment": " Bottom-Left. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.BOTTOM_RIGHT",
        "snippet": "    public static final RectangleAnchor BOTTOM_RIGHT \n        = new RectangleAnchor(\"RectangleAnchor.BOTTOM_RIGHT\");",
        "begin_line": 87,
        "end_line": 88,
        "comment": " Bottom-Right. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.LEFT",
        "snippet": "    public static final RectangleAnchor LEFT \n        = new RectangleAnchor(\"RectangleAnchor.LEFT\");",
        "begin_line": 91,
        "end_line": 92,
        "comment": " Left. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.RIGHT",
        "snippet": "    public static final RectangleAnchor RIGHT \n        = new RectangleAnchor(\"RectangleAnchor.RIGHT\");",
        "begin_line": 95,
        "end_line": 96,
        "comment": " Right. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleAnchor",
        "src_path": "source/org/jfree/chart/util/RectangleAnchor.java",
        "signature": "org.jfree.chart.util.RectangleAnchor.name",
        "snippet": "    private String name;",
        "begin_line": 99,
        "end_line": 99,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7789833772597351595L;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.DEFAULT_INITIAL_CAPACITY",
        "snippet": "    public static final int DEFAULT_INITIAL_CAPACITY = 8;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " The default initial capacity of the list. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.objects",
        "snippet": "    private transient Object[] objects;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Storage for the objects. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.size",
        "snippet": "    private int size = 0;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " The current list size. "
    },
    {
        "class_name": "org.jfree.chart.util.AbstractObjectList",
        "src_path": "source/org/jfree/chart/util/AbstractObjectList.java",
        "signature": "org.jfree.chart.util.AbstractObjectList.increment",
        "snippet": "    private int increment = DEFAULT_INITIAL_CAPACITY;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " The default increment. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1902273207559319996L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.ZERO_INSETS",
        "snippet": "    public static final RectangleInsets ZERO_INSETS = new RectangleInsets(\n            UnitType.ABSOLUTE, 0.0, 0.0, 0.0, 0.0);",
        "begin_line": 65,
        "end_line": 66,
        "comment": "\n     * A useful constant representing zero insets.\n     "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.unitType",
        "snippet": "    private UnitType unitType;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Absolute or relative units. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.top",
        "snippet": "    private double top;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The top insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.left",
        "snippet": "    private double left;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " The left insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.bottom",
        "snippet": "    private double bottom;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The bottom insets. "
    },
    {
        "class_name": "org.jfree.chart.util.RectangleInsets",
        "src_path": "source/org/jfree/chart/util/RectangleInsets.java",
        "signature": "org.jfree.chart.util.RectangleInsets.right",
        "snippet": "    private double right;",
        "begin_line": 81,
        "end_line": 81,
        "comment": " The right insets. "
    },
    {
        "class_name": "org.jfree.chart.util.Layer",
        "src_path": "source/org/jfree/chart/util/Layer.java",
        "signature": "org.jfree.chart.util.Layer.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1470104570733183430L;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.Layer",
        "src_path": "source/org/jfree/chart/util/Layer.java",
        "signature": "org.jfree.chart.util.Layer.FOREGROUND",
        "snippet": "    public static final Layer FOREGROUND = new Layer(\"Layer.FOREGROUND\");",
        "begin_line": 56,
        "end_line": 56,
        "comment": " Foreground. "
    },
    {
        "class_name": "org.jfree.chart.util.Layer",
        "src_path": "source/org/jfree/chart/util/Layer.java",
        "signature": "org.jfree.chart.util.Layer.BACKGROUND",
        "snippet": "    public static final Layer BACKGROUND = new Layer(\"Layer.BACKGROUND\");",
        "begin_line": 59,
        "end_line": 59,
        "comment": " Background. "
    },
    {
        "class_name": "org.jfree.chart.util.Layer",
        "src_path": "source/org/jfree/chart/util/Layer.java",
        "signature": "org.jfree.chart.util.Layer.name",
        "snippet": "    private String name;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 6531925392288519884L;    ",
        "begin_line": 53,
        "end_line": 53,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.ABSOLUTE",
        "snippet": "    public static final UnitType ABSOLUTE = new UnitType(\"UnitType.ABSOLUTE\");",
        "begin_line": 56,
        "end_line": 56,
        "comment": " Absolute. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.RELATIVE",
        "snippet": "    public static final UnitType RELATIVE = new UnitType(\"UnitType.RELATIVE\");",
        "begin_line": 59,
        "end_line": 59,
        "comment": " Relative. "
    },
    {
        "class_name": "org.jfree.chart.util.UnitType",
        "src_path": "source/org/jfree/chart/util/UnitType.java",
        "signature": "org.jfree.chart.util.UnitType.name",
        "snippet": "    private String name;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.data.RangeType",
        "src_path": "source/org/jfree/data/RangeType.java",
        "signature": "org.jfree.data.RangeType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -9073319010650549239L;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.RangeType",
        "src_path": "source/org/jfree/data/RangeType.java",
        "signature": "org.jfree.data.RangeType.FULL",
        "snippet": "    public static final RangeType FULL = new RangeType(\"RangeType.FULL\");",
        "begin_line": 56,
        "end_line": 56,
        "comment": " Full range (positive and negative). "
    },
    {
        "class_name": "org.jfree.data.RangeType",
        "src_path": "source/org/jfree/data/RangeType.java",
        "signature": "org.jfree.data.RangeType.POSITIVE",
        "snippet": "    public static final RangeType POSITIVE \n        = new RangeType(\"RangeType.POSITIVE\");",
        "begin_line": 59,
        "end_line": 60,
        "comment": " Positive range. "
    },
    {
        "class_name": "org.jfree.data.RangeType",
        "src_path": "source/org/jfree/data/RangeType.java",
        "signature": "org.jfree.data.RangeType.NEGATIVE",
        "snippet": "    public static final RangeType NEGATIVE \n        = new RangeType(\"RangeType.NEGATIVE\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " Negative range. "
    },
    {
        "class_name": "org.jfree.data.RangeType",
        "src_path": "source/org/jfree/data/RangeType.java",
        "signature": "org.jfree.data.RangeType.name",
        "snippet": "    private String name;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 3698345477322391456L;",
        "begin_line": 144,
        "end_line": 144,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE",
        "snippet": "    public static final Range DEFAULT_RANGE = new Range(0.0, 1.0);",
        "begin_line": 147,
        "end_line": 147,
        "comment": " The default axis range. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.DEFAULT_AUTO_RANGE",
        "snippet": "    public static final boolean DEFAULT_AUTO_RANGE = true;",
        "begin_line": 150,
        "end_line": 150,
        "comment": " The default auto-range value. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.DEFAULT_INVERTED",
        "snippet": "    public static final boolean DEFAULT_INVERTED = false;",
        "begin_line": 153,
        "end_line": 153,
        "comment": " The default inverted flag setting. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE",
        "snippet": "    public static final double DEFAULT_AUTO_RANGE_MINIMUM_SIZE = 0.00000001;",
        "begin_line": 156,
        "end_line": 156,
        "comment": " The default minimum auto range. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.DEFAULT_LOWER_MARGIN",
        "snippet": "    public static final double DEFAULT_LOWER_MARGIN = 0.05;",
        "begin_line": 159,
        "end_line": 159,
        "comment": " The default value for the lower margin (0.05 = 5%). "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.DEFAULT_UPPER_MARGIN",
        "snippet": "    public static final double DEFAULT_UPPER_MARGIN = 0.05;",
        "begin_line": 162,
        "end_line": 162,
        "comment": " The default value for the upper margin (0.05 = 5%). "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.DEFAULT_AUTO_TICK_UNIT_SELECTION",
        "snippet": "    public static final boolean DEFAULT_AUTO_TICK_UNIT_SELECTION = true;",
        "begin_line": 165,
        "end_line": 165,
        "comment": " The default auto-tick-unit-selection value. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.MAXIMUM_TICK_COUNT",
        "snippet": "    public static final int MAXIMUM_TICK_COUNT = 500;",
        "begin_line": 168,
        "end_line": 168,
        "comment": " The maximum tick count. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.positiveArrowVisible",
        "snippet": "    private boolean positiveArrowVisible;",
        "begin_line": 174,
        "end_line": 174,
        "comment": " \r\n     * A flag that controls whether an arrow is drawn at the positive end of \r\n     * the axis line. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.negativeArrowVisible",
        "snippet": "    private boolean negativeArrowVisible;",
        "begin_line": 180,
        "end_line": 180,
        "comment": " \r\n     * A flag that controls whether an arrow is drawn at the negative end of \r\n     * the axis line. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.upArrow",
        "snippet": "    private transient Shape upArrow;",
        "begin_line": 183,
        "end_line": 183,
        "comment": " The shape used for an up arrow. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.downArrow",
        "snippet": "    private transient Shape downArrow;",
        "begin_line": 186,
        "end_line": 186,
        "comment": " The shape used for a down arrow. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.leftArrow",
        "snippet": "    private transient Shape leftArrow;",
        "begin_line": 189,
        "end_line": 189,
        "comment": " The shape used for a left arrow. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.rightArrow",
        "snippet": "    private transient Shape rightArrow;",
        "begin_line": 192,
        "end_line": 192,
        "comment": " The shape used for a right arrow. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.inverted",
        "snippet": "    private boolean inverted;",
        "begin_line": 195,
        "end_line": 195,
        "comment": " A flag that affects the orientation of the values on the axis. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.range",
        "snippet": "    private Range range;",
        "begin_line": 198,
        "end_line": 198,
        "comment": " The axis range. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.autoRange",
        "snippet": "    private boolean autoRange;",
        "begin_line": 204,
        "end_line": 204,
        "comment": " \r\n     * Flag that indicates whether the axis automatically scales to fit the \r\n     * chart data. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.autoRangeMinimumSize",
        "snippet": "    private double autoRangeMinimumSize;",
        "begin_line": 207,
        "end_line": 207,
        "comment": " The minimum size for the 'auto' axis range (excluding margins). "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.defaultAutoRange",
        "snippet": "    private Range defaultAutoRange;",
        "begin_line": 215,
        "end_line": 215,
        "comment": "\r\n     * The default range is used when the dataset is empty and the axis needs\r\n     * to determine the auto range.\r\n     * \r\n     * @since 1.0.5\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.upperMargin",
        "snippet": "    private double upperMargin;",
        "begin_line": 222,
        "end_line": 222,
        "comment": "\r\n     * The upper margin percentage.  This indicates the amount by which the \r\n     * maximum axis value exceeds the maximum data value (as a percentage of \r\n     * the range on the axis) when the axis range is determined automatically.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.lowerMargin",
        "snippet": "    private double lowerMargin;",
        "begin_line": 229,
        "end_line": 229,
        "comment": "\r\n     * The lower margin.  This is a percentage that indicates the amount by\r\n     * which the minimum axis value is \"less than\" the minimum data value when\r\n     * the axis range is determined automatically.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.fixedAutoRange",
        "snippet": "    private double fixedAutoRange;",
        "begin_line": 236,
        "end_line": 236,
        "comment": "\r\n     * If this value is positive, the amount is subtracted from the maximum\r\n     * data value to determine the lower axis range.  This can be used to\r\n     * provide a fixed \"window\" on dynamic data.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.autoTickUnitSelection",
        "snippet": "    private boolean autoTickUnitSelection;",
        "begin_line": 242,
        "end_line": 242,
        "comment": " \r\n     * Flag that indicates whether or not the tick unit is selected \r\n     * automatically. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.standardTickUnits",
        "snippet": "    private TickUnitSource standardTickUnits;",
        "begin_line": 245,
        "end_line": 245,
        "comment": " The standard tick units for the axis. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.autoTickIndex",
        "snippet": "    private int autoTickIndex;",
        "begin_line": 248,
        "end_line": 248,
        "comment": " An index into an array of standard tick values. "
    },
    {
        "class_name": "org.jfree.chart.axis.ValueAxis",
        "src_path": "source/org/jfree/chart/axis/ValueAxis.java",
        "signature": "org.jfree.chart.axis.ValueAxis.verticalTickLabels",
        "snippet": "    private boolean verticalTickLabels;",
        "begin_line": 251,
        "end_line": 251,
        "comment": " A flag indicating whether or not tick labels are rotated to vertical. "
    },
    {
        "class_name": "org.jfree.chart.event.AxisChangeEvent",
        "src_path": "source/org/jfree/chart/event/AxisChangeEvent.java",
        "signature": "org.jfree.chart.event.AxisChangeEvent.axis",
        "snippet": "    private Axis axis;",
        "begin_line": 53,
        "end_line": 53,
        "comment": " The axis that generated the change event. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -734389651405327166L;",
        "begin_line": 97,
        "end_line": 97,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.paint",
        "snippet": "    private transient Paint paint;",
        "begin_line": 100,
        "end_line": 100,
        "comment": " The paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.stroke",
        "snippet": "    private transient Stroke stroke;",
        "begin_line": 103,
        "end_line": 103,
        "comment": " The stroke. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.outlinePaint",
        "snippet": "    private transient Paint outlinePaint;",
        "begin_line": 106,
        "end_line": 106,
        "comment": " The outline paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.outlineStroke",
        "snippet": "    private transient Stroke outlineStroke;",
        "begin_line": 109,
        "end_line": 109,
        "comment": " The outline stroke. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.alpha",
        "snippet": "    private float alpha;",
        "begin_line": 112,
        "end_line": 112,
        "comment": " The alpha transparency. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.label",
        "snippet": "    private String label = null;",
        "begin_line": 115,
        "end_line": 115,
        "comment": " The label. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.labelFont",
        "snippet": "    private Font labelFont;",
        "begin_line": 118,
        "end_line": 118,
        "comment": " The label font. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.labelPaint",
        "snippet": "    private transient Paint labelPaint;",
        "begin_line": 121,
        "end_line": 121,
        "comment": " The label paint. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.labelAnchor",
        "snippet": "    private RectangleAnchor labelAnchor;",
        "begin_line": 124,
        "end_line": 124,
        "comment": " The label position. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.labelTextAnchor",
        "snippet": "    private TextAnchor labelTextAnchor;",
        "begin_line": 127,
        "end_line": 127,
        "comment": " The text anchor for the label. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.labelOffset",
        "snippet": "    private RectangleInsets labelOffset;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " The label offset from the marker rectangle. "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.labelOffsetType",
        "snippet": "    private LengthAdjustmentType labelOffsetType;",
        "begin_line": 135,
        "end_line": 135,
        "comment": " \r\n     * The offset type for the domain or range axis (never <code>null</code>). \r\n     "
    },
    {
        "class_name": "org.jfree.chart.plot.Marker",
        "src_path": "source/org/jfree/chart/plot/Marker.java",
        "signature": "org.jfree.chart.plot.Marker.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 138,
        "end_line": 138,
        "comment": " Storage for registered change listeners. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEvent",
        "src_path": "source/org/jfree/chart/event/ChartChangeEvent.java",
        "signature": "org.jfree.chart.event.ChartChangeEvent.type",
        "snippet": "    private ChartChangeEventType type;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " The type of event. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEvent",
        "src_path": "source/org/jfree/chart/event/ChartChangeEvent.java",
        "signature": "org.jfree.chart.event.ChartChangeEvent.chart",
        "snippet": "    private JFreeChart chart;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " The chart that generated the event. "
    },
    {
        "class_name": "org.jfree.chart.util.SortOrder",
        "src_path": "source/org/jfree/chart/util/SortOrder.java",
        "signature": "org.jfree.chart.util.SortOrder.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -2124469847758108312L;",
        "begin_line": 56,
        "end_line": 56,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.SortOrder",
        "src_path": "source/org/jfree/chart/util/SortOrder.java",
        "signature": "org.jfree.chart.util.SortOrder.ASCENDING",
        "snippet": "    public static final SortOrder ASCENDING = new SortOrder(\n            \"SortOrder.ASCENDING\");",
        "begin_line": 59,
        "end_line": 60,
        "comment": " Ascending order. "
    },
    {
        "class_name": "org.jfree.chart.util.SortOrder",
        "src_path": "source/org/jfree/chart/util/SortOrder.java",
        "signature": "org.jfree.chart.util.SortOrder.DESCENDING",
        "snippet": "    public static final SortOrder DESCENDING = new SortOrder(\n            \"SortOrder.DESCENDING\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " Descending order. "
    },
    {
        "class_name": "org.jfree.chart.util.SortOrder",
        "src_path": "source/org/jfree/chart/util/SortOrder.java",
        "signature": "org.jfree.chart.util.SortOrder.name",
        "snippet": "    private String name;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.axis.TickUnits",
        "src_path": "source/org/jfree/chart/axis/TickUnits.java",
        "signature": "org.jfree.chart.axis.TickUnits.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 1134174035901467545L;",
        "begin_line": 71,
        "end_line": 71,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.TickUnits",
        "src_path": "source/org/jfree/chart/axis/TickUnits.java",
        "signature": "org.jfree.chart.axis.TickUnits.tickUnits",
        "snippet": "    private List tickUnits;",
        "begin_line": 74,
        "end_line": 74,
        "comment": " Storage for the tick units. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 7719289504573298271L;",
        "begin_line": 130,
        "end_line": 130,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_AXIS_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_AXIS_VISIBLE = true;",
        "begin_line": 133,
        "end_line": 133,
        "comment": " The default axis visibility. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_AXIS_LABEL_FONT",
        "snippet": "    public static final Font DEFAULT_AXIS_LABEL_FONT = new Font(\n            \"SansSerif\", Font.PLAIN, 12);",
        "begin_line": 136,
        "end_line": 137,
        "comment": " The default axis label font. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_AXIS_LABEL_PAINT",
        "snippet": "    public static final Paint DEFAULT_AXIS_LABEL_PAINT = Color.black;",
        "begin_line": 140,
        "end_line": 140,
        "comment": " The default axis label paint. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_AXIS_LABEL_INSETS",
        "snippet": "    public static final RectangleInsets DEFAULT_AXIS_LABEL_INSETS \n            = new RectangleInsets(3.0, 3.0, 3.0, 3.0);",
        "begin_line": 143,
        "end_line": 144,
        "comment": " The default axis label insets. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_AXIS_LINE_PAINT",
        "snippet": "    public static final Paint DEFAULT_AXIS_LINE_PAINT = Color.gray;",
        "begin_line": 147,
        "end_line": 147,
        "comment": " The default axis line paint. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_AXIS_LINE_STROKE",
        "snippet": "    public static final Stroke DEFAULT_AXIS_LINE_STROKE = new BasicStroke(1.0f);",
        "begin_line": 150,
        "end_line": 150,
        "comment": " The default axis line stroke. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_LABELS_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_TICK_LABELS_VISIBLE = true;",
        "begin_line": 153,
        "end_line": 153,
        "comment": " The default tick labels visibility. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_FONT",
        "snippet": "    public static final Font DEFAULT_TICK_LABEL_FONT = new Font(\"SansSerif\", \n            Font.PLAIN, 10);",
        "begin_line": 156,
        "end_line": 157,
        "comment": " The default tick label font. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_PAINT",
        "snippet": "    public static final Paint DEFAULT_TICK_LABEL_PAINT = Color.black;",
        "begin_line": 160,
        "end_line": 160,
        "comment": " The default tick label paint. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_LABEL_INSETS",
        "snippet": "    public static final RectangleInsets DEFAULT_TICK_LABEL_INSETS \n            = new RectangleInsets(2.0, 4.0, 2.0, 4.0);",
        "begin_line": 163,
        "end_line": 164,
        "comment": " The default tick label insets. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_MARKS_VISIBLE",
        "snippet": "    public static final boolean DEFAULT_TICK_MARKS_VISIBLE = true;",
        "begin_line": 167,
        "end_line": 167,
        "comment": " The default tick marks visible. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_MARK_STROKE",
        "snippet": "    public static final Stroke DEFAULT_TICK_MARK_STROKE = new BasicStroke(1);",
        "begin_line": 170,
        "end_line": 170,
        "comment": " The default tick stroke. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_MARK_PAINT",
        "snippet": "    public static final Paint DEFAULT_TICK_MARK_PAINT = Color.gray;",
        "begin_line": 173,
        "end_line": 173,
        "comment": " The default tick paint. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_MARK_INSIDE_LENGTH",
        "snippet": "    public static final float DEFAULT_TICK_MARK_INSIDE_LENGTH = 0.0f;",
        "begin_line": 176,
        "end_line": 176,
        "comment": " The default tick mark inside length. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.DEFAULT_TICK_MARK_OUTSIDE_LENGTH",
        "snippet": "    public static final float DEFAULT_TICK_MARK_OUTSIDE_LENGTH = 2.0f;",
        "begin_line": 179,
        "end_line": 179,
        "comment": " The default tick mark outside length. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.visible",
        "snippet": "    private boolean visible;",
        "begin_line": 182,
        "end_line": 182,
        "comment": " A flag indicating whether or not the axis is visible. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.label",
        "snippet": "    private String label;",
        "begin_line": 185,
        "end_line": 185,
        "comment": " The label for the axis. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.labelFont",
        "snippet": "    private Font labelFont;",
        "begin_line": 188,
        "end_line": 188,
        "comment": " The font for displaying the axis label. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.labelPaint",
        "snippet": "    private transient Paint labelPaint;",
        "begin_line": 191,
        "end_line": 191,
        "comment": " The paint for drawing the axis label. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.labelInsets",
        "snippet": "    private RectangleInsets labelInsets;",
        "begin_line": 194,
        "end_line": 194,
        "comment": " The insets for the axis label. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.labelAngle",
        "snippet": "    private double labelAngle;",
        "begin_line": 197,
        "end_line": 197,
        "comment": " The label angle. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.labelToolTip",
        "snippet": "    private String labelToolTip;",
        "begin_line": 204,
        "end_line": 204,
        "comment": "\r\n     * The tool tip text for the label (<code>null</code> is permitted).\r\n     * \r\n     * @since 1.2.0\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.labelURL",
        "snippet": "    private String labelURL;",
        "begin_line": 211,
        "end_line": 211,
        "comment": "\r\n     * The URL for the label (<code>null</code> is permitted).\r\n     * \r\n     * @since 1.2.0.\r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.axisLineVisible",
        "snippet": "    private boolean axisLineVisible;",
        "begin_line": 214,
        "end_line": 214,
        "comment": " A flag that controls whether or not the axis line is visible. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.axisLineStroke",
        "snippet": "    private transient Stroke axisLineStroke;",
        "begin_line": 217,
        "end_line": 217,
        "comment": " The stroke used for the axis line. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.axisLinePaint",
        "snippet": "    private transient Paint axisLinePaint;",
        "begin_line": 220,
        "end_line": 220,
        "comment": " The paint used for the axis line. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickLabelsVisible",
        "snippet": "    private boolean tickLabelsVisible;",
        "begin_line": 226,
        "end_line": 226,
        "comment": " \r\n     * A flag that indicates whether or not tick labels are visible for the \r\n     * axis. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickLabelFont",
        "snippet": "    private Font tickLabelFont;",
        "begin_line": 229,
        "end_line": 229,
        "comment": " The font used to display the tick labels. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickLabelPaint",
        "snippet": "    private transient Paint tickLabelPaint;",
        "begin_line": 232,
        "end_line": 232,
        "comment": " The color used to display the tick labels. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickLabelInsets",
        "snippet": "    private RectangleInsets tickLabelInsets;",
        "begin_line": 235,
        "end_line": 235,
        "comment": " The blank space around each tick label. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickMarksVisible",
        "snippet": "    private boolean tickMarksVisible;",
        "begin_line": 241,
        "end_line": 241,
        "comment": " \r\n     * A flag that indicates whether or not tick marks are visible for the \r\n     * axis. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickMarkInsideLength",
        "snippet": "    private float tickMarkInsideLength;",
        "begin_line": 244,
        "end_line": 244,
        "comment": " The length of the tick mark inside the data area (zero permitted). "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickMarkOutsideLength",
        "snippet": "    private float tickMarkOutsideLength;",
        "begin_line": 247,
        "end_line": 247,
        "comment": " The length of the tick mark outside the data area (zero permitted). "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickMarkStroke",
        "snippet": "    private transient Stroke tickMarkStroke;",
        "begin_line": 250,
        "end_line": 250,
        "comment": " The stroke used to draw tick marks. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.tickMarkPaint",
        "snippet": "    private transient Paint tickMarkPaint;",
        "begin_line": 253,
        "end_line": 253,
        "comment": " The paint used to draw tick marks. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.fixedDimension",
        "snippet": "    private double fixedDimension;",
        "begin_line": 256,
        "end_line": 256,
        "comment": " The fixed (horizontal or vertical) dimension for the axis. "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.plot",
        "snippet": "    private transient Plot plot;",
        "begin_line": 262,
        "end_line": 262,
        "comment": " \r\n     * A reference back to the plot that the axis is assigned to (can be \r\n     * <code>null</code>). \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.Axis",
        "src_path": "source/org/jfree/chart/axis/Axis.java",
        "signature": "org.jfree.chart.axis.Axis.listenerList",
        "snippet": "    private transient EventListenerList listenerList;",
        "begin_line": 265,
        "end_line": 265,
        "comment": " Storage for registered listeners. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5481917022435735602L;",
        "begin_line": 52,
        "end_line": 52,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.GENERAL",
        "snippet": "    public static final ChartChangeEventType GENERAL \n        = new ChartChangeEventType(\"ChartChangeEventType.GENERAL\");",
        "begin_line": 55,
        "end_line": 56,
        "comment": " GENERAL. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.NEW_DATASET",
        "snippet": "    public static final ChartChangeEventType NEW_DATASET \n        = new ChartChangeEventType(\"ChartChangeEventType.NEW_DATASET\");",
        "begin_line": 59,
        "end_line": 60,
        "comment": " NEW_DATASET. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.DATASET_UPDATED",
        "snippet": "    public static final ChartChangeEventType DATASET_UPDATED\n        = new ChartChangeEventType(\"ChartChangeEventType.DATASET_UPDATED\");",
        "begin_line": 63,
        "end_line": 64,
        "comment": " DATASET_UPDATED. "
    },
    {
        "class_name": "org.jfree.chart.event.ChartChangeEventType",
        "src_path": "source/org/jfree/chart/event/ChartChangeEventType.java",
        "signature": "org.jfree.chart.event.ChartChangeEventType.name",
        "snippet": "    private String name;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -8999557901920364580L;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.STANDARD",
        "snippet": "    public static final CategoryLabelPositions \n        STANDARD = new CategoryLabelPositions(\n            new CategoryLabelPosition(\n                RectangleAnchor.BOTTOM, TextBlockAnchor.BOTTOM_CENTER\n            ), // TOP\n            new CategoryLabelPosition(\n                RectangleAnchor.TOP, TextBlockAnchor.TOP_CENTER\n            ), // BOTTOM\n            new CategoryLabelPosition(\n                RectangleAnchor.RIGHT, TextBlockAnchor.CENTER_RIGHT, \n                CategoryLabelWidthType.RANGE, 0.30f\n            ), // LEFT\n            new CategoryLabelPosition(\n                RectangleAnchor.LEFT, TextBlockAnchor.CENTER_LEFT, \n                CategoryLabelWidthType.RANGE, 0.30f\n            ) // RIGHT\n        );",
        "begin_line": 63,
        "end_line": 79,
        "comment": " STANDARD category label positions. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.UP_90",
        "snippet": "    public static final CategoryLabelPositions \n        UP_90 = new CategoryLabelPositions(\n            new CategoryLabelPosition(\n                RectangleAnchor.BOTTOM, TextBlockAnchor.CENTER_LEFT, \n                TextAnchor.CENTER_LEFT, -Math.PI / 2.0,\n                CategoryLabelWidthType.RANGE, 0.30f\n            ), // TOP\n            new CategoryLabelPosition(\n                RectangleAnchor.TOP, TextBlockAnchor.CENTER_RIGHT, \n                TextAnchor.CENTER_RIGHT, -Math.PI / 2.0,\n                CategoryLabelWidthType.RANGE, 0.30f\n            ), // BOTTOM\n            new CategoryLabelPosition(\n                RectangleAnchor.RIGHT, TextBlockAnchor.BOTTOM_CENTER, \n                TextAnchor.BOTTOM_CENTER, -Math.PI / 2.0,\n                CategoryLabelWidthType.CATEGORY, 0.9f\n            ), // LEFT\n            new CategoryLabelPosition(\n                RectangleAnchor.LEFT, TextBlockAnchor.TOP_CENTER, \n                TextAnchor.TOP_CENTER, -Math.PI / 2.0,\n                CategoryLabelWidthType.CATEGORY, 0.90f\n            ) // RIGHT\n        );",
        "begin_line": 82,
        "end_line": 104,
        "comment": " UP_90 category label positions. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.DOWN_90",
        "snippet": "    public static final CategoryLabelPositions \n        DOWN_90 = new CategoryLabelPositions(\n            new CategoryLabelPosition(\n                RectangleAnchor.BOTTOM, TextBlockAnchor.CENTER_RIGHT, \n                TextAnchor.CENTER_RIGHT, Math.PI / 2.0,\n                CategoryLabelWidthType.RANGE, 0.30f\n            ), // TOP\n            new CategoryLabelPosition(\n                RectangleAnchor.TOP, TextBlockAnchor.CENTER_LEFT, \n                TextAnchor.CENTER_LEFT, Math.PI / 2.0,\n                CategoryLabelWidthType.RANGE, 0.30f\n            ), // BOTTOM\n            new CategoryLabelPosition(\n                RectangleAnchor.RIGHT, TextBlockAnchor.TOP_CENTER, \n                TextAnchor.TOP_CENTER, Math.PI / 2.0,\n                CategoryLabelWidthType.CATEGORY, 0.90f\n            ), // LEFT\n            new CategoryLabelPosition(\n                RectangleAnchor.LEFT, TextBlockAnchor.BOTTOM_CENTER, \n                TextAnchor.BOTTOM_CENTER, Math.PI / 2.0,\n                CategoryLabelWidthType.CATEGORY, 0.90f\n            ) // RIGHT\n        );",
        "begin_line": 107,
        "end_line": 129,
        "comment": " DOWN_90 category label positions. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.UP_45",
        "snippet": "    public static final CategoryLabelPositions UP_45 \n        = createUpRotationLabelPositions(Math.PI / 4.0);",
        "begin_line": 132,
        "end_line": 133,
        "comment": " UP_45 category label positions. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.DOWN_45",
        "snippet": "    public static final CategoryLabelPositions DOWN_45 \n        = createDownRotationLabelPositions(Math.PI / 4.0);",
        "begin_line": 136,
        "end_line": 137,
        "comment": " DOWN_45 category label positions. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.positionForAxisAtTop",
        "snippet": "    private CategoryLabelPosition positionForAxisAtTop;",
        "begin_line": 211,
        "end_line": 211,
        "comment": " \r\n     * The label positioning details used when an axis is at the top of a \r\n     * chart. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.positionForAxisAtBottom",
        "snippet": "    private CategoryLabelPosition positionForAxisAtBottom;",
        "begin_line": 217,
        "end_line": 217,
        "comment": " \r\n     * The label positioning details used when an axis is at the bottom of a \r\n     * chart. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.positionForAxisAtLeft",
        "snippet": "    private CategoryLabelPosition positionForAxisAtLeft;",
        "begin_line": 223,
        "end_line": 223,
        "comment": " \r\n     * The label positioning details used when an axis is at the left of a \r\n     * chart. \r\n     "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelPositions",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelPositions.java",
        "signature": "org.jfree.chart.axis.CategoryLabelPositions.positionForAxisAtRight",
        "snippet": "    private CategoryLabelPosition positionForAxisAtRight;",
        "begin_line": 229,
        "end_line": 229,
        "comment": " \r\n     * The label positioning details used when an axis is at the right of a \r\n     * chart. \r\n     "
    },
    {
        "class_name": "org.jfree.data.Range",
        "src_path": "source/org/jfree/data/Range.java",
        "signature": "org.jfree.data.Range.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -906333695431863380L;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.data.Range",
        "src_path": "source/org/jfree/data/Range.java",
        "signature": "org.jfree.data.Range.lower",
        "snippet": "    private double lower;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " The lower bound of the range. "
    },
    {
        "class_name": "org.jfree.data.Range",
        "src_path": "source/org/jfree/data/Range.java",
        "signature": "org.jfree.data.Range.upper",
        "snippet": "    private double upper;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " The upper bound of the range. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelWidthType",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelWidthType.java",
        "signature": "org.jfree.chart.axis.CategoryLabelWidthType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -6976024792582949656L;",
        "begin_line": 52,
        "end_line": 52,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelWidthType",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelWidthType.java",
        "signature": "org.jfree.chart.axis.CategoryLabelWidthType.CATEGORY",
        "snippet": "    public static final CategoryLabelWidthType \n        CATEGORY = new CategoryLabelWidthType(\n            \"CategoryLabelWidthType.CATEGORY\"\n        );",
        "begin_line": 55,
        "end_line": 58,
        "comment": " Percentage of category. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelWidthType",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelWidthType.java",
        "signature": "org.jfree.chart.axis.CategoryLabelWidthType.RANGE",
        "snippet": "    public static final CategoryLabelWidthType \n        RANGE = new CategoryLabelWidthType(\"CategoryLabelWidthType.RANGE\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " Percentage of range. "
    },
    {
        "class_name": "org.jfree.chart.axis.CategoryLabelWidthType",
        "src_path": "source/org/jfree/chart/axis/CategoryLabelWidthType.java",
        "signature": "org.jfree.chart.axis.CategoryLabelWidthType.name",
        "snippet": "    private String name;",
        "begin_line": 65,
        "end_line": 65,
        "comment": " The name. "
    },
    {
        "class_name": "org.jfree.chart.util.LengthAdjustmentType",
        "src_path": "source/org/jfree/chart/util/LengthAdjustmentType.java",
        "signature": "org.jfree.chart.util.LengthAdjustmentType.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -6097408511380545010L;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " For serialization. "
    },
    {
        "class_name": "org.jfree.chart.util.LengthAdjustmentType",
        "src_path": "source/org/jfree/chart/util/LengthAdjustmentType.java",
        "signature": "org.jfree.chart.util.LengthAdjustmentType.NO_CHANGE",
        "snippet": "    public static final LengthAdjustmentType NO_CHANGE \n            = new LengthAdjustmentType(\"NO_CHANGE\");",
        "begin_line": 57,
        "end_line": 58,
        "comment": " NO_CHANGE. "
    },
    {
        "class_name": "org.jfree.chart.util.LengthAdjustmentType",
        "src_path": "source/org/jfree/chart/util/LengthAdjustmentType.java",
        "signature": "org.jfree.chart.util.LengthAdjustmentType.EXPAND",
        "snippet": "    public static final LengthAdjustmentType EXPAND \n            = new LengthAdjustmentType(\"EXPAND\");",
        "begin_line": 61,
        "end_line": 62,
        "comment": " EXPAND. "
    },
    {
        "class_name": "org.jfree.chart.util.LengthAdjustmentType",
        "src_path": "source/org/jfree/chart/util/LengthAdjustmentType.java",
        "signature": "org.jfree.chart.util.LengthAdjustmentType.CONTRACT",
        "snippet": "    public static final LengthAdjustmentType CONTRACT \n            = new LengthAdjustmentType(\"CONTRACT\");",
        "begin_line": 65,
        "end_line": 66,
        "comment": " CONTRACT. "
    },
    {
        "class_name": "org.jfree.chart.util.LengthAdjustmentType",
        "src_path": "source/org/jfree/chart/util/LengthAdjustmentType.java",
        "signature": "org.jfree.chart.util.LengthAdjustmentType.name",
        "snippet": "    private String name;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " The name. "
    }
]