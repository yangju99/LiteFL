[
    {
        "name": "UnknownKeyException.UnknownKeyException#55",
        "is_bug": false,
        "src_path": "source/org/jfree/data/UnknownKeyException.java",
        "class_name": "org.jfree.data.UnknownKeyException",
        "signature": "org.jfree.data.UnknownKeyException.UnknownKeyException(java.lang.String)",
        "snippet": "    public UnknownKeyException(String message) {\n        super(message);\n    }\n",
        "begin_line": 55,
        "end_line": 57,
        "comment": "\r\n     * Creates a new exception.\r\n     *\r\n     * @param message  a message describing the exception.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.8165
        },
        "num_failing_tests": 4
    },
    {
        "name": "KeyedObjects2D.removeColumn#369",
        "is_bug": true,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.removeColumn(java.lang.Comparable)",
        "snippet": "    public void removeColumn(Comparable columnKey) {\n        int index = getColumnIndex(columnKey);\n        if (index < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey \n                    + \") not recognised.\");\n        }\n        Iterator iterator = this.rows.iterator();\n        while (iterator.hasNext()) {\n            KeyedObjects rowData = (KeyedObjects) iterator.next();\n                rowData.removeValue(columnKey);\n        }\n        this.columnKeys.remove(columnKey);\n    }\n",
        "begin_line": 369,
        "end_line": 381,
        "comment": "\r\n     * Removes an entire column from the table.\r\n     *\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     * \r\n     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.\r\n     * \r\n     * @see #removeRow(Comparable)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5773
        },
        "num_failing_tests": 2
    },
    {
        "name": "KeyedObjects.getObject#168",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "class_name": "org.jfree.data.KeyedObjects",
        "signature": "org.jfree.data.KeyedObjects.getObject(java.lang.Comparable)",
        "snippet": "    public Object getObject(Comparable key) {\n        int index = getIndex(key);\n        if (index < 0) {\n            throw new UnknownKeyException(\"The key (\" + key \n                    + \") is not recognised.\");\n        }\n        return getObject(index);\n    }\n",
        "begin_line": 168,
        "end_line": 175,
        "comment": "\r\n     * Returns the object for a given key. If the key is not recognised, the \r\n     * method should return <code>null</code>.\r\n     *\r\n     * @param key  the key.\r\n     *\r\n     * @return The object (possibly <code>null</code>).\r\n     * \r\n     * @see #addObject(Comparable, Object)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5773
        },
        "num_failing_tests": 3
    },
    {
        "name": "KeyedObjects.removeValue#264",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "class_name": "org.jfree.data.KeyedObjects",
        "signature": "org.jfree.data.KeyedObjects.removeValue(java.lang.Comparable)",
        "snippet": "    public void removeValue(Comparable key) {\n        // defer argument checking \n        int index = getIndex(key);\n        if (index < 0) {\n            throw new UnknownKeyException(\"The key (\" + key.toString() \n                    + \") is not recognised.\");\n        }\n        removeValue(index);\n    }\n",
        "begin_line": 264,
        "end_line": 272,
        "comment": "\r\n     * Removes a value from the collection.\r\n     *\r\n     * @param key  the key (<code>null</code> not permitted).\r\n     * \r\n     * @see #removeValue(int)\r\n     * \r\n     * @throws UnknownKeyException if the key is not recognised.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5773
        },
        "num_failing_tests": 2
    },
    {
        "name": "KeyedObjects.getIndex#127",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "class_name": "org.jfree.data.KeyedObjects",
        "signature": "org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable)",
        "snippet": "    public int getIndex(Comparable key) {\n        if (key == null) {\n            throw new IllegalArgumentException(\"Null 'key' argument.\");\n        }\n        int i = 0;\n        Iterator iterator = this.data.iterator();\n        while (iterator.hasNext()) {\n            KeyedObject ko = (KeyedObject) iterator.next();\n            if (ko.getKey().equals(key)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n",
        "begin_line": 127,
        "end_line": 141,
        "comment": "\r\n     * Returns the index for a given key, or <code>-1</code>.\r\n     *\r\n     * @param key  the key (<code>null</code> not permitted).\r\n     *\r\n     * @return The index, or <code>-1</code> if the key is unrecognised.\r\n     * \r\n     * @see #getKey(int)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.433
        },
        "num_failing_tests": 6
    },
    {
        "name": "KeyedObject.getKey#84",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObject.java",
        "class_name": "org.jfree.data.KeyedObject",
        "signature": "org.jfree.data.KeyedObject.getKey()",
        "snippet": "    public Comparable getKey() {\n        return this.key;\n    }\n",
        "begin_line": 84,
        "end_line": 86,
        "comment": "\r\n     * Returns the key.\r\n     *\r\n     * @return The key.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.433
        },
        "num_failing_tests": 6
    },
    {
        "name": "KeyedObjects2D.setObject#259",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.setObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable)",
        "snippet": "    public void setObject(Object object, Comparable rowKey, \n            Comparable columnKey) {\n\n        if (rowKey == null) {\n            throw new IllegalArgumentException(\"Null 'rowKey' argument.\");\n        }\n        if (columnKey == null) {\n            throw new IllegalArgumentException(\"Null 'columnKey' argument.\");\n        }\n        KeyedObjects row;\n        int rowIndex = this.rowKeys.indexOf(rowKey);\n        if (rowIndex >= 0) {\n            row = (KeyedObjects) this.rows.get(rowIndex);\n        }\n        else {\n            this.rowKeys.add(rowKey);\n            row = new KeyedObjects();\n            this.rows.add(row);\n        }\n        row.setObject(columnKey, object);\n        int columnIndex = this.columnKeys.indexOf(columnKey);\n        if (columnIndex < 0) {\n            this.columnKeys.add(columnKey);\n        }\n\n    }\n",
        "begin_line": 259,
        "end_line": 284,
        "comment": "\r\n     * Adds or updates an object.\r\n     *\r\n     * @param object  the object.\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.414
        },
        "num_failing_tests": 6
    },
    {
        "name": "KeyedObjects.KeyedObjects#67",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "class_name": "org.jfree.data.KeyedObjects",
        "signature": "org.jfree.data.KeyedObjects.KeyedObjects()",
        "snippet": "    public KeyedObjects() {\n        this.data = new java.util.ArrayList();\n    }\n",
        "begin_line": 67,
        "end_line": 69,
        "comment": "\r\n     * Creates a new collection (initially empty).\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.414
        },
        "num_failing_tests": 6
    },
    {
        "name": "KeyedObjects.setObject#200",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "class_name": "org.jfree.data.KeyedObjects",
        "signature": "org.jfree.data.KeyedObjects.setObject(java.lang.Comparable, java.lang.Object)",
        "snippet": "    public void setObject(Comparable key, Object object) {\n        int keyIndex = getIndex(key);\n        if (keyIndex >= 0) {\n            KeyedObject ko = (KeyedObject) this.data.get(keyIndex);\n            ko.setObject(object);\n        }\n        else {\n            KeyedObject ko = new KeyedObject(key, object);\n            this.data.add(ko);\n        }\n    }\n",
        "begin_line": 200,
        "end_line": 210,
        "comment": "\r\n     * Replaces an existing object, or adds a new object to the collection.\r\n     * This is the same as the {@link #addObject(Comparable, Object)} \r\n     * method.\r\n     *\r\n     * @param key  the key (<code>null</code> not permitted).\r\n     * @param object  the object.\r\n     * \r\n     * @see #getObject(Comparable)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.414
        },
        "num_failing_tests": 6
    },
    {
        "name": "KeyedObject.KeyedObject#74",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObject.java",
        "class_name": "org.jfree.data.KeyedObject",
        "signature": "org.jfree.data.KeyedObject.KeyedObject(java.lang.Comparable, java.lang.Object)",
        "snippet": "    public KeyedObject(Comparable key, Object object) {\n        this.key = key;\n        this.object = object;\n    }\n",
        "begin_line": 74,
        "end_line": 77,
        "comment": "\r\n     * Creates a new (key, object) pair.\r\n     *\r\n     * @param key  the key.\r\n     * @param object  the object (<code>null</code> permitted).\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.414
        },
        "num_failing_tests": 6
    },
    {
        "name": "KeyedObjects2D.removeObject#296",
        "is_bug": true,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.removeObject(java.lang.Comparable, java.lang.Comparable)",
        "snippet": "    public void removeObject(Comparable rowKey, Comparable columnKey) {\n        setObject(null, rowKey, columnKey);\n        \n        // 1. check whether the row is now empty.\n        boolean allNull = true;\n        int rowIndex = getRowIndex(rowKey);\n        KeyedObjects row = (KeyedObjects) this.rows.get(rowIndex);\n\n        for (int item = 0, itemCount = row.getItemCount(); item < itemCount; \n             item++) {\n            if (row.getObject(item) != null) {\n                allNull = false;\n                break;\n            }\n        }\n        \n        if (allNull) {\n            this.rowKeys.remove(rowIndex);\n            this.rows.remove(rowIndex);\n        }\n        \n        // 2. check whether the column is now empty.\n        \n        \n    }\n",
        "begin_line": 296,
        "end_line": 320,
        "comment": "\r\n     * Removes an object from the table by setting it to <code>null</code>.  If\r\n     * all the objects in the specified row and/or column are now \r\n     * <code>null</code>, the row and/or column is removed from the table.\r\n     *\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     * \r\n     * @see #addObject(Object, Comparable, Comparable)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4082
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects2D.removeRow#343",
        "is_bug": true,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.removeRow(java.lang.Comparable)",
        "snippet": "    public void removeRow(Comparable rowKey) {\n        int index = getRowIndex(rowKey);\n        removeRow(index);\n    }\n",
        "begin_line": 343,
        "end_line": 346,
        "comment": "\r\n     * Removes an entire row from the table.\r\n     *\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * \r\n     * @throws UnknownKeyException if <code>rowKey</code> is not recognised.\r\n     * \r\n     * @see #removeColumn(Comparable)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4082
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects2D.removeColumn#355",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.removeColumn(int)",
        "snippet": "    public void removeColumn(int columnIndex) {\n        Comparable columnKey = getColumnKey(columnIndex);\n        removeColumn(columnKey);\n    }\n",
        "begin_line": 355,
        "end_line": 358,
        "comment": "\r\n     * Removes an entire column from the table.\r\n     *\r\n     * @param columnIndex  the column index.\r\n     * \r\n     * @see #removeRow(int)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4082
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects.getItemCount#76",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "class_name": "org.jfree.data.KeyedObjects",
        "signature": "org.jfree.data.KeyedObjects.getItemCount()",
        "snippet": "    public int getItemCount() {\n        return this.data.size();\n    }\n",
        "begin_line": 76,
        "end_line": 78,
        "comment": "\r\n     * Returns the number of items (values) in the collection.\r\n     *\r\n     * @return The item count.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4082
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects.removeValue#251",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "class_name": "org.jfree.data.KeyedObjects",
        "signature": "org.jfree.data.KeyedObjects.removeValue(int)",
        "snippet": "    public void removeValue(int index) {\n        this.data.remove(index);\n    }\n",
        "begin_line": 251,
        "end_line": 253,
        "comment": "\r\n     * Removes a value from the collection.\r\n     *\r\n     * @param index  the index of the item to remove.\r\n     * \r\n     * @see #removeValue(Comparable)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4082
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects2D.KeyedObjects2D#74",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.KeyedObjects2D()",
        "snippet": "    public KeyedObjects2D() {\n        this.rowKeys = new java.util.ArrayList();\n        this.columnKeys = new java.util.ArrayList();\n        this.rows = new java.util.ArrayList();\n    }\n",
        "begin_line": 74,
        "end_line": 78,
        "comment": "\r\n     * Creates a new instance (initially empty).\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.4027
        },
        "num_failing_tests": 6
    },
    {
        "name": "KeyedObjects2D.getObject#214",
        "is_bug": true,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.getObject(java.lang.Comparable, java.lang.Comparable)",
        "snippet": "    public Object getObject(Comparable rowKey, Comparable columnKey) {\n        if (rowKey == null) {\n            throw new IllegalArgumentException(\"Null 'rowKey' argument.\");\n        }\n        if (columnKey == null) {\n            throw new IllegalArgumentException(\"Null 'columnKey' argument.\");\n        }\n        int row = this.rowKeys.indexOf(rowKey);\n        if (row < 0) {\n            throw new UnknownKeyException(\"Row key (\" + rowKey \n                    + \") not recognised.\");\n        }\n        int column = this.columnKeys.indexOf(columnKey);\n        if (column < 0) {\n            throw new UnknownKeyException(\"Column key (\" + columnKey \n                    + \") not recognised.\");\n        }\n        if (row >= 0) {\n        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);\n            return rowData.getObject(columnKey);\n        }\n        else {\n            return null;\n        }\n    }\n",
        "begin_line": 214,
        "end_line": 238,
        "comment": "\r\n     * Returns the object for the given row and column keys.\r\n     *\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     *\r\n     * @return The object (possibly <code>null</code>).\r\n     * \r\n     * @throws IllegalArgumentException if <code>rowKey<code> or \r\n     *         <code>columnKey</code> is <code>null</code>.\r\n     * @throws UnknownKeyException if <code>rowKey</code> or \r\n     *         <code>columnKey</code> is not recognised.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3651
        },
        "num_failing_tests": 2
    },
    {
        "name": "KeyedObjects.getObject#89",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects.java",
        "class_name": "org.jfree.data.KeyedObjects",
        "signature": "org.jfree.data.KeyedObjects.getObject(int)",
        "snippet": "    public Object getObject(int item) {\n        Object result = null;\n        KeyedObject kobj = (KeyedObject) this.data.get(item);\n        if (kobj != null) {\n            result = kobj.getObject();\n        }\n        return result;\n    }\n",
        "begin_line": 89,
        "end_line": 96,
        "comment": "\r\n     * Returns an object from the list.\r\n     *\r\n     * @param item  the item index (zero-based).\r\n     *\r\n     * @return The object (possibly <code>null</code>).\r\n     * \r\n     * @throws IndexOutOfBoundsException if <code>item</code> is out of bounds.\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3032
        },
        "num_failing_tests": 4
    },
    {
        "name": "KeyedObject.getObject#93",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObject.java",
        "class_name": "org.jfree.data.KeyedObject",
        "signature": "org.jfree.data.KeyedObject.getObject()",
        "snippet": "    public Object getObject() {\n        return this.object;\n    }\n",
        "begin_line": 93,
        "end_line": 95,
        "comment": "\r\n     * Returns the object.\r\n     *\r\n     * @return The object (possibly <code>null</code>).\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.3032
        },
        "num_failing_tests": 4
    },
    {
        "name": "KeyedObjects2D.removeRow#329",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.removeRow(int)",
        "snippet": "    public void removeRow(int rowIndex) {\n        this.rowKeys.remove(rowIndex);\n        this.rows.remove(rowIndex);\n    }\n",
        "begin_line": 329,
        "end_line": 332,
        "comment": "\r\n     * Removes an entire row from the table.\r\n     *\r\n     * @param rowIndex  the row index.\r\n     * \r\n     * @see #removeColumn(int)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.2887
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObject.setObject#102",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObject.java",
        "class_name": "org.jfree.data.KeyedObject",
        "signature": "org.jfree.data.KeyedObject.setObject(java.lang.Object)",
        "snippet": "    public void setObject(Object object) {\n        this.object = object;\n    }\n",
        "begin_line": 102,
        "end_line": 104,
        "comment": "\r\n     * Sets the object.\r\n     *\r\n     * @param object  the object (<code>null</code> permitted).\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1826
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects2D.getRowCount#87",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.getRowCount()",
        "snippet": "    public int getRowCount() {\n        return this.rowKeys.size();\n    }\n",
        "begin_line": 87,
        "end_line": 89,
        "comment": "\r\n     * Returns the row count.\r\n     *\r\n     * @return The row count.\r\n     * \r\n     * @see #getColumnCount()\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1601
        },
        "num_failing_tests": 2
    },
    {
        "name": "KeyedObjects2D.getRowIndex#149",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.getRowIndex(java.lang.Comparable)",
        "snippet": "    public int getRowIndex(Comparable key) {\n        return this.rowKeys.indexOf(key);\n    }\n",
        "begin_line": 149,
        "end_line": 151,
        "comment": "\r\n     * Returns the row index for a given key.\r\n     *\r\n     * @param key  the key.\r\n     *\r\n     * @return The row index.\r\n     * \r\n     * @see #getRowKey(int)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1601
        },
        "num_failing_tests": 2
    },
    {
        "name": "KeyedObjects2D.getColumnIndex#186",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.getColumnIndex(java.lang.Comparable)",
        "snippet": "    public int getColumnIndex(Comparable key) {\n        return this.columnKeys.indexOf(key);\n    }\n",
        "begin_line": 186,
        "end_line": 188,
        "comment": "\r\n     * Returns the column index for a given key.\r\n     *\r\n     * @param key  the key.\r\n     *\r\n     * @return The column index.\r\n     * \r\n     * @see #getColumnKey(int)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1601
        },
        "num_failing_tests": 2
    },
    {
        "name": "KeyedObjects2D.getColumnKey#173",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.getColumnKey(int)",
        "snippet": "    public Comparable getColumnKey(int column) {\n        return (Comparable) this.columnKeys.get(column);\n    }\n",
        "begin_line": 173,
        "end_line": 175,
        "comment": "\r\n     * Returns the key for a given column.\r\n     *\r\n     * @param column  the column.\r\n     *\r\n     * @return The key.\r\n     * \r\n     * @see #getColumnIndex(Comparable)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.1291
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects2D.getColumnCount#98",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.getColumnCount()",
        "snippet": "    public int getColumnCount() {\n        return this.columnKeys.size();\n    }\n",
        "begin_line": 98,
        "end_line": 100,
        "comment": "\r\n     * Returns the column count.\r\n     *\r\n     * @return The column count.\r\n     * \r\n     * @see #getRowCount()\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0833
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects2D.getObject#112",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.getObject(int, int)",
        "snippet": "    public Object getObject(int row, int column) {\n        Object result = null;\n        KeyedObjects rowData = (KeyedObjects) this.rows.get(row);\n        if (rowData != null) {\n            Comparable columnKey = (Comparable) this.columnKeys.get(column);\n            if (columnKey != null) {\n                int index = rowData.getIndex(columnKey);\n                if (index >= 0) {\n                    result = rowData.getObject(columnKey);\n                }\n            }\n        }\n        return result;\n    }\n",
        "begin_line": 112,
        "end_line": 125,
        "comment": "\r\n     * Returns the object for a given row and column.\r\n     *\r\n     * @param row  the row index (in the range 0 to getRowCount() - 1).\r\n     * @param column  the column index (in the range 0 to getColumnCount() - 1).\r\n     *\r\n     * @return The object (possibly <code>null</code>).\r\n     * \r\n     * @see #getObject(Comparable, Comparable)\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0833
        },
        "num_failing_tests": 1
    },
    {
        "name": "KeyedObjects2D.addObject#247",
        "is_bug": false,
        "src_path": "source/org/jfree/data/KeyedObjects2D.java",
        "class_name": "org.jfree.data.KeyedObjects2D",
        "signature": "org.jfree.data.KeyedObjects2D.addObject(java.lang.Object, java.lang.Comparable, java.lang.Comparable)",
        "snippet": "    public void addObject(Object object, Comparable rowKey, \n            Comparable columnKey) {\n        setObject(object, rowKey, columnKey);\n    }\n",
        "begin_line": 247,
        "end_line": 250,
        "comment": "\r\n     * Adds an object to the table.  Performs the same function as setObject().\r\n     *\r\n     * @param object  the object.\r\n     * @param rowKey  the row key (<code>null</code> not permitted).\r\n     * @param columnKey  the column key (<code>null</code> not permitted).\r\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.0758
        },
        "num_failing_tests": 1
    }
]