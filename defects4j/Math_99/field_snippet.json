[
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.EPSILON",
        "snippet": "    public static final double EPSILON = 0x1.0p-53;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Smallest positive number such that 1 - EPSILON is not numerically equal to 1. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.SAFE_MIN",
        "snippet": "    public static final double SAFE_MIN = 0x1.0p-1022;",
        "begin_line": 39,
        "end_line": 39,
        "comment": " Safe minimum, such that 1 / SAFE_MIN does not overflow.\n     * <p>In IEEE 754 arithmetic, this is also the smallest normalized\n     * number 2<sup>-1022</sup>.</p>\n     "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.NB",
        "snippet": "    private static final byte  NB = (byte)-1;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " -1.0 cast as a byte. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.NS",
        "snippet": "    private static final short NS = (short)-1;",
        "begin_line": 45,
        "end_line": 45,
        "comment": " -1.0 cast as a short. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.PB",
        "snippet": "    private static final byte  PB = (byte)1;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " 1.0 cast as a byte. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.PS",
        "snippet": "    private static final short PS = (short)1;",
        "begin_line": 51,
        "end_line": 51,
        "comment": " 1.0 cast as a short. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.ZB",
        "snippet": "    private static final byte  ZB = (byte)0;",
        "begin_line": 54,
        "end_line": 54,
        "comment": " 0.0 cast as a byte. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.ZS",
        "snippet": "    private static final short ZS = (short)0;",
        "begin_line": 57,
        "end_line": 57,
        "comment": " 0.0 cast as a short. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.TWO_PI",
        "snippet": "    private static final double TWO_PI = 2 * Math.PI;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " 2 &pi;. "
    },
    {
        "class_name": "org.apache.commons.math.util.MathUtils",
        "src_path": "src/java/org/apache/commons/math/util/MathUtils.java",
        "signature": "org.apache.commons.math.util.MathUtils.factorials",
        "snippet": "    private static final long[] factorials = new long[] \n       {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800,\n        479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l,\n        355687428096000l, 6402373705728000l, 121645100408832000l,\n        2432902008176640000l};",
        "begin_line": 413,
        "end_line": 417,
        "comment": " All long-representable factorials "
    }
]