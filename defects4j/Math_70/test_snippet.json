[
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testDeprecated()",
        "snippet": "    @Deprecated\n    public void testDeprecated() throws MathException {\n        UnivariateRealFunction f = new SinFunction();\n        double result;\n\n        UnivariateRealSolver solver = new BisectionSolver(f);\n        result = solver.solve(3, 4);\n        assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(1, 4);\n        assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());\n    }\n",
        "begin_line": 31,
        "end_line": 42,
        "comment": "",
        "child_ranges": [
            "(line 33,col 9)-(line 33,col 53)",
            "(line 34,col 9)-(line 34,col 22)",
            "(line 36,col 9)-(line 36,col 61)",
            "(line 37,col 9)-(line 37,col 36)",
            "(line 38,col 9)-(line 38,col 68)",
            "(line 40,col 9)-(line 40,col 36)",
            "(line 41,col 9)-(line 41,col 68)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSinZero()",
        "snippet": "    public void testSinZero() throws MathException {\n        UnivariateRealFunction f = new SinFunction();\n        double result;\n\n        UnivariateRealSolver solver = new BisectionSolver();\n        result = solver.solve(f, 3, 4);\n        assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 1, 4);\n        assertEquals(result, Math.PI, solver.getAbsoluteAccuracy());\n    }\n",
        "begin_line": 44,
        "end_line": 54,
        "comment": "",
        "child_ranges": [
            "(line 45,col 9)-(line 45,col 53)",
            "(line 46,col 9)-(line 46,col 22)",
            "(line 48,col 9)-(line 48,col 60)",
            "(line 49,col 9)-(line 49,col 39)",
            "(line 50,col 9)-(line 50,col 68)",
            "(line 52,col 9)-(line 52,col 39)",
            "(line 53,col 9)-(line 53,col 68)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testQuinticZero()",
        "snippet": "   public void testQuinticZero() throws MathException {\n        UnivariateRealFunction f = new QuinticFunction();\n        double result;\n\n        UnivariateRealSolver solver = new BisectionSolver();\n        result = solver.solve(f, -0.2, 0.2);\n        assertEquals(result, 0, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, -0.1, 0.3);\n        assertEquals(result, 0, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, -0.3, 0.45);\n        assertEquals(result, 0, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 0.3, 0.7);\n        assertEquals(result, 0.5, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 0.2, 0.6);\n        assertEquals(result, 0.5, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 0.05, 0.95);\n        assertEquals(result, 0.5, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 0.85, 1.25);\n        assertEquals(result, 1.0, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 0.8, 1.2);\n        assertEquals(result, 1.0, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 0.85, 1.75);\n        assertEquals(result, 1.0, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 0.55, 1.45);\n        assertEquals(result, 1.0, solver.getAbsoluteAccuracy());\n\n        result = solver.solve(f, 0.85, 5);\n        assertEquals(result, 1.0, solver.getAbsoluteAccuracy());\n\n        assertEquals(result, solver.getResult(), 0);\n        assertTrue(solver.getIterationCount() > 0);\n    }\n",
        "begin_line": 56,
        "end_line": 96,
        "comment": "",
        "child_ranges": [
            "(line 57,col 9)-(line 57,col 57)",
            "(line 58,col 9)-(line 58,col 22)",
            "(line 60,col 9)-(line 60,col 60)",
            "(line 61,col 9)-(line 61,col 44)",
            "(line 62,col 9)-(line 62,col 62)",
            "(line 64,col 9)-(line 64,col 44)",
            "(line 65,col 9)-(line 65,col 62)",
            "(line 67,col 9)-(line 67,col 45)",
            "(line 68,col 9)-(line 68,col 62)",
            "(line 70,col 9)-(line 70,col 43)",
            "(line 71,col 9)-(line 71,col 64)",
            "(line 73,col 9)-(line 73,col 43)",
            "(line 74,col 9)-(line 74,col 64)",
            "(line 76,col 9)-(line 76,col 45)",
            "(line 77,col 9)-(line 77,col 64)",
            "(line 79,col 9)-(line 79,col 45)",
            "(line 80,col 9)-(line 80,col 64)",
            "(line 82,col 9)-(line 82,col 43)",
            "(line 83,col 9)-(line 83,col 64)",
            "(line 85,col 9)-(line 85,col 45)",
            "(line 86,col 9)-(line 86,col 64)",
            "(line 88,col 9)-(line 88,col 45)",
            "(line 89,col 9)-(line 89,col 64)",
            "(line 91,col 9)-(line 91,col 42)",
            "(line 92,col 9)-(line 92,col 64)",
            "(line 94,col 9)-(line 94,col 52)",
            "(line 95,col 9)-(line 95,col 51)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testMath369()",
        "snippet": "    public void testMath369() throws Exception {\n        UnivariateRealFunction f = new SinFunction();\n        UnivariateRealSolver solver = new BisectionSolver();\n        assertEquals(Math.PI, solver.solve(f, 3.0, 3.2, 3.1), solver.getAbsoluteAccuracy());\n    }\n",
        "begin_line": 98,
        "end_line": 102,
        "comment": "",
        "child_ranges": [
            "(line 99,col 9)-(line 99,col 53)",
            "(line 100,col 9)-(line 100,col 60)",
            "(line 101,col 9)-(line 101,col 92)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetFunctionValueAccuracy()",
        "snippet": "    public void testSetFunctionValueAccuracy(){\n        double expected = 1.0e-2;\n        UnivariateRealSolver solver = new BisectionSolver();\n        solver.setFunctionValueAccuracy(expected);\n        assertEquals(expected, solver.getFunctionValueAccuracy(), 1.0e-2);\n    }\n",
        "begin_line": 107,
        "end_line": 112,
        "comment": "\n     *\n     ",
        "child_ranges": [
            "(line 108,col 9)-(line 108,col 33)",
            "(line 109,col 9)-(line 109,col 60)",
            "(line 110,col 9)-(line 110,col 50)",
            "(line 111,col 9)-(line 111,col 74)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetFunctionValueAccuracy()",
        "snippet": "    public void testResetFunctionValueAccuracy(){\n        double newValue = 1.0e-2;\n        UnivariateRealSolver solver = new BisectionSolver();\n        double oldValue = solver.getFunctionValueAccuracy();\n        solver.setFunctionValueAccuracy(newValue);\n        solver.resetFunctionValueAccuracy();\n        assertEquals(oldValue, solver.getFunctionValueAccuracy(), 1.0e-2);\n    }\n",
        "begin_line": 117,
        "end_line": 124,
        "comment": "\n     *\n     ",
        "child_ranges": [
            "(line 118,col 9)-(line 118,col 33)",
            "(line 119,col 9)-(line 119,col 60)",
            "(line 120,col 9)-(line 120,col 60)",
            "(line 121,col 9)-(line 121,col 50)",
            "(line 122,col 9)-(line 122,col 44)",
            "(line 123,col 9)-(line 123,col 74)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetAbsoluteAccuracy()",
        "snippet": "    public void testSetAbsoluteAccuracy(){\n        double expected = 1.0e-2;\n        UnivariateRealSolver solver = new BisectionSolver();\n        solver.setAbsoluteAccuracy(expected);\n        assertEquals(expected, solver.getAbsoluteAccuracy(), 1.0e-2);\n    }\n",
        "begin_line": 129,
        "end_line": 134,
        "comment": "\n     *\n     ",
        "child_ranges": [
            "(line 130,col 9)-(line 130,col 33)",
            "(line 131,col 9)-(line 131,col 60)",
            "(line 132,col 9)-(line 132,col 45)",
            "(line 133,col 9)-(line 133,col 69)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetAbsoluteAccuracy()",
        "snippet": "    public void testResetAbsoluteAccuracy(){\n        double newValue = 1.0e-2;\n        UnivariateRealSolver solver = new BisectionSolver();\n        double oldValue = solver.getAbsoluteAccuracy();\n        solver.setAbsoluteAccuracy(newValue);\n        solver.resetAbsoluteAccuracy();\n        assertEquals(oldValue, solver.getAbsoluteAccuracy(), 1.0e-2);\n    }\n",
        "begin_line": 139,
        "end_line": 146,
        "comment": "\n     *\n     ",
        "child_ranges": [
            "(line 140,col 9)-(line 140,col 33)",
            "(line 141,col 9)-(line 141,col 60)",
            "(line 142,col 9)-(line 142,col 55)",
            "(line 143,col 9)-(line 143,col 45)",
            "(line 144,col 9)-(line 144,col 39)",
            "(line 145,col 9)-(line 145,col 69)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetMaximalIterationCount()",
        "snippet": "    public void testSetMaximalIterationCount(){\n        int expected = 100;\n        UnivariateRealSolver solver = new BisectionSolver();\n        solver.setMaximalIterationCount(expected);\n        assertEquals(expected, solver.getMaximalIterationCount());\n    }\n",
        "begin_line": 151,
        "end_line": 156,
        "comment": "\n     *\n     ",
        "child_ranges": [
            "(line 152,col 9)-(line 152,col 27)",
            "(line 153,col 9)-(line 153,col 60)",
            "(line 154,col 9)-(line 154,col 50)",
            "(line 155,col 9)-(line 155,col 66)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetMaximalIterationCount()",
        "snippet": "    public void testResetMaximalIterationCount(){\n        int newValue = 10000;\n        UnivariateRealSolver solver = new BisectionSolver();\n        int oldValue = solver.getMaximalIterationCount();\n        solver.setMaximalIterationCount(newValue);\n        solver.resetMaximalIterationCount();\n        assertEquals(oldValue, solver.getMaximalIterationCount());\n    }\n",
        "begin_line": 161,
        "end_line": 168,
        "comment": "\n     *\n     ",
        "child_ranges": [
            "(line 162,col 9)-(line 162,col 29)",
            "(line 163,col 9)-(line 163,col 60)",
            "(line 164,col 9)-(line 164,col 57)",
            "(line 165,col 9)-(line 165,col 50)",
            "(line 166,col 9)-(line 166,col 44)",
            "(line 167,col 9)-(line 167,col 66)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testSetRelativeAccuracy()",
        "snippet": "    public void testSetRelativeAccuracy(){\n        double expected = 1.0e-2;\n        UnivariateRealSolver solver = new BisectionSolver();\n        solver.setRelativeAccuracy(expected);\n        assertEquals(expected, solver.getRelativeAccuracy(), 1.0e-2);\n    }\n",
        "begin_line": 173,
        "end_line": 178,
        "comment": "\n     *\n     ",
        "child_ranges": [
            "(line 174,col 9)-(line 174,col 33)",
            "(line 175,col 9)-(line 175,col 60)",
            "(line 176,col 9)-(line 176,col 45)",
            "(line 177,col 9)-(line 177,col 69)"
        ]
    },
    {
        "class_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest",
        "child_classes": [],
        "src_path": "src/test/java/org/apache/commons/math/analysis/solvers/BisectionSolverTest.java",
        "signature": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testResetRelativeAccuracy()",
        "snippet": "    public void testResetRelativeAccuracy(){\n        double newValue = 1.0e-2;\n        UnivariateRealSolver solver = new BisectionSolver();\n        double oldValue = solver.getRelativeAccuracy();\n        solver.setRelativeAccuracy(newValue);\n        solver.resetRelativeAccuracy();\n        assertEquals(oldValue, solver.getRelativeAccuracy(), 1.0e-2);\n    }\n",
        "begin_line": 183,
        "end_line": 190,
        "comment": "\n     *\n     ",
        "child_ranges": [
            "(line 184,col 9)-(line 184,col 33)",
            "(line 185,col 9)-(line 185,col 60)",
            "(line 186,col 9)-(line 186,col 55)",
            "(line 187,col 9)-(line 187,col 45)",
            "(line 188,col 9)-(line 188,col 39)",
            "(line 189,col 9)-(line 189,col 69)"
        ]
    }
]