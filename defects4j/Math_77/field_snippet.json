[
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java",
        "signature": "org.apache.commons.math.linear.AbstractRealVector.i",
        "snippet": "            private int i = 0;",
        "begin_line": 749,
        "end_line": 749,
        "comment": " Current index. "
    },
    {
        "class_name": "org.apache.commons.math.linear.AbstractRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java",
        "signature": "org.apache.commons.math.linear.AbstractRealVector.e",
        "snippet": "            private EntryImpl e = new EntryImpl();",
        "begin_line": 752,
        "end_line": 752,
        "comment": " Current entry. "
    },
    {
        "class_name": "org.apache.commons.math.linear.SparseEntryIterator",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java",
        "signature": "org.apache.commons.math.linear.SparseEntryIterator.dim",
        "snippet": "        private final int dim;",
        "begin_line": 822,
        "end_line": 822,
        "comment": " Dimension of the vector. "
    },
    {
        "class_name": "org.apache.commons.math.linear.SparseEntryIterator",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java",
        "signature": "org.apache.commons.math.linear.SparseEntryIterator.tmp",
        "snippet": "        private EntryImpl tmp = new EntryImpl();",
        "begin_line": 825,
        "end_line": 825,
        "comment": " Temporary entry (reused on each call to {@link #next()}. "
    },
    {
        "class_name": "org.apache.commons.math.linear.SparseEntryIterator",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java",
        "signature": "org.apache.commons.math.linear.SparseEntryIterator.current",
        "snippet": "        private EntryImpl current;",
        "begin_line": 828,
        "end_line": 828,
        "comment": " Current entry. "
    },
    {
        "class_name": "org.apache.commons.math.linear.SparseEntryIterator",
        "src_path": "src/main/java/org/apache/commons/math/linear/AbstractRealVector.java",
        "signature": "org.apache.commons.math.linear.SparseEntryIterator.next",
        "snippet": "        private EntryImpl next;",
        "begin_line": 831,
        "end_line": 831,
        "comment": " Next entry. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.NON_FITTING_POSITION_AND_SIZE_MESSAGE",
        "snippet": "    private static final String NON_FITTING_POSITION_AND_SIZE_MESSAGE =\n        \"position {0} and size {1} don't fit to the size of the input array {2}\";",
        "begin_line": 34,
        "end_line": 35,
        "comment": " Message for non fitting position and size. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -1097961340710804027L;",
        "begin_line": 38,
        "end_line": 38,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.DEFAULT_FORMAT",
        "snippet": "    private static final RealVectorFormat DEFAULT_FORMAT =\n        RealVectorFormat.getInstance();",
        "begin_line": 41,
        "end_line": 42,
        "comment": " Default format. "
    },
    {
        "class_name": "org.apache.commons.math.linear.ArrayRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "signature": "org.apache.commons.math.linear.ArrayRealVector.data",
        "snippet": "    protected double data[];",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Entries of the vector. "
    },
    {
        "class_name": "org.apache.commons.math.util.CompositeFormat",
        "src_path": "src/main/java/org/apache/commons/math/util/CompositeFormat.java",
        "signature": "org.apache.commons.math.util.CompositeFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 5358685519349262494L;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.FREE",
        "snippet": "    protected static final byte FREE    = 0;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " Status indicator for free table entries. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.FULL",
        "snippet": "    protected static final byte FULL    = 1;",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Status indicator for full table entries. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.REMOVED",
        "snippet": "    protected static final byte REMOVED = 2;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " Status indicator for removed table entries. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -3646337053166149105L;",
        "begin_line": 51,
        "end_line": 51,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.CONCURRENT_MODIFICATION_MESSAGE",
        "snippet": "    private static final String CONCURRENT_MODIFICATION_MESSAGE =\n        \"map has been modified while iterating\";",
        "begin_line": 54,
        "end_line": 55,
        "comment": " Message for map modification during iteration. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.EXHAUSTED_ITERATOR_MESSAGE",
        "snippet": "    private static final String EXHAUSTED_ITERATOR_MESSAGE =\n        \"iterator exhausted\";",
        "begin_line": 58,
        "end_line": 59,
        "comment": " Message for exhausted iterator. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.LOAD_FACTOR",
        "snippet": "    private static final float LOAD_FACTOR = 0.5f;",
        "begin_line": 62,
        "end_line": 62,
        "comment": " Load factor for the map. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.DEFAULT_EXPECTED_SIZE",
        "snippet": "    private static final int DEFAULT_EXPECTED_SIZE = 16;",
        "begin_line": 67,
        "end_line": 67,
        "comment": " Default starting size.\n     * <p>This must be a power of two for bit mask to work properly. </p>\n     "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.RESIZE_MULTIPLIER",
        "snippet": "    private static final int RESIZE_MULTIPLIER = 2;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " Multiplier for size growth when map fills up.\n     * <p>This must be a power of two for bit mask to work properly. </p>\n     "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.PERTURB_SHIFT",
        "snippet": "    private static final int PERTURB_SHIFT = 5;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " Number of bits to perturb the index when probing for collision resolution. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys",
        "snippet": "    private int[] keys;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " Keys table. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.values",
        "snippet": "    private double[] values;",
        "begin_line": 81,
        "end_line": 81,
        "comment": " Values table. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.states",
        "snippet": "    private byte[] states;",
        "begin_line": 84,
        "end_line": 84,
        "comment": " States table. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.missingEntries",
        "snippet": "    private final double missingEntries;",
        "begin_line": 87,
        "end_line": 87,
        "comment": " Return value for missing entries. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.size",
        "snippet": "    private int size;",
        "begin_line": 90,
        "end_line": 90,
        "comment": " Current size of the map. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask",
        "snippet": "    private int mask;",
        "begin_line": 93,
        "end_line": 93,
        "comment": " Bit mask for hash values. "
    },
    {
        "class_name": "org.apache.commons.math.util.OpenIntToDoubleHashMap",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.OpenIntToDoubleHashMap.count",
        "snippet": "    private transient int count;",
        "begin_line": 96,
        "end_line": 96,
        "comment": " Modifications count. "
    },
    {
        "class_name": "org.apache.commons.math.util.Iterator",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.Iterator.referenceCount",
        "snippet": "        private final int referenceCount;",
        "begin_line": 494,
        "end_line": 494,
        "comment": " Reference modification count. "
    },
    {
        "class_name": "org.apache.commons.math.util.Iterator",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.Iterator.current",
        "snippet": "        private int current;",
        "begin_line": 497,
        "end_line": 497,
        "comment": " Index of current element. "
    },
    {
        "class_name": "org.apache.commons.math.util.Iterator",
        "src_path": "src/main/java/org/apache/commons/math/util/OpenIntToDoubleHashMap.java",
        "signature": "org.apache.commons.math.util.Iterator.next",
        "snippet": "        private int next;",
        "begin_line": 500,
        "end_line": 500,
        "comment": " Index of next element. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = -708767813036157690L;",
        "begin_line": 48,
        "end_line": 48,
        "comment": " Serializable version identifier "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_PREFIX",
        "snippet": "    private static final String DEFAULT_PREFIX = \"{\";",
        "begin_line": 51,
        "end_line": 51,
        "comment": " The default prefix: \"{\". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_SUFFIX",
        "snippet": "    private static final String DEFAULT_SUFFIX = \"}\";",
        "begin_line": 54,
        "end_line": 54,
        "comment": " The default suffix: \"}\". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_SEPARATOR",
        "snippet": "    private static final String DEFAULT_SEPARATOR = \"; \";",
        "begin_line": 57,
        "end_line": 57,
        "comment": " The default separator: \", \". "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.prefix",
        "snippet": "    private final String prefix;",
        "begin_line": 60,
        "end_line": 60,
        "comment": " Prefix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.suffix",
        "snippet": "    private final String suffix;",
        "begin_line": 63,
        "end_line": 63,
        "comment": " Suffix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.separator",
        "snippet": "    private final String separator;",
        "begin_line": 66,
        "end_line": 66,
        "comment": " Separator. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedPrefix",
        "snippet": "    private final String trimmedPrefix;",
        "begin_line": 69,
        "end_line": 69,
        "comment": " Trimmed prefix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedSuffix",
        "snippet": "    private final String trimmedSuffix;",
        "begin_line": 72,
        "end_line": 72,
        "comment": " Trimmed suffix. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.trimmedSeparator",
        "snippet": "    private final String trimmedSeparator;",
        "begin_line": 75,
        "end_line": 75,
        "comment": " Trimmed separator. "
    },
    {
        "class_name": "org.apache.commons.math.linear.RealVectorFormat",
        "src_path": "src/main/java/org/apache/commons/math/linear/RealVectorFormat.java",
        "signature": "org.apache.commons.math.linear.RealVectorFormat.format",
        "snippet": "    private NumberFormat format;",
        "begin_line": 78,
        "end_line": 78,
        "comment": " The format used for components. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealVector.DEFAULT_ZERO_TOLERANCE",
        "snippet": "    public static final double DEFAULT_ZERO_TOLERANCE = 1.0e-12;",
        "begin_line": 33,
        "end_line": 33,
        "comment": " Default Tolerance for having a value considered zero. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealVector.serialVersionUID",
        "snippet": "    private static final long serialVersionUID = 8772222695580707260L;",
        "begin_line": 36,
        "end_line": 36,
        "comment": " Serializable version identifier. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealVector.entries",
        "snippet": "    private final OpenIntToDoubleHashMap entries;",
        "begin_line": 39,
        "end_line": 39,
        "comment": " Entries of the vector. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealVector.virtualSize",
        "snippet": "    private final int virtualSize;",
        "begin_line": 42,
        "end_line": 42,
        "comment": " Dimension of the vector. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapRealVector",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java",
        "signature": "org.apache.commons.math.linear.OpenMapRealVector.epsilon",
        "snippet": "    private double epsilon;",
        "begin_line": 45,
        "end_line": 45,
        "comment": " Tolerance for having a value considered zero. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapEntry",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java",
        "signature": "org.apache.commons.math.linear.OpenMapEntry.iter",
        "snippet": "        private final Iterator iter;",
        "begin_line": 820,
        "end_line": 820,
        "comment": " Iterator pointing to the entry. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapSparseIterator",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java",
        "signature": "org.apache.commons.math.linear.OpenMapSparseIterator.iter",
        "snippet": "        private final Iterator iter;",
        "begin_line": 857,
        "end_line": 857,
        "comment": " Underlying iterator. "
    },
    {
        "class_name": "org.apache.commons.math.linear.OpenMapSparseIterator",
        "src_path": "src/main/java/org/apache/commons/math/linear/OpenMapRealVector.java",
        "signature": "org.apache.commons.math.linear.OpenMapSparseIterator.current",
        "snippet": "        private final Entry current;",
        "begin_line": 860,
        "end_line": 860,
        "comment": " Current entry. "
    }
]