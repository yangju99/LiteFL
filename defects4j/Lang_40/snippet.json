[
    {
        "name": "StringUtils.containsIgnoreCase#1044",
        "is_bug": true,
        "src_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "class_name": "org.apache.commons.lang.StringUtils",
        "signature": "org.apache.commons.lang.StringUtils.containsIgnoreCase(java.lang.String, java.lang.String)",
        "snippet": "    public static boolean containsIgnoreCase(String str, String searchStr) {\n        if (str == null || searchStr == null) {\n            return false;\n        }\n        return contains(str.toUpperCase(), searchStr.toUpperCase());\n    }\n",
        "begin_line": 1044,
        "end_line": 1049,
        "comment": "\n     * <p>Checks if String contains a search String irrespective of case,\n     * handling <code>null</code>. Case-insensitivity is defined as by\n     * {@link String#equalsIgnoreCase(String)}.\n     *\n     * <p>A <code>null</code> String will return <code>false</code>.</p>\n     *\n     * <pre>\n     * StringUtils.contains(null, *) = false\n     * StringUtils.contains(*, null) = false\n     * StringUtils.contains(\"\", \"\") = true\n     * StringUtils.contains(\"abc\", \"\") = true\n     * StringUtils.contains(\"abc\", \"a\") = true\n     * StringUtils.contains(\"abc\", \"z\") = false\n     * StringUtils.contains(\"abc\", \"A\") = true\n     * StringUtils.contains(\"abc\", \"Z\") = false\n     * </pre>\n     *\n     * @param str  the String to check, may be null\n     * @param searchStr  the String to find, may be null\n     * @return true if the String contains the search String irrespective of\n     * case or false if not or <code>null</code> string input\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.7071
        },
        "num_failing_tests": 1
    },
    {
        "name": "StringUtils.contains#1014",
        "is_bug": false,
        "src_path": "src/java/org/apache/commons/lang/StringUtils.java",
        "class_name": "org.apache.commons.lang.StringUtils",
        "signature": "org.apache.commons.lang.StringUtils.contains(java.lang.String, java.lang.String)",
        "snippet": "    public static boolean contains(String str, String searchStr) {\n        if (str == null || searchStr == null) {\n            return false;\n        }\n        return str.indexOf(searchStr) >= 0;\n    }\n",
        "begin_line": 1014,
        "end_line": 1019,
        "comment": "\n     * <p>Checks if String contains a search String, handling <code>null</code>.\n     * This method uses {@link String#indexOf(String)}.</p>\n     *\n     * <p>A <code>null</code> String will return <code>false</code>.</p>\n     *\n     * <pre>\n     * StringUtils.contains(null, *)     = false\n     * StringUtils.contains(*, null)     = false\n     * StringUtils.contains(\"\", \"\")      = true\n     * StringUtils.contains(\"abc\", \"\")   = true\n     * StringUtils.contains(\"abc\", \"a\")  = true\n     * StringUtils.contains(\"abc\", \"z\")  = false\n     * </pre>\n     *\n     * @param str  the String to check, may be null\n     * @param searchStr  the String to find, may be null\n     * @return true if the String contains the search String,\n     *  false if not or <code>null</code> string input\n     * @since 2.0\n     ",
        "resolved_comments": {},
        "susp": {
            "ochiai_susp": 0.5773
        },
        "num_failing_tests": 1
    }
]