[
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.SourceMapGeneratorV3Test()",
        "snippet": "  public SourceMapGeneratorV3Test() {\n  }\n",
        "begin_line": 35,
        "end_line": 36,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.getSourceMapConsumer()",
        "snippet": "  @Override\n  protected SourceMapConsumer getSourceMapConsumer() {\n    return new SourceMapConsumerV3();\n  }\n",
        "begin_line": 38,
        "end_line": 41,
        "comment": "",
        "child_ranges": [
            "(line 40,col 5)-(line 40,col 37)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.getSourceMapFormat()",
        "snippet": "  @Override\n  protected Format getSourceMapFormat() {\n    return SourceMap.Format.V3;\n  }\n",
        "begin_line": 43,
        "end_line": 46,
        "comment": "",
        "child_ranges": [
            "(line 45,col 5)-(line 45,col 31)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testBasicMapping1()",
        "snippet": "  public void testBasicMapping1() throws Exception {\n    compileAndCheck(\"function __BASIC__() { }\");\n  }\n",
        "begin_line": 48,
        "end_line": 50,
        "comment": "",
        "child_ranges": [
            "(line 49,col 5)-(line 49,col 48)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testBasicMappingGoldenOutput()",
        "snippet": "  public void testBasicMappingGoldenOutput() throws Exception {\n    // Empty source map test\n    checkSourceMap(\"function __BASIC__() { }\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\"AAAAA,QAASA,UAAS,EAAG;\\\",\\n\" +\n                   \"\\\"sources\\\":[\\\"testcode\\\"],\\n\" +\n                   \"\\\"names\\\":[\\\"__BASIC__\\\"]\\n\" +\n                   \"}\\n\");\n  }\n",
        "begin_line": 52,
        "end_line": 64,
        "comment": "",
        "child_ranges": [
            "(line 54,col 5)-(line 63,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testBasicMapping2()",
        "snippet": "  public void testBasicMapping2() throws Exception {\n    compileAndCheck(\"function __BASIC__(__PARAM1__) {}\");\n  }\n",
        "begin_line": 66,
        "end_line": 68,
        "comment": "",
        "child_ranges": [
            "(line 67,col 5)-(line 67,col 57)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testLiteralMappings()",
        "snippet": "  public void testLiteralMappings() throws Exception {\n    compileAndCheck(\"function __BASIC__(__PARAM1__, __PARAM2__) { \" +\n                    \"var __VAR__ = '__STR__'; }\");\n  }\n",
        "begin_line": 70,
        "end_line": 73,
        "comment": "",
        "child_ranges": [
            "(line 71,col 5)-(line 72,col 50)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testLiteralMappingsGoldenOutput()",
        "snippet": "  public void testLiteralMappingsGoldenOutput() throws Exception {\n    // Empty source map test\n    checkSourceMap(\"function __BASIC__(__PARAM1__, __PARAM2__) { \" +\n                   \"var __VAR__ = '__STR__'; }\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\"AAAAA,QAASA,UAAS,CAACC,UAAD,CAAaC,UAAb,\" +\n                       \"CAAyB,CAAE,IAAIC,QAAU,SAAhB;\\\",\\n\" +\n                   \"\\\"sources\\\":[\\\"testcode\\\"],\\n\" +\n                   \"\\\"names\\\":[\\\"__BASIC__\\\",\\\"__PARAM1__\\\",\\\"__PARAM2__\\\",\" +\n                       \"\\\"__VAR__\\\"]\\n\" +\n                   \"}\\n\");\n  }\n",
        "begin_line": 75,
        "end_line": 90,
        "comment": "",
        "child_ranges": [
            "(line 77,col 5)-(line 89,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testMultilineMapping()",
        "snippet": "  public void testMultilineMapping() throws Exception {\n    compileAndCheck(\"function __BASIC__(__PARAM1__, __PARAM2__) {\\n\" +\n                    \"var __VAR__ = '__STR__';\\n\" +\n                    \"var __ANO__ = \\\"__STR2__\\\";\\n\" +\n                    \"}\");\n  }\n",
        "begin_line": 92,
        "end_line": 97,
        "comment": "",
        "child_ranges": [
            "(line 93,col 5)-(line 96,col 25)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testMultilineMapping2()",
        "snippet": "  public void testMultilineMapping2() throws Exception {\n    compileAndCheck(\"function __BASIC__(__PARAM1__, __PARAM2__) {\\n\" +\n                    \"var __VAR__ = 1;\\n\" +\n                    \"var __ANO__ = 2;\\n\" +\n                    \"}\");\n  }\n",
        "begin_line": 99,
        "end_line": 104,
        "comment": "",
        "child_ranges": [
            "(line 100,col 5)-(line 103,col 25)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testMultiFunctionMapping()",
        "snippet": "  public void testMultiFunctionMapping() throws Exception {\n    compileAndCheck(\"function __BASIC__(__PARAM1__, __PARAM2__) {\\n\" +\n                    \"var __VAR__ = '__STR__';\\n\" +\n                    \"var __ANO__ = \\\"__STR2__\\\";\\n\" +\n                    \"}\\n\" +\n\n                    \"function __BASIC2__(__PARAM3__, __PARAM4__) {\\n\" +\n                    \"var __VAR2__ = '__STR2__';\\n\" +\n                    \"var __ANO2__ = \\\"__STR3__\\\";\\n\" +\n                    \"}\\n\");\n  }\n",
        "begin_line": 106,
        "end_line": 116,
        "comment": "",
        "child_ranges": [
            "(line 107,col 5)-(line 115,col 27)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput0()",
        "snippet": "  public void testGoldenOutput0() throws Exception {\n    // Empty source map test\n    checkSourceMap(\"\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\";\\\",\\n\" +\n                   \"\\\"sources\\\":[],\\n\" +\n                   \"\\\"names\\\":[]\\n\" +\n                   \"}\\n\");\n  }\n",
        "begin_line": 118,
        "end_line": 130,
        "comment": "",
        "child_ranges": [
            "(line 120,col 5)-(line 129,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput0a()",
        "snippet": "  public void testGoldenOutput0a() throws Exception {\n    // Empty source map test\n    checkSourceMap(\"a;\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\"AAAAA;\\\",\\n\" +\n                   \"\\\"sources\\\":[\\\"testcode\\\"],\\n\" +\n                   \"\\\"names\\\":[\\\"a\\\"]\\n\" +\n                   \"}\\n\");\n  }\n",
        "begin_line": 132,
        "end_line": 144,
        "comment": "",
        "child_ranges": [
            "(line 134,col 5)-(line 143,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput1()",
        "snippet": "  public void testGoldenOutput1() throws Exception {\n    detailLevel = SourceMap.DetailLevel.ALL;\n\n    checkSourceMap(\"function f(foo, bar) { foo = foo + bar + 2; return foo; }\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\"AAAAA,QAASA,EAAC,CAACC,GAAD,CAAMC,GAAN,\" +\n                       \"CAAW,CAAED,GAAA,CAAMA,GAAN,CAAYC,GAAZ,CAAkB,CAAG,\" +\n                       \"OAAOD,IAA9B;\\\",\\n\" +\n                   \"\\\"sources\\\":[\\\"testcode\\\"],\\n\" +\n                   \"\\\"names\\\":[\\\"f\\\",\\\"foo\\\",\\\"bar\\\"]\\n\" +\n                   \"}\\n\");\n\n    detailLevel = SourceMap.DetailLevel.SYMBOLS;\n\n    checkSourceMap(\"function f(foo, bar) { foo = foo + bar + 2; return foo; }\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\"AAAAA,QAASA,EAATA,CAAWC,GAAXD,CAAgBE,\" +\n                       \"GAAhBF,EAAuBC,GAAvBD,CAA6BC,GAA7BD,CAAmCE,GAAnCF,\" +\n                       \"SAAmDC,IAAnDD;\\\",\\n\" +\n                   \"\\\"sources\\\":[\\\"testcode\\\"],\\n\" +\n                   \"\\\"names\\\":[\\\"f\\\",\\\"foo\\\",\\\"bar\\\"]\\n\" +\n                   \"}\\n\");\n  }\n",
        "begin_line": 146,
        "end_line": 176,
        "comment": "",
        "child_ranges": [
            "(line 147,col 5)-(line 147,col 44)",
            "(line 149,col 5)-(line 160,col 26)",
            "(line 162,col 5)-(line 162,col 48)",
            "(line 164,col 5)-(line 175,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput2()",
        "snippet": "  public void testGoldenOutput2() throws Exception {\n    checkSourceMap(\"function f(foo, bar) {\\r\\n\\n\\n\\nfoo = foo + bar + foo;\" +\n                   \"\\nreturn foo;\\n}\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\"AAAAA,QAASA,EAAC,CAACC,GAAD,CAAMC,GAAN,\" +\n                       \"CAAW,CAIrBD,GAAA,CAAMA,GAAN,CAAYC,GAAZ,CAAkBD,\" +\n                       \"GAClB,OAAOA,IALc;\\\",\\n\" +\n                   \"\\\"sources\\\":[\\\"testcode\\\"],\\n\" +\n                   \"\\\"names\\\":[\\\"f\\\",\\\"foo\\\",\\\"bar\\\"]\\n\" +\n                   \"}\\n\");\n  }\n",
        "begin_line": 178,
        "end_line": 192,
        "comment": "",
        "child_ranges": [
            "(line 179,col 5)-(line 191,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput3()",
        "snippet": "  public void testGoldenOutput3() throws Exception {\n    checkSourceMap(\"c:\\\\myfile.js\",\n                   \"foo;\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\"AAAAA;\\\",\\n\" +\n                   \"\\\"sources\\\":[\\\"c:\\\\\\\\myfile.js\\\"],\\n\" +\n                   \"\\\"names\\\":[\\\"foo\\\"]\\n\" +\n                   \"}\\n\");\n  }\n",
        "begin_line": 194,
        "end_line": 206,
        "comment": "",
        "child_ranges": [
            "(line 195,col 5)-(line 205,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput4()",
        "snippet": "  public void testGoldenOutput4() throws Exception {\n    checkSourceMap(\"c:\\\\myfile.js\",\n                   \"foo;   boo;   goo;\",\n\n                   \"{\\n\" +\n                   \"\\\"version\\\":3,\\n\" +\n                   \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n                   \"\\\"lineCount\\\":1,\\n\" +\n                   \"\\\"mappings\\\":\\\"AAAAA,GAAOC,IAAOC;\\\",\\n\" +\n                   \"\\\"sources\\\":[\\\"c:\\\\\\\\myfile.js\\\"],\\n\" +\n                   \"\\\"names\\\":[\\\"foo\\\",\\\"boo\\\",\\\"goo\\\"]\\n\" +\n                   \"}\\n\");\n  }\n",
        "begin_line": 208,
        "end_line": 220,
        "comment": "",
        "child_ranges": [
            "(line 209,col 5)-(line 219,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testGoldenOutput5()",
        "snippet": "  public void testGoldenOutput5() throws Exception {\n    detailLevel = SourceMap.DetailLevel.ALL;\n\n    checkSourceMap(\n        \"c:\\\\myfile.js\",\n        \"/** @preserve\\n\" +\n        \" * this is a test.\\n\" +\n        \" */\\n\" +\n        \"var foo=a + 'this is a really long line that will force the\"\n        + \" mapping to span multiple lines 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \"' + c + d + e;\",\n\n        \"{\\n\" +\n        \"\\\"version\\\":3,\\n\" +\n        \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n        \"\\\"lineCount\\\":6,\\n\" +\n        \"\\\"mappings\\\":\\\"A;;;;AAGA,IAAIA,IAAIC,CAAJD,CAAQ,mxCAARA;AAA8xCE,\" +\n            \"CAA9xCF,CAAkyCG,CAAlyCH,CAAsyCI;\\\",\\n\" +\n        \"\\\"sources\\\":[\\\"c:\\\\\\\\myfile.js\\\"],\\n\" +\n        \"\\\"names\\\":[\\\"foo\\\",\\\"a\\\",\\\"c\\\",\\\"d\\\",\\\"e\\\"]\\n\" +\n        \"}\\n\");\n\n    detailLevel = SourceMap.DetailLevel.SYMBOLS;\n\n    checkSourceMap(\"c:\\\\myfile.js\",\n        \"/** @preserve\\n\" +\n        \" * this is a test.\\n\" +\n        \" */\\n\" +\n        \"var foo=a + 'this is a really long line that will force the\"\n        + \" mapping to span multiple lines 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \" 123456789 123456789 123456789 123456789 123456789\"\n        + \"' + c + d + e;\",\n\n        \"{\\n\" +\n        \"\\\"version\\\":3,\\n\" +\n        \"\\\"file\\\":\\\"testcode\\\",\\n\" +\n        \"\\\"lineCount\\\":6,\\n\" +\n        \"\\\"mappings\\\":\\\"A;;;;IAGIA,IAAIC,CAAJD;AAA8xCE,CAA9xCF,CAAkyCG,\" +\n            \"CAAlyCH,CAAsyCI;\\\",\\n\" +\n        \"\\\"sources\\\":[\\\"c:\\\\\\\\myfile.js\\\"],\\n\" +\n        \"\\\"names\\\":[\\\"foo\\\",\\\"a\\\",\\\"c\\\",\\\"d\\\",\\\"e\\\"]\\n\" +\n        \"}\\n\");\n  }\n",
        "begin_line": 222,
        "end_line": 311,
        "comment": "",
        "child_ranges": [
            "(line 223,col 5)-(line 223,col 44)",
            "(line 225,col 5)-(line 266,col 15)",
            "(line 268,col 5)-(line 268,col 48)",
            "(line 270,col 5)-(line 310,col 15)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testBasicDeterminism()",
        "snippet": "  public void testBasicDeterminism() throws Exception {\n    RunResult result1 = compile(\"file1\", \"foo;\", \"file2\", \"bar;\");\n    RunResult result2 = compile(\"file2\", \"foo;\", \"file1\", \"bar;\");\n\n    String map1 = getSourceMap(result1);\n    String map2 = getSourceMap(result2);\n\n    // Assert that the files section of the maps are the same. The actual\n    // entries will differ, so we cannot do a simple full comparison.\n\n    // Line 5 has the file information.\n    String files1 = map1.split(\"\\n\")[4];\n    String files2 = map2.split(\"\\n\")[4];\n\n    assertEquals(files1, files2);\n  }\n",
        "begin_line": 313,
        "end_line": 328,
        "comment": "",
        "child_ranges": [
            "(line 314,col 5)-(line 314,col 66)",
            "(line 315,col 5)-(line 315,col 66)",
            "(line 317,col 5)-(line 317,col 40)",
            "(line 318,col 5)-(line 318,col 40)",
            "(line 324,col 5)-(line 324,col 40)",
            "(line 325,col 5)-(line 325,col 40)",
            "(line 327,col 5)-(line 327,col 33)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testWriteMetaMap()",
        "snippet": "  public void testWriteMetaMap() throws IOException {\n    StringWriter out = new StringWriter();\n    String name = \"./app.js\";\n    List<SourceMapSection> appSections = Lists.newArrayList(\n        SourceMapSection.forURL(\"src1\", 0, 0),\n        SourceMapSection.forURL(\"src2\", 100, 10),\n        SourceMapSection.forURL(\"src3\", 150, 5));\n\n    SourceMapGeneratorV3 generator = new SourceMapGeneratorV3();\n    generator.appendIndexMapTo(out, name, appSections);\n\n    assertEquals(\n            \"{\\n\" +\n            \"\\\"version\\\":3,\\n\" +\n            \"\\\"file\\\":\\\"./app.js\\\",\\n\" +\n            \"\\\"sections\\\":[\\n\" +\n            \"{\\n\" +\n            \"\\\"offset\\\":{\\n\" +\n            \"\\\"line\\\":0,\\n\" +\n            \"\\\"column\\\":0\\n\" +\n            \"},\\n\" +\n            \"\\\"url\\\":\\\"src1\\\"\\n\" +\n            \"},\\n\" +\n            \"{\\n\" +\n            \"\\\"offset\\\":{\\n\" +\n            \"\\\"line\\\":100,\\n\" +\n            \"\\\"column\\\":10\\n\" +\n            \"},\\n\" +\n            \"\\\"url\\\":\\\"src2\\\"\\n\" +\n            \"},\\n\" +\n            \"{\\n\" +\n            \"\\\"offset\\\":{\\n\" +\n            \"\\\"line\\\":150,\\n\" +\n            \"\\\"column\\\":5\\n\" +\n            \"},\\n\" +\n            \"\\\"url\\\":\\\"src3\\\"\\n\" +\n            \"}\\n\" +\n            \"]\\n\" +\n            \"}\\n\",\n            out.toString());\n  }\n",
        "begin_line": 330,
        "end_line": 370,
        "comment": "",
        "child_ranges": [
            "(line 331,col 5)-(line 331,col 42)",
            "(line 332,col 5)-(line 332,col 29)",
            "(line 333,col 5)-(line 336,col 49)",
            "(line 338,col 5)-(line 338,col 64)",
            "(line 339,col 5)-(line 339,col 55)",
            "(line 341,col 5)-(line 369,col 28)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.getEmptyMapFor(java.lang.String)",
        "snippet": "  private String getEmptyMapFor(String name) throws IOException {\n    StringWriter out = new StringWriter();\n    SourceMapGeneratorV3 generator = new SourceMapGeneratorV3();\n    generator.appendTo(out, name);\n    return out.toString();\n  }\n",
        "begin_line": 372,
        "end_line": 377,
        "comment": "",
        "child_ranges": [
            "(line 373,col 5)-(line 373,col 42)",
            "(line 374,col 5)-(line 374,col 64)",
            "(line 375,col 5)-(line 375,col 34)",
            "(line 376,col 5)-(line 376,col 26)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testWriteMetaMap2()",
        "snippet": "  public void testWriteMetaMap2() throws IOException {\n    StringWriter out = new StringWriter();\n    String name = \"./app.js\";\n    List<SourceMapSection> appSections = Lists.newArrayList(\n        // Map and URLs can be mixed.\n        SourceMapSection.forMap(getEmptyMapFor(\"./part.js\"), 0, 0),\n        SourceMapSection.forURL(\"src2\", 100, 10));\n\n    SourceMapGeneratorV3 generator = new SourceMapGeneratorV3();\n    generator.appendIndexMapTo(out, name, appSections);\n\n    assertEquals(\n            \"{\\n\" +\n            \"\\\"version\\\":3,\\n\" +\n            \"\\\"file\\\":\\\"./app.js\\\",\\n\" +\n            \"\\\"sections\\\":[\\n\" +\n            \"{\\n\" +\n            \"\\\"offset\\\":{\\n\" +\n            \"\\\"line\\\":0,\\n\" +\n            \"\\\"column\\\":0\\n\" +\n            \"},\\n\" +\n            \"\\\"map\\\":{\\n\" +\n              \"\\\"version\\\":3,\\n\" +\n              \"\\\"file\\\":\\\"./part.js\\\",\\n\" +\n              \"\\\"lineCount\\\":1,\\n\" +\n              \"\\\"mappings\\\":\\\";\\\",\\n\" +\n              \"\\\"sources\\\":[],\\n\" +\n              \"\\\"names\\\":[]\\n\" +\n            \"}\\n\" +\n            \"\\n\" +\n            \"},\\n\" +\n            \"{\\n\" +\n            \"\\\"offset\\\":{\\n\" +\n            \"\\\"line\\\":100,\\n\" +\n            \"\\\"column\\\":10\\n\" +\n            \"},\\n\" +\n            \"\\\"url\\\":\\\"src2\\\"\\n\" +\n            \"}\\n\" +\n            \"]\\n\" +\n            \"}\\n\",\n            out.toString());\n  }\n",
        "begin_line": 379,
        "end_line": 420,
        "comment": "",
        "child_ranges": [
            "(line 380,col 5)-(line 380,col 42)",
            "(line 381,col 5)-(line 381,col 29)",
            "(line 382,col 5)-(line 385,col 50)",
            "(line 387,col 5)-(line 387,col 64)",
            "(line 388,col 5)-(line 388,col 55)",
            "(line 390,col 5)-(line 419,col 28)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testParseSourceMetaMap()",
        "snippet": "  public void testParseSourceMetaMap() throws Exception {\n    final String INPUT1 = \"file1\";\n    final String INPUT2 = \"file2\";\n    LinkedHashMap<String, String> inputs = Maps.newLinkedHashMap();\n    inputs.put(INPUT1, \"var __FOO__ = 1;\");\n    inputs.put(INPUT2, \"var __BAR__ = 2;\");\n    RunResult result1 = compile(inputs.get(INPUT1), INPUT1);\n    RunResult result2 = compile(inputs.get(INPUT2), INPUT2);\n\n    final String MAP1 = \"map1\";\n    final String MAP2 = \"map2\";\n    final LinkedHashMap<String, String> maps = Maps.newLinkedHashMap();\n    maps.put(MAP1, result1.sourceMapFileContent);\n    maps.put(MAP2, result2.sourceMapFileContent);\n\n    List<SourceMapSection> sections = Lists.newArrayList();\n\n    StringBuilder output = new StringBuilder();\n    FilePosition offset = appendAndCount(output, result1.generatedSource);\n    sections.add(SourceMapSection.forURL(MAP1, 0, 0));\n    output.append(result2.generatedSource);\n    sections.add(\n        SourceMapSection.forURL(MAP2, offset.getLine(), offset.getColumn()));\n\n    SourceMapGeneratorV3 generator = new SourceMapGeneratorV3();\n    StringBuilder mapContents = new StringBuilder();\n    generator.appendIndexMapTo(mapContents, \"out.js\", sections);\n\n    check(inputs, output.toString(), mapContents.toString(),\n      new SourceMapSupplier() {\n        @Override\n        public String getSourceMap(String url){\n          return maps.get(url);\n      }});\n  }\n",
        "begin_line": 422,
        "end_line": 456,
        "comment": "",
        "child_ranges": [
            "(line 423,col 5)-(line 423,col 34)",
            "(line 424,col 5)-(line 424,col 34)",
            "(line 425,col 5)-(line 425,col 67)",
            "(line 426,col 5)-(line 426,col 43)",
            "(line 427,col 5)-(line 427,col 43)",
            "(line 428,col 5)-(line 428,col 60)",
            "(line 429,col 5)-(line 429,col 60)",
            "(line 431,col 5)-(line 431,col 31)",
            "(line 432,col 5)-(line 432,col 31)",
            "(line 433,col 5)-(line 433,col 71)",
            "(line 434,col 5)-(line 434,col 49)",
            "(line 435,col 5)-(line 435,col 49)",
            "(line 437,col 5)-(line 437,col 59)",
            "(line 439,col 5)-(line 439,col 47)",
            "(line 440,col 5)-(line 440,col 74)",
            "(line 441,col 5)-(line 441,col 54)",
            "(line 442,col 5)-(line 442,col 43)",
            "(line 443,col 5)-(line 444,col 77)",
            "(line 446,col 5)-(line 446,col 64)",
            "(line 447,col 5)-(line 447,col 52)",
            "(line 448,col 5)-(line 448,col 64)",
            "(line 450,col 5)-(line 455,col 10)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.Anonymous-0c17f095-299c-49ad-9fcf-f66dc1be6448.getSourceMap(java.lang.String)",
        "snippet": "        @Override\n        public String getSourceMap(String url){\n          return maps.get(url);\n      }});\n",
        "begin_line": 452,
        "end_line": 455,
        "comment": "",
        "child_ranges": [
            "(line 454,col 11)-(line 454,col 31)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.testSourceMapMerging()",
        "snippet": "  public void testSourceMapMerging() throws Exception {\n    final String INPUT1 = \"file1\";\n    final String INPUT2 = \"file2\";\n    LinkedHashMap<String, String> inputs = Maps.newLinkedHashMap();\n    inputs.put(INPUT1, \"var __FOO__ = 1;\");\n    inputs.put(INPUT2, \"var __BAR__ = 2;\");\n    RunResult result1 = compile(inputs.get(INPUT1), INPUT1);\n    RunResult result2 = compile(inputs.get(INPUT2), INPUT2);\n\n    StringBuilder output = new StringBuilder();\n    FilePosition offset = appendAndCount(output, result1.generatedSource);\n    output.append(result2.generatedSource);\n\n    SourceMapGeneratorV3 generator = new SourceMapGeneratorV3();\n\n    generator.mergeMapSection(0, 0, result1.sourceMapFileContent);\n    generator.mergeMapSection(offset.getLine(), offset.getColumn(),\n        result2.sourceMapFileContent);\n\n    StringBuilder mapContents = new StringBuilder();\n    generator.appendTo(mapContents, \"out.js\");\n\n    check(inputs, output.toString(), mapContents.toString());\n  }\n",
        "begin_line": 458,
        "end_line": 481,
        "comment": "",
        "child_ranges": [
            "(line 459,col 5)-(line 459,col 34)",
            "(line 460,col 5)-(line 460,col 34)",
            "(line 461,col 5)-(line 461,col 67)",
            "(line 462,col 5)-(line 462,col 43)",
            "(line 463,col 5)-(line 463,col 43)",
            "(line 464,col 5)-(line 464,col 60)",
            "(line 465,col 5)-(line 465,col 60)",
            "(line 467,col 5)-(line 467,col 47)",
            "(line 468,col 5)-(line 468,col 74)",
            "(line 469,col 5)-(line 469,col 43)",
            "(line 471,col 5)-(line 471,col 64)",
            "(line 473,col 5)-(line 473,col 66)",
            "(line 474,col 5)-(line 475,col 38)",
            "(line 477,col 5)-(line 477,col 52)",
            "(line 478,col 5)-(line 478,col 46)",
            "(line 480,col 5)-(line 480,col 61)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.count(java.lang.String)",
        "snippet": "  FilePosition count(String js) {\n    int line = 0, column = 0;\n    for (int i = 0; i < js.length(); i++) {\n      if (js.charAt(i) == '\\n') {\n        line++;\n        column = 0;\n      } else {\n        column++;\n      }\n    }\n    return new FilePosition(line, column);\n  }\n",
        "begin_line": 483,
        "end_line": 494,
        "comment": "",
        "child_ranges": [
            "(line 484,col 5)-(line 484,col 29)",
            "(line 485,col 5)-(line 492,col 5)",
            "(line 493,col 5)-(line 493,col 42)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test",
        "child_classes": [],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapGeneratorV3Test.java",
        "signature": "com.google.debugging.sourcemap.SourceMapGeneratorV3Test.appendAndCount(java.lang.Appendable, java.lang.String)",
        "snippet": "  FilePosition appendAndCount(Appendable out, String js) throws IOException {\n    out.append(js);\n    return count(js);\n  }\n",
        "begin_line": 496,
        "end_line": 499,
        "comment": "",
        "child_ranges": [
            "(line 497,col 5)-(line 497,col 19)",
            "(line 498,col 5)-(line 498,col 21)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.SourceMapTestCase()",
        "snippet": "  public SourceMapTestCase() {\n  }\n",
        "begin_line": 42,
        "end_line": 43,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.disableColumnValidation()",
        "snippet": "  void disableColumnValidation() {\n    validateColumns = false;\n  }\n",
        "begin_line": 45,
        "end_line": 47,
        "comment": "",
        "child_ranges": [
            "(line 46,col 5)-(line 46,col 28)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.Token.Token(java.lang.String, java.lang.String, com.google.debugging.sourcemap.FilePosition)",
        "snippet": "      Token(String tokenName, String inputName, FilePosition position) {\n        this.tokenName = tokenName;\n        this.inputName = inputName;\n        this.position = position;\n      }\n",
        "begin_line": 66,
        "end_line": 70,
        "comment": "",
        "child_ranges": [
            "(line 67,col 9)-(line 67,col 35)",
            "(line 68,col 9)-(line 68,col 35)",
            "(line 69,col 9)-(line 69,col 33)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.setUp()",
        "snippet": "  @Override\n  public void setUp() {\n    detailLevel = SourceMap.DetailLevel.ALL;\n  }\n",
        "begin_line": 73,
        "end_line": 76,
        "comment": "",
        "child_ranges": [
            "(line 75,col 5)-(line 75,col 44)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(java.lang.String, java.lang.String)",
        "snippet": "  protected void checkSourceMap(String js, String expectedMap)\n      throws IOException {\n    checkSourceMap(\"testcode\", js, expectedMap);\n  }\n",
        "begin_line": 82,
        "end_line": 85,
        "comment": "\n   * Creates a source map for the given JS code and asserts it is\n   * equal to the expected golden map.\n   ",
        "child_ranges": [
            "(line 84,col 5)-(line 84,col 48)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.getSourceMap(com.google.debugging.sourcemap.SourceMapTestCase.RunResult)",
        "snippet": "  protected String getSourceMap(RunResult result) throws IOException {\n    StringBuilder sb = new StringBuilder();\n    result.sourceMap.appendTo(sb, \"testcode\");\n    return sb.toString();\n  }\n",
        "begin_line": 87,
        "end_line": 91,
        "comment": "",
        "child_ranges": [
            "(line 88,col 5)-(line 88,col 43)",
            "(line 89,col 5)-(line 89,col 46)",
            "(line 90,col 5)-(line 90,col 25)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.checkSourceMap(java.lang.String, java.lang.String, java.lang.String)",
        "snippet": "  protected void checkSourceMap(String fileName, String js, String expectedMap)\n      throws IOException {\n    RunResult result = compile(js, fileName);\n    assertEquals(expectedMap, result.sourceMapFileContent);\n    assertEquals(result.sourceMapFileContent, getSourceMap(result));\n  }\n",
        "begin_line": 93,
        "end_line": 98,
        "comment": "",
        "child_ranges": [
            "(line 95,col 5)-(line 95,col 45)",
            "(line 96,col 5)-(line 96,col 59)",
            "(line 97,col 5)-(line 97,col 68)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.findTokens(java.util.Map<java.lang.String, java.lang.String>)",
        "snippet": "  private Map<String, Token> findTokens(Map<String, String> inputs) {\n    Map<String, Token> tokens = Maps.newLinkedHashMap();\n\n    for (Entry<String, String> entry : inputs.entrySet()) {\n      findTokens(tokens, entry.getKey(), entry.getValue());\n    }\n\n    return tokens;\n  }\n",
        "begin_line": 104,
        "end_line": 112,
        "comment": "\n   * Finds the all the __XX__ tokens in the given Javascript\n   * string.\n   ",
        "child_ranges": [
            "(line 105,col 5)-(line 105,col 56)",
            "(line 107,col 5)-(line 109,col 5)",
            "(line 111,col 5)-(line 111,col 18)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.findTokens(java.lang.String)",
        "snippet": "  private Map<String, Token> findTokens(String src) {\n    Map<String, Token> tokens = Maps.newLinkedHashMap();\n\n    findTokens(tokens, \"\", src);\n\n    return tokens;\n  }\n",
        "begin_line": 118,
        "end_line": 124,
        "comment": "\n   * Finds the all the __XX__ tokens in the given Javascript\n   * string.\n   ",
        "child_ranges": [
            "(line 119,col 5)-(line 119,col 56)",
            "(line 121,col 5)-(line 121,col 32)",
            "(line 123,col 5)-(line 123,col 18)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.findTokens(java.util.Map<java.lang.String, com.google.debugging.sourcemap.SourceMapTestCase.Token>, java.lang.String, java.lang.String)",
        "snippet": "  private Map<String, Token> findTokens(\n    Map<String, Token> tokens, String inputName, String js) {\n\n    int currentLine = 0;\n    int positionOffset = 0;\n\n    for (int i = 0; i < js.length(); ++i) {\n      char current = js.charAt(i);\n\n      if (current == '\\n') {\n        positionOffset = i + 1;\n        currentLine++;\n        continue;\n      }\n\n      if (current == '_' && (i < js.length() - 5)) {\n        // Check for the _ token.\n        if (js.charAt(i + 1) != '_') {\n          continue;\n        }\n\n        // Loop until we have another _ token.\n        String tokenName = \"\";\n\n        int j = i + 2;\n        for (; j < js.length(); ++j) {\n          if (js.charAt(j) == '_') {\n            break;\n          }\n\n          tokenName += js.charAt(j);\n        }\n\n        if (tokenName.length() > 0) {\n          int currentPosition = i - positionOffset;\n          Token token = new Token(\n              tokenName, inputName,\n              new FilePosition(currentLine, currentPosition));\n          tokens.put(tokenName, token);\n        }\n\n        i = j;\n      }\n    }\n\n    return tokens;\n  }\n",
        "begin_line": 130,
        "end_line": 176,
        "comment": "\n   * Finds the all the __XX__ tokens in the given Javascript\n   * string.\n   ",
        "child_ranges": [
            "(line 133,col 5)-(line 133,col 24)",
            "(line 134,col 5)-(line 134,col 27)",
            "(line 136,col 5)-(line 173,col 5)",
            "(line 175,col 5)-(line 175,col 18)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.getSourceMapFormat()",
        "snippet": "  abstract protected SourceMap.Format getSourceMapFormat();\n",
        "begin_line": 178,
        "end_line": 178,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.getSourceMapConsumer()",
        "snippet": "  abstract protected SourceMapConsumer getSourceMapConsumer();\n",
        "begin_line": 180,
        "end_line": 180,
        "comment": "",
        "child_ranges": []
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.compileAndCheck(java.lang.String)",
        "snippet": "  protected void compileAndCheck(String js) {\n    String inputName = \"testcode\";\n    RunResult result = compile(js, inputName);\n    check(inputName, js, result.generatedSource, result.sourceMapFileContent);\n  }\n",
        "begin_line": 182,
        "end_line": 186,
        "comment": "",
        "child_ranges": [
            "(line 183,col 5)-(line 183,col 34)",
            "(line 184,col 5)-(line 184,col 46)",
            "(line 185,col 5)-(line 185,col 78)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.check(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
        "snippet": "  protected void check(\n      String inputName, String input, String output,\n      String sourceMapFileContent) {\n    Map<String, String> inputMap = new LinkedHashMap<String, String>();\n    inputMap.put(inputName, input);\n    check(inputMap, output, sourceMapFileContent);\n  }\n",
        "begin_line": 188,
        "end_line": 194,
        "comment": "",
        "child_ranges": [
            "(line 191,col 5)-(line 191,col 71)",
            "(line 192,col 5)-(line 192,col 35)",
            "(line 193,col 5)-(line 193,col 50)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.check(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.lang.String)",
        "snippet": "  protected void check(\n      Map<String, String> originalInputs, String generatedSource,\n      String sourceMapFileContent) {\n    check(originalInputs, generatedSource, sourceMapFileContent, null);\n  }\n",
        "begin_line": 196,
        "end_line": 200,
        "comment": "",
        "child_ranges": [
            "(line 199,col 5)-(line 199,col 71)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.check(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.lang.String, com.google.debugging.sourcemap.SourceMapSupplier)",
        "snippet": "  protected void check(\n      Map<String, String> originalInputs, String generatedSource,\n      String sourceMapFileContent, SourceMapSupplier supplier) {\n    // Find all instances of the __XXX__ pattern in the original\n    // source code.\n    Map<String, Token> originalTokens = findTokens(originalInputs);\n\n    // Find all instances of the __XXX__ pattern in the generated\n    // source code.\n    Map<String, Token> resultTokens = findTokens(generatedSource);\n\n    // Ensure that the generated instances match via the source map\n    // to the original source code.\n\n    // Ensure the token counts match.\n    assertEquals(originalTokens.size(), resultTokens.size());\n\n    SourceMapping reader;\n    try {\n      reader = SourceMapConsumerFactory.parse(sourceMapFileContent, supplier);\n    } catch (SourceMapParseException e) {\n      throw new RuntimeException(\"unexpected exception\", e);\n    }\n\n    // Map the tokens from the generated source back to the\n    // input source and ensure that the map is correct.\n    for (Token token : resultTokens.values()) {\n      OriginalMapping mapping = reader.getMappingForLine(\n          token.position.getLine() + 1,\n          token.position.getColumn() + 1);\n\n      assertNotNull(mapping);\n\n      // Find the associated token in the input source.\n      Token inputToken = originalTokens.get(token.tokenName);\n      assertNotNull(inputToken);\n      assertEquals(mapping.getOriginalFile(), inputToken.inputName);\n\n      // Ensure that the map correctly points to the token (we add 1\n      // to normalize versus the Rhino line number indexing scheme).\n      assertEquals(mapping.getLineNumber(),\n                   inputToken.position.getLine() + 1);\n\n      int start = inputToken.position.getColumn() + 1;\n      if (inputToken.tokenName.startsWith(\"STR\")) {\n        // include the preceding quote.\n        start--;\n      }\n\n      if (validateColumns) {\n        assertEquals(start, mapping.getColumnPosition());\n      }\n\n      // Ensure that if the token name does not being with an 'STR' (meaning a\n      // string) it has an original name.\n      if (!inputToken.tokenName.startsWith(\"STR\")) {\n        assertTrue(\"missing name for \" + inputToken.tokenName,\n            !mapping.getIdentifier().isEmpty());\n      }\n\n      // Ensure that if the mapping has a name, it matches the token.\n      if (!mapping.getIdentifier().isEmpty()) {\n        assertEquals(mapping.getIdentifier(),\n            \"__\" + inputToken.tokenName + \"__\");\n      }\n    }\n  }\n",
        "begin_line": 202,
        "end_line": 268,
        "comment": "",
        "child_ranges": [
            "(line 207,col 5)-(line 207,col 67)",
            "(line 211,col 5)-(line 211,col 66)",
            "(line 217,col 5)-(line 217,col 61)",
            "(line 219,col 5)-(line 219,col 25)",
            "(line 220,col 5)-(line 224,col 5)",
            "(line 228,col 5)-(line 267,col 5)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.compile(java.lang.String, java.lang.String)",
        "snippet": "  protected RunResult compile(String js, String fileName) {\n    return compile(js, fileName, null, null);\n  }\n",
        "begin_line": 270,
        "end_line": 272,
        "comment": "",
        "child_ranges": [
            "(line 271,col 5)-(line 271,col 45)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.getCompilerOptions()",
        "snippet": "  protected CompilerOptions getCompilerOptions() {\n    CompilerOptions options = new CompilerOptions();\n    options.sourceMapOutputPath = \"testcode_source_map.out\";\n    options.sourceMapFormat = getSourceMapFormat();\n    options.sourceMapDetailLevel = detailLevel;\n    return options;\n  }\n",
        "begin_line": 274,
        "end_line": 280,
        "comment": "",
        "child_ranges": [
            "(line 275,col 5)-(line 275,col 52)",
            "(line 276,col 5)-(line 276,col 60)",
            "(line 277,col 5)-(line 277,col 51)",
            "(line 278,col 5)-(line 278,col 47)",
            "(line 279,col 5)-(line 279,col 19)"
        ]
    },
    {
        "class_name": "com.google.debugging.sourcemap.SourceMapTestCase",
        "child_classes": [
            "com.google.debugging.sourcemap.SourceMapGeneratorV3Test"
        ],
        "src_path": "test/com/google/debugging/sourcemap/SourceMapTestCase.java",
        "signature": "com.google.debugging.sourcemap.SourceMapTestCase.compile(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
        "snippet": "  protected RunResult compile(\n      String js1, String fileName1, String js2, String fileName2) {\n    Compiler compiler = new Compiler();\n    CompilerOptions options = getCompilerOptions();\n\n    // Turn on IDE mode to get rid of optimizations.\n    options.ideMode = true;\n\n    JSSourceFile[] inputs = { JSSourceFile.fromCode(fileName1, js1) };\n\n    if (js2 != null && fileName2 != null) {\n      JSSourceFile[] multiple =  { JSSourceFile.fromCode(fileName1, js1),\n                                   JSSourceFile.fromCode(fileName2, js2) };\n      inputs = multiple;\n    }\n\n    Result result = compiler.compile(EXTERNS, inputs, options);\n\n    assertTrue(\"compilation failed\", result.success);\n    String source = compiler.toSource();\n\n    StringBuilder sb = new StringBuilder();\n    try {\n      result.sourceMap.validate(true);\n      result.sourceMap.appendTo(sb, \"testcode\");\n    } catch (IOException e) {\n      throw new RuntimeException(\"unexpected exception\", e);\n    }\n\n    RunResult rr = new RunResult();\n    rr.generatedSource = source;\n    rr.sourceMap = result.sourceMap;\n    rr.sourceMapFileContent = sb.toString();\n    return rr;\n  }\n",
        "begin_line": 282,
        "end_line": 316,
        "comment": "",
        "child_ranges": [
            "(line 284,col 5)-(line 284,col 39)",
            "(line 285,col 5)-(line 285,col 51)",
            "(line 288,col 5)-(line 288,col 27)",
            "(line 290,col 5)-(line 290,col 70)",
            "(line 292,col 5)-(line 296,col 5)",
            "(line 298,col 5)-(line 298,col 63)",
            "(line 300,col 5)-(line 300,col 53)",
            "(line 301,col 5)-(line 301,col 40)",
            "(line 303,col 5)-(line 303,col 43)",
            "(line 304,col 5)-(line 309,col 5)",
            "(line 311,col 5)-(line 311,col 35)",
            "(line 312,col 5)-(line 312,col 32)",
            "(line 313,col 5)-(line 313,col 36)",
            "(line 314,col 5)-(line 314,col 44)",
            "(line 315,col 5)-(line 315,col 14)"
        ]
    }
]